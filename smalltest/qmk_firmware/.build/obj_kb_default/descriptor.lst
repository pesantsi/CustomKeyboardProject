   1               		.file	"descriptor.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.CALLBACK_USB_GetDescriptor,"ax",@progbits
  11               	.global	CALLBACK_USB_GetDescriptor
  13               	CALLBACK_USB_GetDescriptor:
  14               	.LVL0:
  15               	.LFB100:
  16               		.file 1 "./tmk_core/protocol/lufa/descriptor.c"
   1:./tmk_core/protocol/lufa/descriptor.c **** /* 
   2:./tmk_core/protocol/lufa/descriptor.c ****  * Copyright 2012 Jun Wako <wakojun@gmail.com>
   3:./tmk_core/protocol/lufa/descriptor.c ****  * This file is based on:
   4:./tmk_core/protocol/lufa/descriptor.c ****  *     LUFA-120219/Demos/Device/Lowlevel/KeyboardMouse
   5:./tmk_core/protocol/lufa/descriptor.c ****  *     LUFA-120219/Demos/Device/Lowlevel/GenericHID
   6:./tmk_core/protocol/lufa/descriptor.c ****  */
   7:./tmk_core/protocol/lufa/descriptor.c **** 
   8:./tmk_core/protocol/lufa/descriptor.c **** /*
   9:./tmk_core/protocol/lufa/descriptor.c ****              LUFA Library
  10:./tmk_core/protocol/lufa/descriptor.c ****      Copyright (C) Dean Camera, 2012.
  11:./tmk_core/protocol/lufa/descriptor.c **** 
  12:./tmk_core/protocol/lufa/descriptor.c ****   dean [at] fourwalledcubicle [dot] com
  13:./tmk_core/protocol/lufa/descriptor.c ****            www.lufa-lib.org
  14:./tmk_core/protocol/lufa/descriptor.c **** */
  15:./tmk_core/protocol/lufa/descriptor.c **** 
  16:./tmk_core/protocol/lufa/descriptor.c **** /*
  17:./tmk_core/protocol/lufa/descriptor.c ****   Copyright 2012  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  18:./tmk_core/protocol/lufa/descriptor.c ****   Copyright 2010  Denver Gingerich (denver [at] ossguy [dot] com)
  19:./tmk_core/protocol/lufa/descriptor.c **** 
  20:./tmk_core/protocol/lufa/descriptor.c ****   Permission to use, copy, modify, distribute, and sell this
  21:./tmk_core/protocol/lufa/descriptor.c ****   software and its documentation for any purpose is hereby granted
  22:./tmk_core/protocol/lufa/descriptor.c ****   without fee, provided that the above copyright notice appear in
  23:./tmk_core/protocol/lufa/descriptor.c ****   all copies and that both that the copyright notice and this
  24:./tmk_core/protocol/lufa/descriptor.c ****   permission notice and warranty disclaimer appear in supporting
  25:./tmk_core/protocol/lufa/descriptor.c ****   documentation, and that the name of the author not be used in
  26:./tmk_core/protocol/lufa/descriptor.c ****   advertising or publicity pertaining to distribution of the
  27:./tmk_core/protocol/lufa/descriptor.c ****   software without specific, written prior permission.
  28:./tmk_core/protocol/lufa/descriptor.c **** 
  29:./tmk_core/protocol/lufa/descriptor.c ****   The author disclaim all warranties with regard to this
  30:./tmk_core/protocol/lufa/descriptor.c ****   software, including all implied warranties of merchantability
  31:./tmk_core/protocol/lufa/descriptor.c ****   and fitness.  In no event shall the author be liable for any
  32:./tmk_core/protocol/lufa/descriptor.c ****   special, indirect or consequential damages or any damages
  33:./tmk_core/protocol/lufa/descriptor.c ****   whatsoever resulting from loss of use, data or profits, whether
  34:./tmk_core/protocol/lufa/descriptor.c ****   in an action of contract, negligence or other tortious action,
  35:./tmk_core/protocol/lufa/descriptor.c ****   arising out of or in connection with the use or performance of
  36:./tmk_core/protocol/lufa/descriptor.c ****   this software.
  37:./tmk_core/protocol/lufa/descriptor.c **** */
  38:./tmk_core/protocol/lufa/descriptor.c **** 
  39:./tmk_core/protocol/lufa/descriptor.c **** #include "util.h"
  40:./tmk_core/protocol/lufa/descriptor.c **** #include "report.h"
  41:./tmk_core/protocol/lufa/descriptor.c **** #include "descriptor.h"
  42:./tmk_core/protocol/lufa/descriptor.c **** 
  43:./tmk_core/protocol/lufa/descriptor.c **** #ifndef USB_MAX_POWER_CONSUMPTION
  44:./tmk_core/protocol/lufa/descriptor.c **** #define USB_MAX_POWER_CONSUMPTION 500
  45:./tmk_core/protocol/lufa/descriptor.c **** #endif
  46:./tmk_core/protocol/lufa/descriptor.c **** 
  47:./tmk_core/protocol/lufa/descriptor.c **** /*******************************************************************************
  48:./tmk_core/protocol/lufa/descriptor.c ****  * HID Report Descriptors
  49:./tmk_core/protocol/lufa/descriptor.c ****  ******************************************************************************/
  50:./tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_HIDReport_Datatype_t PROGMEM KeyboardReport[] =
  51:./tmk_core/protocol/lufa/descriptor.c **** {
  52:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE_PAGE(8, 0x01), /* Generic Desktop */
  53:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE(8, 0x06), /* Keyboard */
  54:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_COLLECTION(8, 0x01), /* Application */
  55:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_PAGE(8, 0x07), /* Key Codes */
  56:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(8, 0xE0), /* Keyboard Left Control */
  57:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(8, 0xE7), /* Keyboard Right GUI */
  58:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(8, 0x00),
  59:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(8, 0x01),
  60:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x08),
  61:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x01),
  62:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE),
  63:./tmk_core/protocol/lufa/descriptor.c **** 
  64:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x01),
  65:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x08),
  66:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_CONSTANT),  /* reserved */
  67:./tmk_core/protocol/lufa/descriptor.c **** 
  68:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_PAGE(8, 0x08), /* LEDs */
  69:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(8, 0x01), /* Num Lock */
  70:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(8, 0x05), /* Kana */
  71:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x05),
  72:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x01),
  73:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_OUTPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE | HID_IOF_NON_VOLATILE)
  74:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x01),
  75:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x03),
  76:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_OUTPUT(8, HID_IOF_CONSTANT),
  77:./tmk_core/protocol/lufa/descriptor.c **** 
  78:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_PAGE(8, 0x07), /* Keyboard */
  79:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(8, 0x00), /* Reserved (no event indicated) */
  80:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(8, 0xFF), /* Keyboard Application */
  81:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(8, 0x00),
  82:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(16, 0x00FF),
  83:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x06),
  84:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x08),
  85:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_ARRAY | HID_IOF_ABSOLUTE),
  86:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_END_COLLECTION(0),
  87:./tmk_core/protocol/lufa/descriptor.c **** };
  88:./tmk_core/protocol/lufa/descriptor.c **** 
  89:./tmk_core/protocol/lufa/descriptor.c **** #ifdef MOUSE_ENABLE
  90:./tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_HIDReport_Datatype_t PROGMEM MouseReport[] =
  91:./tmk_core/protocol/lufa/descriptor.c **** {
  92:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE_PAGE(8, 0x01), /* Generic Desktop */
  93:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE(8, 0x02), /* Mouse */
  94:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_COLLECTION(8, 0x01), /* Application */
  95:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE(8, 0x01), /* Pointer */
  96:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_COLLECTION(8, 0x00), /* Physical */
  97:./tmk_core/protocol/lufa/descriptor.c **** 
  98:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE_PAGE(8, 0x09), /* Button */
  99:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE_MINIMUM(8, 0x01),  /* Button 1 */
 100:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE_MAXIMUM(8, 0x05),  /* Button 5 */
 101:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MINIMUM(8, 0x00),
 102:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MAXIMUM(8, 0x01),
 103:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_COUNT(8, 0x05),
 104:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_SIZE(8, 0x01),
 105:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE),
 106:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_COUNT(8, 0x01),
 107:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_SIZE(8, 0x03),
 108:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_INPUT(8, HID_IOF_CONSTANT),
 109:./tmk_core/protocol/lufa/descriptor.c **** 
 110:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE_PAGE(8, 0x01), /* Generic Desktop */
 111:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE(8, 0x30), /* Usage X */
 112:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE(8, 0x31), /* Usage Y */
 113:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MINIMUM(8, -127),
 114:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MAXIMUM(8, 127),
 115:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_COUNT(8, 0x02),
 116:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_SIZE(8, 0x08),
 117:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_RELATIVE),
 118:./tmk_core/protocol/lufa/descriptor.c **** 
 119:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE(8, 0x38), /* Wheel */
 120:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MINIMUM(8, -127),
 121:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MAXIMUM(8, 127),
 122:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_COUNT(8, 0x01),
 123:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_SIZE(8, 0x08),
 124:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_RELATIVE),
 125:./tmk_core/protocol/lufa/descriptor.c **** 
 126:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE_PAGE(8, 0x0C), /* Consumer */
 127:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_USAGE(16, 0x0238), /* AC Pan (Horizontal wheel) */
 128:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MINIMUM(8, -127),
 129:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MAXIMUM(8, 127),
 130:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_COUNT(8, 0x01),
 131:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_REPORT_SIZE(8, 0x08),
 132:./tmk_core/protocol/lufa/descriptor.c ****             HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_RELATIVE),
 133:./tmk_core/protocol/lufa/descriptor.c **** 
 134:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_END_COLLECTION(0),
 135:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_END_COLLECTION(0),
 136:./tmk_core/protocol/lufa/descriptor.c **** };
 137:./tmk_core/protocol/lufa/descriptor.c **** #endif
 138:./tmk_core/protocol/lufa/descriptor.c **** 
 139:./tmk_core/protocol/lufa/descriptor.c **** #ifdef EXTRAKEY_ENABLE
 140:./tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_HIDReport_Datatype_t PROGMEM ExtrakeyReport[] =
 141:./tmk_core/protocol/lufa/descriptor.c **** {
 142:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE_PAGE(8, 0x01), /* Generic Desktop */
 143:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE(8, 0x80), /* System Control */
 144:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_COLLECTION(8, 0x01), /* Application */
 145:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_ID(8, REPORT_ID_SYSTEM),
 146:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(16, 0x0001),
 147:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(16, 0x0003),
 148:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(16, 0x0081), /* System Power Down */
 149:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(16, 0x0083), /* System Wake Up */
 150:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 16),
 151:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 1),
 152:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_ARRAY | HID_IOF_ABSOLUTE),
 153:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_END_COLLECTION(0),
 154:./tmk_core/protocol/lufa/descriptor.c **** 
 155:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE_PAGE(8, 0x0C), /* Consumer */
 156:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE(8, 0x01), /* Consumer Control */
 157:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_COLLECTION(8, 0x01), /* Application */
 158:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_ID(8, REPORT_ID_CONSUMER),
 159:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(16, 0x0001),
 160:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(16, 0x029C),
 161:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(16, 0x0001), /* +10 */
 162:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(16, 0x029C), /* AC Distribute Vertically */
 163:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 16),
 164:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 1),
 165:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_ARRAY | HID_IOF_ABSOLUTE),
 166:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_END_COLLECTION(0),
 167:./tmk_core/protocol/lufa/descriptor.c **** };
 168:./tmk_core/protocol/lufa/descriptor.c **** #endif
 169:./tmk_core/protocol/lufa/descriptor.c **** 
 170:./tmk_core/protocol/lufa/descriptor.c **** #ifdef RAW_ENABLE
 171:./tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_HIDReport_Datatype_t PROGMEM RawReport[] =
 172:./tmk_core/protocol/lufa/descriptor.c **** {
 173:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE_PAGE(16, 0xFF60), /* Vendor Page 0xFF60 */
 174:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE(8, 0x61), /* Vendor Usage 0x61 */
 175:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_COLLECTION(8, 0x01), /* Application */
 176:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE(8, 0x62), /* Vendor Usage 0x62 */
 177:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(8, 0x00),
 178:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(16, 0x00FF),
 179:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, RAW_EPSIZE),
 180:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x08),
 181:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE),
 182:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE(8, 0x63), /* Vendor Usage 0x63 */
 183:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(8, 0x00),
 184:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(16, 0x00FF),
 185:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, RAW_EPSIZE),
 186:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x08),
 187:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_OUTPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE | HID_IOF_NON_VOLATILE)
 188:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_END_COLLECTION(0),
 189:./tmk_core/protocol/lufa/descriptor.c **** };
 190:./tmk_core/protocol/lufa/descriptor.c **** #endif
 191:./tmk_core/protocol/lufa/descriptor.c **** 
 192:./tmk_core/protocol/lufa/descriptor.c **** #ifdef CONSOLE_ENABLE
 193:./tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_HIDReport_Datatype_t PROGMEM ConsoleReport[] =
 194:./tmk_core/protocol/lufa/descriptor.c **** {
 195:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE_PAGE(16, 0xFF31), /* Vendor Page(PJRC Teensy compatible) */
 196:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE(8, 0x74), /* Vendor Usage(PJRC Teensy compatible) */
 197:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_COLLECTION(8, 0x01), /* Application */
 198:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE(8, 0x75), /* Vendor Usage 0x75 */
 199:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(8, 0x00),
 200:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(16, 0x00FF),
 201:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, CONSOLE_EPSIZE),
 202:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x08),
 203:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE),
 204:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE(8, 0x76), /* Vendor Usage 0x76 */
 205:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(8, 0x00),
 206:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(16, 0x00FF),
 207:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, CONSOLE_EPSIZE),
 208:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x08),
 209:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_OUTPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE | HID_IOF_NON_VOLATILE)
 210:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_END_COLLECTION(0),
 211:./tmk_core/protocol/lufa/descriptor.c **** };
 212:./tmk_core/protocol/lufa/descriptor.c **** #endif
 213:./tmk_core/protocol/lufa/descriptor.c **** 
 214:./tmk_core/protocol/lufa/descriptor.c **** #ifdef NKRO_ENABLE
 215:./tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_HIDReport_Datatype_t PROGMEM NKROReport[] =
 216:./tmk_core/protocol/lufa/descriptor.c **** {
 217:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE_PAGE(8, 0x01), /* Generic Desktop */
 218:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_USAGE(8, 0x06), /* Keyboard */
 219:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_COLLECTION(8, 0x01), /* Application */
 220:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_PAGE(8, 0x07), /* Key Codes */
 221:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(8, 0xE0), /* Keyboard Left Control */
 222:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(8, 0xE7), /* Keyboard Right GUI */
 223:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(8, 0x00),
 224:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(8, 0x01),
 225:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x08),
 226:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x01),
 227:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE),
 228:./tmk_core/protocol/lufa/descriptor.c **** 
 229:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_PAGE(8, 0x08), /* LEDs */
 230:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(8, 0x01), /* Num Lock */
 231:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(8, 0x05), /* Kana */
 232:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x05),
 233:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x01),
 234:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_OUTPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE | HID_IOF_NON_VOLATILE)
 235:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x01),
 236:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x03),
 237:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_OUTPUT(8, HID_IOF_CONSTANT),
 238:./tmk_core/protocol/lufa/descriptor.c **** 
 239:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_PAGE(8, 0x07), /* Key Codes */
 240:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(8, 0x00), /* Keyboard 0 */
 241:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(8, (NKRO_EPSIZE-1)*8-1), /* Keyboard Right GUI */
 242:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(8, 0x00),
 243:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(8, 0x01),
 244:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, (NKRO_EPSIZE-1)*8),
 245:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x01),
 246:./tmk_core/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE),
 247:./tmk_core/protocol/lufa/descriptor.c ****     HID_RI_END_COLLECTION(0),
 248:./tmk_core/protocol/lufa/descriptor.c **** };
 249:./tmk_core/protocol/lufa/descriptor.c **** #endif
 250:./tmk_core/protocol/lufa/descriptor.c **** 
 251:./tmk_core/protocol/lufa/descriptor.c **** /*******************************************************************************
 252:./tmk_core/protocol/lufa/descriptor.c ****  * Device Descriptors
 253:./tmk_core/protocol/lufa/descriptor.c ****  ******************************************************************************/
 254:./tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_Device_t PROGMEM DeviceDescriptor =
 255:./tmk_core/protocol/lufa/descriptor.c **** {
 256:./tmk_core/protocol/lufa/descriptor.c ****     .Header                 = {.Size = sizeof(USB_Descriptor_Device_t), .Type = DTYPE_Device},
 257:./tmk_core/protocol/lufa/descriptor.c **** 
 258:./tmk_core/protocol/lufa/descriptor.c ****     .USBSpecification       = VERSION_BCD(1,1,0),
 259:./tmk_core/protocol/lufa/descriptor.c **** #if VIRTSER_ENABLE
 260:./tmk_core/protocol/lufa/descriptor.c ****     .Class                  = USB_CSCP_IADDeviceClass,
 261:./tmk_core/protocol/lufa/descriptor.c ****     .SubClass               = USB_CSCP_IADDeviceSubclass,
 262:./tmk_core/protocol/lufa/descriptor.c ****     .Protocol               = USB_CSCP_IADDeviceProtocol,
 263:./tmk_core/protocol/lufa/descriptor.c **** #else
 264:./tmk_core/protocol/lufa/descriptor.c ****     .Class                  = USB_CSCP_NoDeviceClass,
 265:./tmk_core/protocol/lufa/descriptor.c ****     .SubClass               = USB_CSCP_NoDeviceSubclass,
 266:./tmk_core/protocol/lufa/descriptor.c ****     .Protocol               = USB_CSCP_NoDeviceProtocol,
 267:./tmk_core/protocol/lufa/descriptor.c **** #endif
 268:./tmk_core/protocol/lufa/descriptor.c **** 
 269:./tmk_core/protocol/lufa/descriptor.c ****     .Endpoint0Size          = FIXED_CONTROL_ENDPOINT_SIZE,
 270:./tmk_core/protocol/lufa/descriptor.c **** 
 271:./tmk_core/protocol/lufa/descriptor.c ****     /* specified in config.h */
 272:./tmk_core/protocol/lufa/descriptor.c ****     .VendorID               = VENDOR_ID,
 273:./tmk_core/protocol/lufa/descriptor.c ****     .ProductID              = PRODUCT_ID,
 274:./tmk_core/protocol/lufa/descriptor.c ****     .ReleaseNumber          = DEVICE_VER,
 275:./tmk_core/protocol/lufa/descriptor.c **** 
 276:./tmk_core/protocol/lufa/descriptor.c ****     .ManufacturerStrIndex   = 0x01,
 277:./tmk_core/protocol/lufa/descriptor.c ****     .ProductStrIndex        = 0x02,
 278:./tmk_core/protocol/lufa/descriptor.c ****     .SerialNumStrIndex      = NO_DESCRIPTOR,
 279:./tmk_core/protocol/lufa/descriptor.c **** 
 280:./tmk_core/protocol/lufa/descriptor.c ****     .NumberOfConfigurations = FIXED_NUM_CONFIGURATIONS
 281:./tmk_core/protocol/lufa/descriptor.c **** };
 282:./tmk_core/protocol/lufa/descriptor.c **** 
 283:./tmk_core/protocol/lufa/descriptor.c **** /*******************************************************************************
 284:./tmk_core/protocol/lufa/descriptor.c ****  * Configuration Descriptors
 285:./tmk_core/protocol/lufa/descriptor.c ****  ******************************************************************************/
 286:./tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_Configuration_t PROGMEM ConfigurationDescriptor =
 287:./tmk_core/protocol/lufa/descriptor.c **** {
 288:./tmk_core/protocol/lufa/descriptor.c ****     .Config =
 289:./tmk_core/protocol/lufa/descriptor.c ****         {
 290:./tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Configuration_Header_t), .Type
 291:./tmk_core/protocol/lufa/descriptor.c **** 
 292:./tmk_core/protocol/lufa/descriptor.c ****             .TotalConfigurationSize = sizeof(USB_Descriptor_Configuration_t),
 293:./tmk_core/protocol/lufa/descriptor.c ****             .TotalInterfaces        = TOTAL_INTERFACES,
 294:./tmk_core/protocol/lufa/descriptor.c **** 
 295:./tmk_core/protocol/lufa/descriptor.c ****             .ConfigurationNumber    = 1,
 296:./tmk_core/protocol/lufa/descriptor.c ****             .ConfigurationStrIndex  = NO_DESCRIPTOR,
 297:./tmk_core/protocol/lufa/descriptor.c **** 
 298:./tmk_core/protocol/lufa/descriptor.c ****             .ConfigAttributes       = (USB_CONFIG_ATTR_RESERVED | USB_CONFIG_ATTR_REMOTEWAKEUP),
 299:./tmk_core/protocol/lufa/descriptor.c **** 
 300:./tmk_core/protocol/lufa/descriptor.c ****             .MaxPowerConsumption    = USB_CONFIG_POWER_MA(USB_MAX_POWER_CONSUMPTION)
 301:./tmk_core/protocol/lufa/descriptor.c ****         },
 302:./tmk_core/protocol/lufa/descriptor.c **** 
 303:./tmk_core/protocol/lufa/descriptor.c ****     /*
 304:./tmk_core/protocol/lufa/descriptor.c ****      * Keyboard
 305:./tmk_core/protocol/lufa/descriptor.c ****      */
 306:./tmk_core/protocol/lufa/descriptor.c ****     .Keyboard_Interface =
 307:./tmk_core/protocol/lufa/descriptor.c ****         {
 308:./tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = DTYPE_In
 309:./tmk_core/protocol/lufa/descriptor.c **** 
 310:./tmk_core/protocol/lufa/descriptor.c ****             .InterfaceNumber        = KEYBOARD_INTERFACE,
 311:./tmk_core/protocol/lufa/descriptor.c ****             .AlternateSetting       = 0x00,
 312:./tmk_core/protocol/lufa/descriptor.c **** 
 313:./tmk_core/protocol/lufa/descriptor.c ****             .TotalEndpoints         = 1,
 314:./tmk_core/protocol/lufa/descriptor.c **** 
 315:./tmk_core/protocol/lufa/descriptor.c ****             .Class                  = HID_CSCP_HIDClass,
 316:./tmk_core/protocol/lufa/descriptor.c ****             .SubClass               = HID_CSCP_BootSubclass,
 317:./tmk_core/protocol/lufa/descriptor.c ****             .Protocol               = HID_CSCP_KeyboardBootProtocol,
 318:./tmk_core/protocol/lufa/descriptor.c **** 
 319:./tmk_core/protocol/lufa/descriptor.c ****             .InterfaceStrIndex      = NO_DESCRIPTOR
 320:./tmk_core/protocol/lufa/descriptor.c ****         },
 321:./tmk_core/protocol/lufa/descriptor.c **** 
 322:./tmk_core/protocol/lufa/descriptor.c ****     .Keyboard_HID =
 323:./tmk_core/protocol/lufa/descriptor.c ****         {
 324:./tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_HID_Descriptor_HID_t), .Type = HID_DTYPE_
 325:./tmk_core/protocol/lufa/descriptor.c **** 
 326:./tmk_core/protocol/lufa/descriptor.c ****             .HIDSpec                = VERSION_BCD(1,1,1),
 327:./tmk_core/protocol/lufa/descriptor.c ****             .CountryCode            = 0x00,
 328:./tmk_core/protocol/lufa/descriptor.c ****             .TotalReportDescriptors = 1,
 329:./tmk_core/protocol/lufa/descriptor.c ****             .HIDReportType          = HID_DTYPE_Report,
 330:./tmk_core/protocol/lufa/descriptor.c ****             .HIDReportLength        = sizeof(KeyboardReport)
 331:./tmk_core/protocol/lufa/descriptor.c ****         },
 332:./tmk_core/protocol/lufa/descriptor.c **** 
 333:./tmk_core/protocol/lufa/descriptor.c ****     .Keyboard_INEndpoint =
 334:./tmk_core/protocol/lufa/descriptor.c ****         {
 335:./tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_End
 336:./tmk_core/protocol/lufa/descriptor.c **** 
 337:./tmk_core/protocol/lufa/descriptor.c ****             .EndpointAddress        = (ENDPOINT_DIR_IN | KEYBOARD_IN_EPNUM),
 338:./tmk_core/protocol/lufa/descriptor.c ****             .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 339:./tmk_core/protocol/lufa/descriptor.c ****             .EndpointSize           = KEYBOARD_EPSIZE,
 340:./tmk_core/protocol/lufa/descriptor.c ****             .PollingIntervalMS      = 0x0A
 341:./tmk_core/protocol/lufa/descriptor.c ****         },
 342:./tmk_core/protocol/lufa/descriptor.c **** 
 343:./tmk_core/protocol/lufa/descriptor.c ****     /*
 344:./tmk_core/protocol/lufa/descriptor.c ****      * Mouse
 345:./tmk_core/protocol/lufa/descriptor.c ****      */
 346:./tmk_core/protocol/lufa/descriptor.c **** #ifdef MOUSE_ENABLE
 347:./tmk_core/protocol/lufa/descriptor.c ****     .Mouse_Interface =
 348:./tmk_core/protocol/lufa/descriptor.c ****         {
 349:./tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = DTYPE_In
 350:./tmk_core/protocol/lufa/descriptor.c **** 
 351:./tmk_core/protocol/lufa/descriptor.c ****             .InterfaceNumber        = MOUSE_INTERFACE,
 352:./tmk_core/protocol/lufa/descriptor.c ****             .AlternateSetting       = 0x00,
 353:./tmk_core/protocol/lufa/descriptor.c **** 
 354:./tmk_core/protocol/lufa/descriptor.c ****             .TotalEndpoints         = 1,
 355:./tmk_core/protocol/lufa/descriptor.c **** 
 356:./tmk_core/protocol/lufa/descriptor.c ****             .Class                  = HID_CSCP_HIDClass,
 357:./tmk_core/protocol/lufa/descriptor.c ****             .SubClass               = HID_CSCP_BootSubclass,
 358:./tmk_core/protocol/lufa/descriptor.c ****             .Protocol               = HID_CSCP_MouseBootProtocol,
 359:./tmk_core/protocol/lufa/descriptor.c **** 
 360:./tmk_core/protocol/lufa/descriptor.c ****             .InterfaceStrIndex      = NO_DESCRIPTOR
 361:./tmk_core/protocol/lufa/descriptor.c ****         },
 362:./tmk_core/protocol/lufa/descriptor.c **** 
 363:./tmk_core/protocol/lufa/descriptor.c ****     .Mouse_HID =
 364:./tmk_core/protocol/lufa/descriptor.c ****         {
 365:./tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_HID_Descriptor_HID_t), .Type = HID_DTYPE_
 366:./tmk_core/protocol/lufa/descriptor.c **** 
 367:./tmk_core/protocol/lufa/descriptor.c ****             .HIDSpec                = VERSION_BCD(1,1,1),
 368:./tmk_core/protocol/lufa/descriptor.c ****             .CountryCode            = 0x00,
 369:./tmk_core/protocol/lufa/descriptor.c ****             .TotalReportDescriptors = 1,
 370:./tmk_core/protocol/lufa/descriptor.c ****             .HIDReportType          = HID_DTYPE_Report,
 371:./tmk_core/protocol/lufa/descriptor.c ****             .HIDReportLength        = sizeof(MouseReport)
 372:./tmk_core/protocol/lufa/descriptor.c ****         },
 373:./tmk_core/protocol/lufa/descriptor.c **** 
 374:./tmk_core/protocol/lufa/descriptor.c ****     .Mouse_INEndpoint =
 375:./tmk_core/protocol/lufa/descriptor.c ****         {
 376:./tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_End
 377:./tmk_core/protocol/lufa/descriptor.c **** 
 378:./tmk_core/protocol/lufa/descriptor.c ****             .EndpointAddress        = (ENDPOINT_DIR_IN | MOUSE_IN_EPNUM),
 379:./tmk_core/protocol/lufa/descriptor.c ****             .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 380:./tmk_core/protocol/lufa/descriptor.c ****             .EndpointSize           = MOUSE_EPSIZE,
 381:./tmk_core/protocol/lufa/descriptor.c ****             .PollingIntervalMS      = 0x0A
 382:./tmk_core/protocol/lufa/descriptor.c ****         },
 383:./tmk_core/protocol/lufa/descriptor.c **** #endif
 384:./tmk_core/protocol/lufa/descriptor.c **** 
 385:./tmk_core/protocol/lufa/descriptor.c ****     /*
 386:./tmk_core/protocol/lufa/descriptor.c ****      * Extra
 387:./tmk_core/protocol/lufa/descriptor.c ****      */
 388:./tmk_core/protocol/lufa/descriptor.c **** #ifdef EXTRAKEY_ENABLE
 389:./tmk_core/protocol/lufa/descriptor.c ****     .Extrakey_Interface =
 390:./tmk_core/protocol/lufa/descriptor.c ****         {
 391:./tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = DTYPE_In
 392:./tmk_core/protocol/lufa/descriptor.c **** 
 393:./tmk_core/protocol/lufa/descriptor.c ****             .InterfaceNumber        = EXTRAKEY_INTERFACE,
 394:./tmk_core/protocol/lufa/descriptor.c ****             .AlternateSetting       = 0x00,
 395:./tmk_core/protocol/lufa/descriptor.c **** 
 396:./tmk_core/protocol/lufa/descriptor.c ****             .TotalEndpoints         = 1,
 397:./tmk_core/protocol/lufa/descriptor.c **** 
 398:./tmk_core/protocol/lufa/descriptor.c ****             .Class                  = HID_CSCP_HIDClass,
 399:./tmk_core/protocol/lufa/descriptor.c ****             .SubClass               = HID_CSCP_NonBootSubclass,
 400:./tmk_core/protocol/lufa/descriptor.c ****             .Protocol               = HID_CSCP_NonBootProtocol,
 401:./tmk_core/protocol/lufa/descriptor.c **** 
 402:./tmk_core/protocol/lufa/descriptor.c ****             .InterfaceStrIndex      = NO_DESCRIPTOR
 403:./tmk_core/protocol/lufa/descriptor.c ****         },
 404:./tmk_core/protocol/lufa/descriptor.c **** 
 405:./tmk_core/protocol/lufa/descriptor.c ****     .Extrakey_HID =
 406:./tmk_core/protocol/lufa/descriptor.c ****         {
 407:./tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_HID_Descriptor_HID_t), .Type = HID_DTYPE_
 408:./tmk_core/protocol/lufa/descriptor.c **** 
 409:./tmk_core/protocol/lufa/descriptor.c ****             .HIDSpec                = VERSION_BCD(1,1,1),
 410:./tmk_core/protocol/lufa/descriptor.c ****             .CountryCode            = 0x00,
 411:./tmk_core/protocol/lufa/descriptor.c ****             .TotalReportDescriptors = 1,
 412:./tmk_core/protocol/lufa/descriptor.c ****             .HIDReportType          = HID_DTYPE_Report,
 413:./tmk_core/protocol/lufa/descriptor.c ****             .HIDReportLength        = sizeof(ExtrakeyReport)
 414:./tmk_core/protocol/lufa/descriptor.c ****         },
 415:./tmk_core/protocol/lufa/descriptor.c **** 
 416:./tmk_core/protocol/lufa/descriptor.c ****     .Extrakey_INEndpoint =
 417:./tmk_core/protocol/lufa/descriptor.c ****         {
 418:./tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_End
 419:./tmk_core/protocol/lufa/descriptor.c **** 
 420:./tmk_core/protocol/lufa/descriptor.c ****             .EndpointAddress        = (ENDPOINT_DIR_IN | EXTRAKEY_IN_EPNUM),
 421:./tmk_core/protocol/lufa/descriptor.c ****             .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 422:./tmk_core/protocol/lufa/descriptor.c ****             .EndpointSize           = EXTRAKEY_EPSIZE,
 423:./tmk_core/protocol/lufa/descriptor.c ****             .PollingIntervalMS      = 0x0A
 424:./tmk_core/protocol/lufa/descriptor.c ****         },
 425:./tmk_core/protocol/lufa/descriptor.c **** #endif
 426:./tmk_core/protocol/lufa/descriptor.c **** 
 427:./tmk_core/protocol/lufa/descriptor.c **** 		/*
 428:./tmk_core/protocol/lufa/descriptor.c **** 	     * Raw
 429:./tmk_core/protocol/lufa/descriptor.c **** 	     */
 430:./tmk_core/protocol/lufa/descriptor.c **** 	#ifdef RAW_ENABLE
 431:./tmk_core/protocol/lufa/descriptor.c **** 	    .Raw_Interface =
 432:./tmk_core/protocol/lufa/descriptor.c **** 	        {
 433:./tmk_core/protocol/lufa/descriptor.c **** 	            .Header                 = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = DTYPE_I
 434:./tmk_core/protocol/lufa/descriptor.c **** 
 435:./tmk_core/protocol/lufa/descriptor.c **** 	            .InterfaceNumber        = RAW_INTERFACE,
 436:./tmk_core/protocol/lufa/descriptor.c **** 	            .AlternateSetting       = 0x00,
 437:./tmk_core/protocol/lufa/descriptor.c **** 
 438:./tmk_core/protocol/lufa/descriptor.c **** 	            .TotalEndpoints         = 2,
 439:./tmk_core/protocol/lufa/descriptor.c **** 
 440:./tmk_core/protocol/lufa/descriptor.c **** 	            .Class                  = HID_CSCP_HIDClass,
 441:./tmk_core/protocol/lufa/descriptor.c **** 	            .SubClass               = HID_CSCP_NonBootSubclass,
 442:./tmk_core/protocol/lufa/descriptor.c **** 	            .Protocol               = HID_CSCP_NonBootProtocol,
 443:./tmk_core/protocol/lufa/descriptor.c **** 
 444:./tmk_core/protocol/lufa/descriptor.c **** 	            .InterfaceStrIndex      = NO_DESCRIPTOR
 445:./tmk_core/protocol/lufa/descriptor.c **** 	        },
 446:./tmk_core/protocol/lufa/descriptor.c **** 
 447:./tmk_core/protocol/lufa/descriptor.c **** 	    .Raw_HID =
 448:./tmk_core/protocol/lufa/descriptor.c **** 	        {
 449:./tmk_core/protocol/lufa/descriptor.c **** 	            .Header                 = {.Size = sizeof(USB_HID_Descriptor_HID_t), .Type = HID_DTYPE
 450:./tmk_core/protocol/lufa/descriptor.c **** 
 451:./tmk_core/protocol/lufa/descriptor.c **** 	            .HIDSpec                = VERSION_BCD(1,1,1),
 452:./tmk_core/protocol/lufa/descriptor.c **** 	            .CountryCode            = 0x00,
 453:./tmk_core/protocol/lufa/descriptor.c **** 	            .TotalReportDescriptors = 1,
 454:./tmk_core/protocol/lufa/descriptor.c **** 	            .HIDReportType          = HID_DTYPE_Report,
 455:./tmk_core/protocol/lufa/descriptor.c **** 	            .HIDReportLength        = sizeof(RawReport)
 456:./tmk_core/protocol/lufa/descriptor.c **** 	        },
 457:./tmk_core/protocol/lufa/descriptor.c **** 
 458:./tmk_core/protocol/lufa/descriptor.c **** 	    .Raw_INEndpoint =
 459:./tmk_core/protocol/lufa/descriptor.c **** 	        {
 460:./tmk_core/protocol/lufa/descriptor.c **** 	            .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_En
 461:./tmk_core/protocol/lufa/descriptor.c **** 
 462:./tmk_core/protocol/lufa/descriptor.c **** 	            .EndpointAddress        = (ENDPOINT_DIR_IN | RAW_IN_EPNUM),
 463:./tmk_core/protocol/lufa/descriptor.c **** 	            .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_
 464:./tmk_core/protocol/lufa/descriptor.c **** 	            .EndpointSize           = RAW_EPSIZE,
 465:./tmk_core/protocol/lufa/descriptor.c **** 	            .PollingIntervalMS      = 0x01
 466:./tmk_core/protocol/lufa/descriptor.c **** 	        },
 467:./tmk_core/protocol/lufa/descriptor.c **** 
 468:./tmk_core/protocol/lufa/descriptor.c **** 	    .Raw_OUTEndpoint =
 469:./tmk_core/protocol/lufa/descriptor.c **** 	        {
 470:./tmk_core/protocol/lufa/descriptor.c **** 	            .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_En
 471:./tmk_core/protocol/lufa/descriptor.c **** 
 472:./tmk_core/protocol/lufa/descriptor.c **** 	            .EndpointAddress        = (ENDPOINT_DIR_OUT | RAW_OUT_EPNUM),
 473:./tmk_core/protocol/lufa/descriptor.c **** 	            .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_
 474:./tmk_core/protocol/lufa/descriptor.c **** 	            .EndpointSize           = RAW_EPSIZE,
 475:./tmk_core/protocol/lufa/descriptor.c **** 	            .PollingIntervalMS      = 0x01
 476:./tmk_core/protocol/lufa/descriptor.c **** 	        },
 477:./tmk_core/protocol/lufa/descriptor.c **** 	#endif
 478:./tmk_core/protocol/lufa/descriptor.c **** 
 479:./tmk_core/protocol/lufa/descriptor.c ****     /*
 480:./tmk_core/protocol/lufa/descriptor.c ****      * Console
 481:./tmk_core/protocol/lufa/descriptor.c ****      */
 482:./tmk_core/protocol/lufa/descriptor.c **** #ifdef CONSOLE_ENABLE
 483:./tmk_core/protocol/lufa/descriptor.c ****     .Console_Interface =
 484:./tmk_core/protocol/lufa/descriptor.c ****         {
 485:./tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = DTYPE_In
 486:./tmk_core/protocol/lufa/descriptor.c **** 
 487:./tmk_core/protocol/lufa/descriptor.c ****             .InterfaceNumber        = CONSOLE_INTERFACE,
 488:./tmk_core/protocol/lufa/descriptor.c ****             .AlternateSetting       = 0x00,
 489:./tmk_core/protocol/lufa/descriptor.c **** 
 490:./tmk_core/protocol/lufa/descriptor.c ****             .TotalEndpoints         = 2,
 491:./tmk_core/protocol/lufa/descriptor.c **** 
 492:./tmk_core/protocol/lufa/descriptor.c ****             .Class                  = HID_CSCP_HIDClass,
 493:./tmk_core/protocol/lufa/descriptor.c ****             .SubClass               = HID_CSCP_NonBootSubclass,
 494:./tmk_core/protocol/lufa/descriptor.c ****             .Protocol               = HID_CSCP_NonBootProtocol,
 495:./tmk_core/protocol/lufa/descriptor.c **** 
 496:./tmk_core/protocol/lufa/descriptor.c ****             .InterfaceStrIndex      = NO_DESCRIPTOR
 497:./tmk_core/protocol/lufa/descriptor.c ****         },
 498:./tmk_core/protocol/lufa/descriptor.c **** 
 499:./tmk_core/protocol/lufa/descriptor.c ****     .Console_HID =
 500:./tmk_core/protocol/lufa/descriptor.c ****         {
 501:./tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_HID_Descriptor_HID_t), .Type = HID_DTYPE_
 502:./tmk_core/protocol/lufa/descriptor.c **** 
 503:./tmk_core/protocol/lufa/descriptor.c ****             .HIDSpec                = VERSION_BCD(1,1,1),
 504:./tmk_core/protocol/lufa/descriptor.c ****             .CountryCode            = 0x00,
 505:./tmk_core/protocol/lufa/descriptor.c ****             .TotalReportDescriptors = 1,
 506:./tmk_core/protocol/lufa/descriptor.c ****             .HIDReportType          = HID_DTYPE_Report,
 507:./tmk_core/protocol/lufa/descriptor.c ****             .HIDReportLength        = sizeof(ConsoleReport)
 508:./tmk_core/protocol/lufa/descriptor.c ****         },
 509:./tmk_core/protocol/lufa/descriptor.c **** 
 510:./tmk_core/protocol/lufa/descriptor.c ****     .Console_INEndpoint =
 511:./tmk_core/protocol/lufa/descriptor.c ****         {
 512:./tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_End
 513:./tmk_core/protocol/lufa/descriptor.c **** 
 514:./tmk_core/protocol/lufa/descriptor.c ****             .EndpointAddress        = (ENDPOINT_DIR_IN | CONSOLE_IN_EPNUM),
 515:./tmk_core/protocol/lufa/descriptor.c ****             .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 516:./tmk_core/protocol/lufa/descriptor.c ****             .EndpointSize           = CONSOLE_EPSIZE,
 517:./tmk_core/protocol/lufa/descriptor.c ****             .PollingIntervalMS      = 0x01
 518:./tmk_core/protocol/lufa/descriptor.c ****         },
 519:./tmk_core/protocol/lufa/descriptor.c **** 
 520:./tmk_core/protocol/lufa/descriptor.c ****     .Console_OUTEndpoint =
 521:./tmk_core/protocol/lufa/descriptor.c ****         {
 522:./tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_End
 523:./tmk_core/protocol/lufa/descriptor.c **** 
 524:./tmk_core/protocol/lufa/descriptor.c ****             .EndpointAddress        = (ENDPOINT_DIR_OUT | CONSOLE_OUT_EPNUM),
 525:./tmk_core/protocol/lufa/descriptor.c ****             .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 526:./tmk_core/protocol/lufa/descriptor.c ****             .EndpointSize           = CONSOLE_EPSIZE,
 527:./tmk_core/protocol/lufa/descriptor.c ****             .PollingIntervalMS      = 0x01
 528:./tmk_core/protocol/lufa/descriptor.c ****         },
 529:./tmk_core/protocol/lufa/descriptor.c **** #endif
 530:./tmk_core/protocol/lufa/descriptor.c **** 
 531:./tmk_core/protocol/lufa/descriptor.c ****     /*
 532:./tmk_core/protocol/lufa/descriptor.c ****      * NKRO
 533:./tmk_core/protocol/lufa/descriptor.c ****      */
 534:./tmk_core/protocol/lufa/descriptor.c **** #ifdef NKRO_ENABLE
 535:./tmk_core/protocol/lufa/descriptor.c ****     .NKRO_Interface =
 536:./tmk_core/protocol/lufa/descriptor.c ****         {
 537:./tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = DTYPE_In
 538:./tmk_core/protocol/lufa/descriptor.c **** 
 539:./tmk_core/protocol/lufa/descriptor.c ****             .InterfaceNumber        = NKRO_INTERFACE,
 540:./tmk_core/protocol/lufa/descriptor.c ****             .AlternateSetting       = 0x00,
 541:./tmk_core/protocol/lufa/descriptor.c **** 
 542:./tmk_core/protocol/lufa/descriptor.c ****             .TotalEndpoints         = 1,
 543:./tmk_core/protocol/lufa/descriptor.c **** 
 544:./tmk_core/protocol/lufa/descriptor.c ****             .Class                  = HID_CSCP_HIDClass,
 545:./tmk_core/protocol/lufa/descriptor.c ****             .SubClass               = HID_CSCP_NonBootSubclass,
 546:./tmk_core/protocol/lufa/descriptor.c ****             .Protocol               = HID_CSCP_NonBootProtocol,
 547:./tmk_core/protocol/lufa/descriptor.c **** 
 548:./tmk_core/protocol/lufa/descriptor.c ****             .InterfaceStrIndex      = NO_DESCRIPTOR
 549:./tmk_core/protocol/lufa/descriptor.c ****         },
 550:./tmk_core/protocol/lufa/descriptor.c **** 
 551:./tmk_core/protocol/lufa/descriptor.c ****     .NKRO_HID =
 552:./tmk_core/protocol/lufa/descriptor.c ****         {
 553:./tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_HID_Descriptor_HID_t), .Type = HID_DTYPE_
 554:./tmk_core/protocol/lufa/descriptor.c **** 
 555:./tmk_core/protocol/lufa/descriptor.c ****             .HIDSpec                = VERSION_BCD(1,1,1),
 556:./tmk_core/protocol/lufa/descriptor.c ****             .CountryCode            = 0x00,
 557:./tmk_core/protocol/lufa/descriptor.c ****             .TotalReportDescriptors = 1,
 558:./tmk_core/protocol/lufa/descriptor.c ****             .HIDReportType          = HID_DTYPE_Report,
 559:./tmk_core/protocol/lufa/descriptor.c ****             .HIDReportLength        = sizeof(NKROReport)
 560:./tmk_core/protocol/lufa/descriptor.c ****         },
 561:./tmk_core/protocol/lufa/descriptor.c **** 
 562:./tmk_core/protocol/lufa/descriptor.c ****     .NKRO_INEndpoint =
 563:./tmk_core/protocol/lufa/descriptor.c ****         {
 564:./tmk_core/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_End
 565:./tmk_core/protocol/lufa/descriptor.c **** 
 566:./tmk_core/protocol/lufa/descriptor.c ****             .EndpointAddress        = (ENDPOINT_DIR_IN | NKRO_IN_EPNUM),
 567:./tmk_core/protocol/lufa/descriptor.c ****             .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 568:./tmk_core/protocol/lufa/descriptor.c ****             .EndpointSize           = NKRO_EPSIZE,
 569:./tmk_core/protocol/lufa/descriptor.c ****             .PollingIntervalMS      = 0x01
 570:./tmk_core/protocol/lufa/descriptor.c ****         },
 571:./tmk_core/protocol/lufa/descriptor.c **** #endif
 572:./tmk_core/protocol/lufa/descriptor.c **** 
 573:./tmk_core/protocol/lufa/descriptor.c **** #ifdef MIDI_ENABLE
 574:./tmk_core/protocol/lufa/descriptor.c ****     .Audio_ControlInterface =
 575:./tmk_core/protocol/lufa/descriptor.c ****         {
 576:./tmk_core/protocol/lufa/descriptor.c ****             .Header                   = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = DTYPE_
 577:./tmk_core/protocol/lufa/descriptor.c **** 
 578:./tmk_core/protocol/lufa/descriptor.c ****             .InterfaceNumber          = AC_INTERFACE,
 579:./tmk_core/protocol/lufa/descriptor.c ****             .AlternateSetting         = 0,
 580:./tmk_core/protocol/lufa/descriptor.c **** 
 581:./tmk_core/protocol/lufa/descriptor.c ****             .TotalEndpoints           = 0,
 582:./tmk_core/protocol/lufa/descriptor.c **** 
 583:./tmk_core/protocol/lufa/descriptor.c ****             .Class                    = AUDIO_CSCP_AudioClass,
 584:./tmk_core/protocol/lufa/descriptor.c ****             .SubClass                 = AUDIO_CSCP_ControlSubclass,
 585:./tmk_core/protocol/lufa/descriptor.c ****             .Protocol                 = AUDIO_CSCP_ControlProtocol,
 586:./tmk_core/protocol/lufa/descriptor.c **** 
 587:./tmk_core/protocol/lufa/descriptor.c ****             .InterfaceStrIndex        = NO_DESCRIPTOR
 588:./tmk_core/protocol/lufa/descriptor.c ****         },
 589:./tmk_core/protocol/lufa/descriptor.c **** 
 590:./tmk_core/protocol/lufa/descriptor.c ****     .Audio_ControlInterface_SPC =
 591:./tmk_core/protocol/lufa/descriptor.c ****         {
 592:./tmk_core/protocol/lufa/descriptor.c ****             .Header                   = {.Size = sizeof(USB_Audio_Descriptor_Interface_AC_t), .Type
 593:./tmk_core/protocol/lufa/descriptor.c ****             .Subtype                  = AUDIO_DSUBTYPE_CSInterface_Header,
 594:./tmk_core/protocol/lufa/descriptor.c **** 
 595:./tmk_core/protocol/lufa/descriptor.c ****             .ACSpecification          = VERSION_BCD(1,0,0),
 596:./tmk_core/protocol/lufa/descriptor.c ****             .TotalLength              = sizeof(USB_Audio_Descriptor_Interface_AC_t),
 597:./tmk_core/protocol/lufa/descriptor.c **** 
 598:./tmk_core/protocol/lufa/descriptor.c ****             .InCollection             = 1,
 599:./tmk_core/protocol/lufa/descriptor.c ****             .InterfaceNumber          = AS_INTERFACE,
 600:./tmk_core/protocol/lufa/descriptor.c ****         },
 601:./tmk_core/protocol/lufa/descriptor.c **** 
 602:./tmk_core/protocol/lufa/descriptor.c ****     .Audio_StreamInterface =
 603:./tmk_core/protocol/lufa/descriptor.c ****         {
 604:./tmk_core/protocol/lufa/descriptor.c ****             .Header                   = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = DTYPE_
 605:./tmk_core/protocol/lufa/descriptor.c **** 
 606:./tmk_core/protocol/lufa/descriptor.c ****             .InterfaceNumber          = AS_INTERFACE,
 607:./tmk_core/protocol/lufa/descriptor.c ****             .AlternateSetting         = 0,
 608:./tmk_core/protocol/lufa/descriptor.c **** 
 609:./tmk_core/protocol/lufa/descriptor.c ****             .TotalEndpoints           = 2,
 610:./tmk_core/protocol/lufa/descriptor.c **** 
 611:./tmk_core/protocol/lufa/descriptor.c ****             .Class                    = AUDIO_CSCP_AudioClass,
 612:./tmk_core/protocol/lufa/descriptor.c ****             .SubClass                 = AUDIO_CSCP_MIDIStreamingSubclass,
 613:./tmk_core/protocol/lufa/descriptor.c ****             .Protocol                 = AUDIO_CSCP_StreamingProtocol,
 614:./tmk_core/protocol/lufa/descriptor.c **** 
 615:./tmk_core/protocol/lufa/descriptor.c ****             .InterfaceStrIndex        = NO_DESCRIPTOR
 616:./tmk_core/protocol/lufa/descriptor.c ****         },
 617:./tmk_core/protocol/lufa/descriptor.c **** 
 618:./tmk_core/protocol/lufa/descriptor.c ****     .Audio_StreamInterface_SPC =
 619:./tmk_core/protocol/lufa/descriptor.c ****         {
 620:./tmk_core/protocol/lufa/descriptor.c ****             .Header                   = {.Size = sizeof(USB_MIDI_Descriptor_AudioInterface_AS_t), .
 621:./tmk_core/protocol/lufa/descriptor.c ****             .Subtype                  = AUDIO_DSUBTYPE_CSInterface_General,
 622:./tmk_core/protocol/lufa/descriptor.c **** 
 623:./tmk_core/protocol/lufa/descriptor.c ****             .AudioSpecification       = VERSION_BCD(1,0,0),
 624:./tmk_core/protocol/lufa/descriptor.c **** 
 625:./tmk_core/protocol/lufa/descriptor.c ****             .TotalLength              = (sizeof(USB_Descriptor_Configuration_t) -
 626:./tmk_core/protocol/lufa/descriptor.c ****                                          offsetof(USB_Descriptor_Configuration_t, Audio_StreamInter
 627:./tmk_core/protocol/lufa/descriptor.c ****         },
 628:./tmk_core/protocol/lufa/descriptor.c **** 
 629:./tmk_core/protocol/lufa/descriptor.c ****     .MIDI_In_Jack_Emb =
 630:./tmk_core/protocol/lufa/descriptor.c ****         {
 631:./tmk_core/protocol/lufa/descriptor.c ****             .Header                   = {.Size = sizeof(USB_MIDI_Descriptor_InputJack_t), .Type = D
 632:./tmk_core/protocol/lufa/descriptor.c ****             .Subtype                  = AUDIO_DSUBTYPE_CSInterface_InputTerminal,
 633:./tmk_core/protocol/lufa/descriptor.c **** 
 634:./tmk_core/protocol/lufa/descriptor.c ****             .JackType                 = MIDI_JACKTYPE_Embedded,
 635:./tmk_core/protocol/lufa/descriptor.c ****             .JackID                   = 0x01,
 636:./tmk_core/protocol/lufa/descriptor.c **** 
 637:./tmk_core/protocol/lufa/descriptor.c ****             .JackStrIndex             = NO_DESCRIPTOR
 638:./tmk_core/protocol/lufa/descriptor.c ****         },
 639:./tmk_core/protocol/lufa/descriptor.c **** 
 640:./tmk_core/protocol/lufa/descriptor.c ****     .MIDI_In_Jack_Ext =
 641:./tmk_core/protocol/lufa/descriptor.c ****         {
 642:./tmk_core/protocol/lufa/descriptor.c ****             .Header                   = {.Size = sizeof(USB_MIDI_Descriptor_InputJack_t), .Type = D
 643:./tmk_core/protocol/lufa/descriptor.c ****             .Subtype                  = AUDIO_DSUBTYPE_CSInterface_InputTerminal,
 644:./tmk_core/protocol/lufa/descriptor.c **** 
 645:./tmk_core/protocol/lufa/descriptor.c ****             .JackType                 = MIDI_JACKTYPE_External,
 646:./tmk_core/protocol/lufa/descriptor.c ****             .JackID                   = 0x02,
 647:./tmk_core/protocol/lufa/descriptor.c **** 
 648:./tmk_core/protocol/lufa/descriptor.c ****             .JackStrIndex             = NO_DESCRIPTOR
 649:./tmk_core/protocol/lufa/descriptor.c ****         },
 650:./tmk_core/protocol/lufa/descriptor.c **** 
 651:./tmk_core/protocol/lufa/descriptor.c ****     .MIDI_Out_Jack_Emb =
 652:./tmk_core/protocol/lufa/descriptor.c ****         {
 653:./tmk_core/protocol/lufa/descriptor.c ****             .Header                   = {.Size = sizeof(USB_MIDI_Descriptor_OutputJack_t), .Type = 
 654:./tmk_core/protocol/lufa/descriptor.c ****             .Subtype                  = AUDIO_DSUBTYPE_CSInterface_OutputTerminal,
 655:./tmk_core/protocol/lufa/descriptor.c **** 
 656:./tmk_core/protocol/lufa/descriptor.c ****             .JackType                 = MIDI_JACKTYPE_Embedded,
 657:./tmk_core/protocol/lufa/descriptor.c ****             .JackID                   = 0x03,
 658:./tmk_core/protocol/lufa/descriptor.c **** 
 659:./tmk_core/protocol/lufa/descriptor.c ****             .NumberOfPins             = 1,
 660:./tmk_core/protocol/lufa/descriptor.c ****             .SourceJackID             = {0x02},
 661:./tmk_core/protocol/lufa/descriptor.c ****             .SourcePinID              = {0x01},
 662:./tmk_core/protocol/lufa/descriptor.c **** 
 663:./tmk_core/protocol/lufa/descriptor.c ****             .JackStrIndex             = NO_DESCRIPTOR
 664:./tmk_core/protocol/lufa/descriptor.c ****         },
 665:./tmk_core/protocol/lufa/descriptor.c **** 
 666:./tmk_core/protocol/lufa/descriptor.c ****     .MIDI_Out_Jack_Ext =
 667:./tmk_core/protocol/lufa/descriptor.c ****         {
 668:./tmk_core/protocol/lufa/descriptor.c ****             .Header                   = {.Size = sizeof(USB_MIDI_Descriptor_OutputJack_t), .Type = 
 669:./tmk_core/protocol/lufa/descriptor.c ****             .Subtype                  = AUDIO_DSUBTYPE_CSInterface_OutputTerminal,
 670:./tmk_core/protocol/lufa/descriptor.c **** 
 671:./tmk_core/protocol/lufa/descriptor.c ****             .JackType                 = MIDI_JACKTYPE_External,
 672:./tmk_core/protocol/lufa/descriptor.c ****             .JackID                   = 0x04,
 673:./tmk_core/protocol/lufa/descriptor.c **** 
 674:./tmk_core/protocol/lufa/descriptor.c ****             .NumberOfPins             = 1,
 675:./tmk_core/protocol/lufa/descriptor.c ****             .SourceJackID             = {0x01},
 676:./tmk_core/protocol/lufa/descriptor.c ****             .SourcePinID              = {0x01},
 677:./tmk_core/protocol/lufa/descriptor.c **** 
 678:./tmk_core/protocol/lufa/descriptor.c ****             .JackStrIndex             = NO_DESCRIPTOR
 679:./tmk_core/protocol/lufa/descriptor.c ****         },
 680:./tmk_core/protocol/lufa/descriptor.c **** 
 681:./tmk_core/protocol/lufa/descriptor.c ****     .MIDI_In_Jack_Endpoint =
 682:./tmk_core/protocol/lufa/descriptor.c ****         {
 683:./tmk_core/protocol/lufa/descriptor.c ****             .Endpoint =
 684:./tmk_core/protocol/lufa/descriptor.c ****                 {
 685:./tmk_core/protocol/lufa/descriptor.c ****                     .Header              = {.Size = sizeof(USB_Audio_Descriptor_StreamEndpoint_Std_
 686:./tmk_core/protocol/lufa/descriptor.c **** 
 687:./tmk_core/protocol/lufa/descriptor.c ****                     .EndpointAddress     = MIDI_STREAM_OUT_EPADDR,
 688:./tmk_core/protocol/lufa/descriptor.c ****                     .Attributes          = (EP_TYPE_BULK | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 689:./tmk_core/protocol/lufa/descriptor.c ****                     .EndpointSize        = MIDI_STREAM_EPSIZE,
 690:./tmk_core/protocol/lufa/descriptor.c ****                     .PollingIntervalMS   = 0x05
 691:./tmk_core/protocol/lufa/descriptor.c ****                 },
 692:./tmk_core/protocol/lufa/descriptor.c **** 
 693:./tmk_core/protocol/lufa/descriptor.c ****             .Refresh                  = 0,
 694:./tmk_core/protocol/lufa/descriptor.c ****             .SyncEndpointNumber       = 0
 695:./tmk_core/protocol/lufa/descriptor.c ****         },
 696:./tmk_core/protocol/lufa/descriptor.c **** 
 697:./tmk_core/protocol/lufa/descriptor.c ****     .MIDI_In_Jack_Endpoint_SPC =
 698:./tmk_core/protocol/lufa/descriptor.c ****         {
 699:./tmk_core/protocol/lufa/descriptor.c ****             .Header                   = {.Size = sizeof(USB_MIDI_Descriptor_Jack_Endpoint_t), .Type
 700:./tmk_core/protocol/lufa/descriptor.c ****             .Subtype                  = AUDIO_DSUBTYPE_CSEndpoint_General,
 701:./tmk_core/protocol/lufa/descriptor.c **** 
 702:./tmk_core/protocol/lufa/descriptor.c ****             .TotalEmbeddedJacks       = 0x01,
 703:./tmk_core/protocol/lufa/descriptor.c ****             .AssociatedJackID         = {0x01}
 704:./tmk_core/protocol/lufa/descriptor.c ****         },
 705:./tmk_core/protocol/lufa/descriptor.c **** 
 706:./tmk_core/protocol/lufa/descriptor.c ****     .MIDI_Out_Jack_Endpoint =
 707:./tmk_core/protocol/lufa/descriptor.c ****         {
 708:./tmk_core/protocol/lufa/descriptor.c ****             .Endpoint =
 709:./tmk_core/protocol/lufa/descriptor.c ****                 {
 710:./tmk_core/protocol/lufa/descriptor.c ****                     .Header              = {.Size = sizeof(USB_Audio_Descriptor_StreamEndpoint_Std_
 711:./tmk_core/protocol/lufa/descriptor.c **** 
 712:./tmk_core/protocol/lufa/descriptor.c ****                     .EndpointAddress     = MIDI_STREAM_IN_EPADDR,
 713:./tmk_core/protocol/lufa/descriptor.c ****                     .Attributes          = (EP_TYPE_BULK | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 714:./tmk_core/protocol/lufa/descriptor.c ****                     .EndpointSize        = MIDI_STREAM_EPSIZE,
 715:./tmk_core/protocol/lufa/descriptor.c ****                     .PollingIntervalMS   = 0x05
 716:./tmk_core/protocol/lufa/descriptor.c ****                 },
 717:./tmk_core/protocol/lufa/descriptor.c **** 
 718:./tmk_core/protocol/lufa/descriptor.c ****             .Refresh                  = 0,
 719:./tmk_core/protocol/lufa/descriptor.c ****             .SyncEndpointNumber       = 0
 720:./tmk_core/protocol/lufa/descriptor.c ****         },
 721:./tmk_core/protocol/lufa/descriptor.c **** 
 722:./tmk_core/protocol/lufa/descriptor.c ****     .MIDI_Out_Jack_Endpoint_SPC =
 723:./tmk_core/protocol/lufa/descriptor.c ****         {
 724:./tmk_core/protocol/lufa/descriptor.c ****             .Header                   = {.Size = sizeof(USB_MIDI_Descriptor_Jack_Endpoint_t), .Type
 725:./tmk_core/protocol/lufa/descriptor.c ****             .Subtype                  = AUDIO_DSUBTYPE_CSEndpoint_General,
 726:./tmk_core/protocol/lufa/descriptor.c **** 
 727:./tmk_core/protocol/lufa/descriptor.c ****             .TotalEmbeddedJacks       = 0x01,
 728:./tmk_core/protocol/lufa/descriptor.c ****             .AssociatedJackID         = {0x03}
 729:./tmk_core/protocol/lufa/descriptor.c ****         },
 730:./tmk_core/protocol/lufa/descriptor.c **** #endif
 731:./tmk_core/protocol/lufa/descriptor.c **** 
 732:./tmk_core/protocol/lufa/descriptor.c **** #ifdef VIRTSER_ENABLE
 733:./tmk_core/protocol/lufa/descriptor.c ****     .CDC_Interface_Association =
 734:./tmk_core/protocol/lufa/descriptor.c ****             {
 735:./tmk_core/protocol/lufa/descriptor.c ****                     .Header                 = {.Size = sizeof(USB_Descriptor_Interface_Association_
 736:./tmk_core/protocol/lufa/descriptor.c **** 
 737:./tmk_core/protocol/lufa/descriptor.c ****                     .FirstInterfaceIndex    = CCI_INTERFACE,
 738:./tmk_core/protocol/lufa/descriptor.c ****                     .TotalInterfaces        = 2,
 739:./tmk_core/protocol/lufa/descriptor.c **** 
 740:./tmk_core/protocol/lufa/descriptor.c ****                     .Class                  = CDC_CSCP_CDCClass,
 741:./tmk_core/protocol/lufa/descriptor.c ****                     .SubClass               = CDC_CSCP_ACMSubclass,
 742:./tmk_core/protocol/lufa/descriptor.c ****                     .Protocol               = CDC_CSCP_ATCommandProtocol,
 743:./tmk_core/protocol/lufa/descriptor.c **** 
 744:./tmk_core/protocol/lufa/descriptor.c ****                     .IADStrIndex            = NO_DESCRIPTOR,
 745:./tmk_core/protocol/lufa/descriptor.c ****             },
 746:./tmk_core/protocol/lufa/descriptor.c **** 
 747:./tmk_core/protocol/lufa/descriptor.c ****     .CDC_CCI_Interface =
 748:./tmk_core/protocol/lufa/descriptor.c ****             {
 749:./tmk_core/protocol/lufa/descriptor.c ****                     .Header                 = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = 
 750:./tmk_core/protocol/lufa/descriptor.c **** 
 751:./tmk_core/protocol/lufa/descriptor.c ****                     .InterfaceNumber        = CCI_INTERFACE,
 752:./tmk_core/protocol/lufa/descriptor.c ****                     .AlternateSetting       = 0,
 753:./tmk_core/protocol/lufa/descriptor.c **** 
 754:./tmk_core/protocol/lufa/descriptor.c ****                     .TotalEndpoints         = 1,
 755:./tmk_core/protocol/lufa/descriptor.c **** 
 756:./tmk_core/protocol/lufa/descriptor.c ****                     .Class                  = CDC_CSCP_CDCClass,
 757:./tmk_core/protocol/lufa/descriptor.c ****                     .SubClass               = CDC_CSCP_ACMSubclass,
 758:./tmk_core/protocol/lufa/descriptor.c ****                     .Protocol               = CDC_CSCP_ATCommandProtocol,
 759:./tmk_core/protocol/lufa/descriptor.c **** 
 760:./tmk_core/protocol/lufa/descriptor.c ****                     .InterfaceStrIndex      = NO_DESCRIPTOR
 761:./tmk_core/protocol/lufa/descriptor.c ****             },
 762:./tmk_core/protocol/lufa/descriptor.c **** 
 763:./tmk_core/protocol/lufa/descriptor.c ****     .CDC_Functional_Header =
 764:./tmk_core/protocol/lufa/descriptor.c ****             {
 765:./tmk_core/protocol/lufa/descriptor.c ****                     .Header                 = {.Size = sizeof(USB_CDC_Descriptor_FunctionalHeader_t
 766:./tmk_core/protocol/lufa/descriptor.c ****                     .Subtype                = 0x00,
 767:./tmk_core/protocol/lufa/descriptor.c **** 
 768:./tmk_core/protocol/lufa/descriptor.c ****                     .CDCSpecification       = VERSION_BCD(1,1,0),
 769:./tmk_core/protocol/lufa/descriptor.c ****             },
 770:./tmk_core/protocol/lufa/descriptor.c **** 
 771:./tmk_core/protocol/lufa/descriptor.c ****     .CDC_Functional_ACM =
 772:./tmk_core/protocol/lufa/descriptor.c ****             {
 773:./tmk_core/protocol/lufa/descriptor.c ****                     .Header                 = {.Size = sizeof(USB_CDC_Descriptor_FunctionalACM_t), 
 774:./tmk_core/protocol/lufa/descriptor.c ****                     .Subtype                = 0x02,
 775:./tmk_core/protocol/lufa/descriptor.c **** 
 776:./tmk_core/protocol/lufa/descriptor.c ****                     .Capabilities           = 0x02,
 777:./tmk_core/protocol/lufa/descriptor.c ****             },
 778:./tmk_core/protocol/lufa/descriptor.c **** 
 779:./tmk_core/protocol/lufa/descriptor.c ****     .CDC_Functional_Union =
 780:./tmk_core/protocol/lufa/descriptor.c ****             {
 781:./tmk_core/protocol/lufa/descriptor.c ****                     .Header                 = {.Size = sizeof(USB_CDC_Descriptor_FunctionalUnion_t)
 782:./tmk_core/protocol/lufa/descriptor.c ****                     .Subtype                = 0x06,
 783:./tmk_core/protocol/lufa/descriptor.c **** 
 784:./tmk_core/protocol/lufa/descriptor.c ****                     .MasterInterfaceNumber  = CCI_INTERFACE,
 785:./tmk_core/protocol/lufa/descriptor.c ****                     .SlaveInterfaceNumber   = CDI_INTERFACE,
 786:./tmk_core/protocol/lufa/descriptor.c ****             },
 787:./tmk_core/protocol/lufa/descriptor.c **** 
 788:./tmk_core/protocol/lufa/descriptor.c ****     .CDC_NotificationEndpoint =
 789:./tmk_core/protocol/lufa/descriptor.c ****             {
 790:./tmk_core/protocol/lufa/descriptor.c ****                     .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = D
 791:./tmk_core/protocol/lufa/descriptor.c **** 
 792:./tmk_core/protocol/lufa/descriptor.c ****                     .EndpointAddress        = CDC_NOTIFICATION_EPADDR,
 793:./tmk_core/protocol/lufa/descriptor.c ****                     .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT
 794:./tmk_core/protocol/lufa/descriptor.c ****                     .EndpointSize           = CDC_NOTIFICATION_EPSIZE,
 795:./tmk_core/protocol/lufa/descriptor.c ****                     .PollingIntervalMS      = 0xFF
 796:./tmk_core/protocol/lufa/descriptor.c ****             },
 797:./tmk_core/protocol/lufa/descriptor.c **** 
 798:./tmk_core/protocol/lufa/descriptor.c ****     .CDC_DCI_Interface =
 799:./tmk_core/protocol/lufa/descriptor.c ****             {
 800:./tmk_core/protocol/lufa/descriptor.c ****                     .Header                 = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = 
 801:./tmk_core/protocol/lufa/descriptor.c **** 
 802:./tmk_core/protocol/lufa/descriptor.c ****                     .InterfaceNumber        = CDI_INTERFACE,
 803:./tmk_core/protocol/lufa/descriptor.c ****                     .AlternateSetting       = 0,
 804:./tmk_core/protocol/lufa/descriptor.c **** 
 805:./tmk_core/protocol/lufa/descriptor.c ****                     .TotalEndpoints         = 2,
 806:./tmk_core/protocol/lufa/descriptor.c **** 
 807:./tmk_core/protocol/lufa/descriptor.c ****                     .Class                  = CDC_CSCP_CDCDataClass,
 808:./tmk_core/protocol/lufa/descriptor.c ****                     .SubClass               = CDC_CSCP_NoDataSubclass,
 809:./tmk_core/protocol/lufa/descriptor.c ****                     .Protocol               = CDC_CSCP_NoDataProtocol,
 810:./tmk_core/protocol/lufa/descriptor.c **** 
 811:./tmk_core/protocol/lufa/descriptor.c ****                     .InterfaceStrIndex      = NO_DESCRIPTOR
 812:./tmk_core/protocol/lufa/descriptor.c ****             },
 813:./tmk_core/protocol/lufa/descriptor.c **** 
 814:./tmk_core/protocol/lufa/descriptor.c ****     .CDC_DataOutEndpoint =
 815:./tmk_core/protocol/lufa/descriptor.c ****             {
 816:./tmk_core/protocol/lufa/descriptor.c ****                     .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = D
 817:./tmk_core/protocol/lufa/descriptor.c **** 
 818:./tmk_core/protocol/lufa/descriptor.c ****                     .EndpointAddress        = CDC_OUT_EPADDR,
 819:./tmk_core/protocol/lufa/descriptor.c ****                     .Attributes             = (EP_TYPE_BULK | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAG
 820:./tmk_core/protocol/lufa/descriptor.c ****                     .EndpointSize           = CDC_EPSIZE,
 821:./tmk_core/protocol/lufa/descriptor.c ****                     .PollingIntervalMS      = 0x05
 822:./tmk_core/protocol/lufa/descriptor.c ****             },
 823:./tmk_core/protocol/lufa/descriptor.c **** 
 824:./tmk_core/protocol/lufa/descriptor.c ****     .CDC_DataInEndpoint =
 825:./tmk_core/protocol/lufa/descriptor.c ****             {
 826:./tmk_core/protocol/lufa/descriptor.c ****                     .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = D
 827:./tmk_core/protocol/lufa/descriptor.c **** 
 828:./tmk_core/protocol/lufa/descriptor.c ****                     .EndpointAddress        = CDC_IN_EPADDR,
 829:./tmk_core/protocol/lufa/descriptor.c ****                     .Attributes             = (EP_TYPE_BULK | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAG
 830:./tmk_core/protocol/lufa/descriptor.c ****                     .EndpointSize           = CDC_EPSIZE,
 831:./tmk_core/protocol/lufa/descriptor.c ****                     .PollingIntervalMS      = 0x05
 832:./tmk_core/protocol/lufa/descriptor.c ****             },
 833:./tmk_core/protocol/lufa/descriptor.c **** #endif
 834:./tmk_core/protocol/lufa/descriptor.c **** };
 835:./tmk_core/protocol/lufa/descriptor.c **** 
 836:./tmk_core/protocol/lufa/descriptor.c **** 
 837:./tmk_core/protocol/lufa/descriptor.c **** /*******************************************************************************
 838:./tmk_core/protocol/lufa/descriptor.c ****  * String Descriptors
 839:./tmk_core/protocol/lufa/descriptor.c ****  ******************************************************************************/
 840:./tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_String_t PROGMEM LanguageString =
 841:./tmk_core/protocol/lufa/descriptor.c **** {
 842:./tmk_core/protocol/lufa/descriptor.c ****     .Header                 = {.Size = USB_STRING_LEN(1), .Type = DTYPE_String},
 843:./tmk_core/protocol/lufa/descriptor.c **** 
 844:./tmk_core/protocol/lufa/descriptor.c ****     .UnicodeString          = {LANGUAGE_ID_ENG}
 845:./tmk_core/protocol/lufa/descriptor.c **** };
 846:./tmk_core/protocol/lufa/descriptor.c **** 
 847:./tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_String_t PROGMEM ManufacturerString =
 848:./tmk_core/protocol/lufa/descriptor.c **** {
 849:./tmk_core/protocol/lufa/descriptor.c ****     /* subtract 1 for null terminator */
 850:./tmk_core/protocol/lufa/descriptor.c ****     .Header                 = {.Size = USB_STRING_LEN(sizeof(STR(MANUFACTURER))-1), .Type = DTYPE_S
 851:./tmk_core/protocol/lufa/descriptor.c **** 
 852:./tmk_core/protocol/lufa/descriptor.c ****     .UnicodeString          = LSTR(MANUFACTURER)
 853:./tmk_core/protocol/lufa/descriptor.c **** };
 854:./tmk_core/protocol/lufa/descriptor.c **** 
 855:./tmk_core/protocol/lufa/descriptor.c **** const USB_Descriptor_String_t PROGMEM ProductString =
 856:./tmk_core/protocol/lufa/descriptor.c **** {
 857:./tmk_core/protocol/lufa/descriptor.c ****     /* subtract 1 for null terminator */
 858:./tmk_core/protocol/lufa/descriptor.c ****     .Header                 = {.Size = USB_STRING_LEN(sizeof(STR(PRODUCT))-1), .Type = DTYPE_String
 859:./tmk_core/protocol/lufa/descriptor.c **** 
 860:./tmk_core/protocol/lufa/descriptor.c ****     .UnicodeString          = LSTR(PRODUCT)
 861:./tmk_core/protocol/lufa/descriptor.c **** };
 862:./tmk_core/protocol/lufa/descriptor.c **** 
 863:./tmk_core/protocol/lufa/descriptor.c **** 
 864:./tmk_core/protocol/lufa/descriptor.c **** /** This function is called by the library when in device mode, and must be overridden (see library
 865:./tmk_core/protocol/lufa/descriptor.c ****  *  documentation) by the application code so that the address and size of a requested descriptor c
 866:./tmk_core/protocol/lufa/descriptor.c ****  *  to the USB library. When the device receives a Get Descriptor request on the control endpoint, 
 867:./tmk_core/protocol/lufa/descriptor.c ****  *  is called so that the descriptor details can be passed back and the appropriate descriptor sent
 868:./tmk_core/protocol/lufa/descriptor.c ****  *  USB host.
 869:./tmk_core/protocol/lufa/descriptor.c ****  */
 870:./tmk_core/protocol/lufa/descriptor.c **** uint16_t CALLBACK_USB_GetDescriptor(const uint16_t wValue,
 871:./tmk_core/protocol/lufa/descriptor.c ****                                     const uint8_t wIndex,
 872:./tmk_core/protocol/lufa/descriptor.c ****                                     const void** const DescriptorAddress)
 873:./tmk_core/protocol/lufa/descriptor.c **** {
  17               		.loc 1 873 1 view -0
  18               		.cfi_startproc
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
 874:./tmk_core/protocol/lufa/descriptor.c ****     const uint8_t  DescriptorType   = (wValue >> 8);
  23               		.loc 1 874 5 view .LVU1
  24               		.loc 1 874 47 is_stmt 0 view .LVU2
  25 0000 292F      		mov r18,r25
  26 0002 3327      		clr r19
  27               	.LVL1:
 875:./tmk_core/protocol/lufa/descriptor.c ****     const uint8_t  DescriptorIndex  = (wValue & 0xFF);
  28               		.loc 1 875 5 is_stmt 1 view .LVU3
 876:./tmk_core/protocol/lufa/descriptor.c **** 
 877:./tmk_core/protocol/lufa/descriptor.c ****     const void* Address = NULL;
  29               		.loc 1 877 5 view .LVU4
 878:./tmk_core/protocol/lufa/descriptor.c ****     uint16_t    Size    = NO_DESCRIPTOR;
  30               		.loc 1 878 5 view .LVU5
 879:./tmk_core/protocol/lufa/descriptor.c **** 
 880:./tmk_core/protocol/lufa/descriptor.c ****     switch (DescriptorType)
  31               		.loc 1 880 5 view .LVU6
  32 0004 2330      		cpi r18,3
  33 0006 3105      		cpc r19,__zero_reg__
  34 0008 01F0      		breq .L2
  35 000a 00F4      		brsh .L3
  36 000c 2130      		cpi r18,1
  37 000e 3105      		cpc r19,__zero_reg__
  38 0010 01F4      		brne .+2
  39 0012 00C0      		rjmp .L10
  40 0014 2230      		cpi r18,2
  41 0016 3105      		cpc r19,__zero_reg__
  42 0018 01F4      		brne .+2
  43 001a 00C0      		rjmp .L11
  44               	.LVL2:
  45               	.L13:
  46               		.loc 1 880 5 is_stmt 0 view .LVU7
  47 001c 90E0      		ldi r25,0
  48 001e 80E0      		ldi r24,0
  49 0020 30E0      		ldi r19,0
  50 0022 20E0      		ldi r18,0
  51               	.LVL3:
  52               		.loc 1 880 5 view .LVU8
  53 0024 00C0      		rjmp .L4
  54               	.LVL4:
  55               	.L3:
  56               		.loc 1 880 5 view .LVU9
  57 0026 2132      		cpi r18,33
  58 0028 3105      		cpc r19,__zero_reg__
  59 002a 01F0      		breq .L5
  60 002c 2232      		cpi r18,34
  61 002e 3105      		cpc r19,__zero_reg__
  62 0030 01F4      		brne .L13
 881:./tmk_core/protocol/lufa/descriptor.c ****     {
 882:./tmk_core/protocol/lufa/descriptor.c ****         case DTYPE_Device:
 883:./tmk_core/protocol/lufa/descriptor.c ****             Address = &DeviceDescriptor;
 884:./tmk_core/protocol/lufa/descriptor.c ****             Size    = sizeof(USB_Descriptor_Device_t);
 885:./tmk_core/protocol/lufa/descriptor.c ****             break;
 886:./tmk_core/protocol/lufa/descriptor.c ****         case DTYPE_Configuration:
 887:./tmk_core/protocol/lufa/descriptor.c ****             Address = &ConfigurationDescriptor;
 888:./tmk_core/protocol/lufa/descriptor.c ****             Size    = sizeof(USB_Descriptor_Configuration_t);
 889:./tmk_core/protocol/lufa/descriptor.c ****             break;
 890:./tmk_core/protocol/lufa/descriptor.c ****         case DTYPE_String:
 891:./tmk_core/protocol/lufa/descriptor.c ****             switch (DescriptorIndex )
 892:./tmk_core/protocol/lufa/descriptor.c ****             {
 893:./tmk_core/protocol/lufa/descriptor.c ****                 case 0x00:
 894:./tmk_core/protocol/lufa/descriptor.c ****                     Address = &LanguageString;
 895:./tmk_core/protocol/lufa/descriptor.c ****                     Size    = pgm_read_byte(&LanguageString.Header.Size);
 896:./tmk_core/protocol/lufa/descriptor.c ****                     break;
 897:./tmk_core/protocol/lufa/descriptor.c ****                 case 0x01:
 898:./tmk_core/protocol/lufa/descriptor.c ****                     Address = &ManufacturerString;
 899:./tmk_core/protocol/lufa/descriptor.c ****                     Size    = pgm_read_byte(&ManufacturerString.Header.Size);
 900:./tmk_core/protocol/lufa/descriptor.c ****                     break;
 901:./tmk_core/protocol/lufa/descriptor.c ****                 case 0x02:
 902:./tmk_core/protocol/lufa/descriptor.c ****                     Address = &ProductString;
 903:./tmk_core/protocol/lufa/descriptor.c ****                     Size    = pgm_read_byte(&ProductString.Header.Size);
 904:./tmk_core/protocol/lufa/descriptor.c ****                     break;
 905:./tmk_core/protocol/lufa/descriptor.c ****             }
 906:./tmk_core/protocol/lufa/descriptor.c ****             break;
 907:./tmk_core/protocol/lufa/descriptor.c ****         case HID_DTYPE_HID:
 908:./tmk_core/protocol/lufa/descriptor.c ****             switch (wIndex) {
 909:./tmk_core/protocol/lufa/descriptor.c ****             case KEYBOARD_INTERFACE:
 910:./tmk_core/protocol/lufa/descriptor.c ****                 Address = &ConfigurationDescriptor.Keyboard_HID;
 911:./tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(USB_HID_Descriptor_HID_t);
 912:./tmk_core/protocol/lufa/descriptor.c ****                 break;
 913:./tmk_core/protocol/lufa/descriptor.c **** #ifdef MOUSE_ENABLE
 914:./tmk_core/protocol/lufa/descriptor.c ****             case MOUSE_INTERFACE:
 915:./tmk_core/protocol/lufa/descriptor.c ****                 Address = &ConfigurationDescriptor.Mouse_HID;
 916:./tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(USB_HID_Descriptor_HID_t);
 917:./tmk_core/protocol/lufa/descriptor.c ****                 break;
 918:./tmk_core/protocol/lufa/descriptor.c **** #endif
 919:./tmk_core/protocol/lufa/descriptor.c **** #ifdef EXTRAKEY_ENABLE
 920:./tmk_core/protocol/lufa/descriptor.c ****             case EXTRAKEY_INTERFACE:
 921:./tmk_core/protocol/lufa/descriptor.c ****                 Address = &ConfigurationDescriptor.Extrakey_HID;
 922:./tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(USB_HID_Descriptor_HID_t);
 923:./tmk_core/protocol/lufa/descriptor.c ****                 break;
 924:./tmk_core/protocol/lufa/descriptor.c **** #endif
 925:./tmk_core/protocol/lufa/descriptor.c **** #ifdef RAW_ENABLE
 926:./tmk_core/protocol/lufa/descriptor.c ****             case RAW_INTERFACE:
 927:./tmk_core/protocol/lufa/descriptor.c ****                 Address = &ConfigurationDescriptor.Raw_HID;
 928:./tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(USB_HID_Descriptor_HID_t);
 929:./tmk_core/protocol/lufa/descriptor.c ****                 break;
 930:./tmk_core/protocol/lufa/descriptor.c **** #endif
 931:./tmk_core/protocol/lufa/descriptor.c **** #ifdef CONSOLE_ENABLE
 932:./tmk_core/protocol/lufa/descriptor.c ****             case CONSOLE_INTERFACE:
 933:./tmk_core/protocol/lufa/descriptor.c ****                 Address = &ConfigurationDescriptor.Console_HID;
 934:./tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(USB_HID_Descriptor_HID_t);
 935:./tmk_core/protocol/lufa/descriptor.c ****                 break;
 936:./tmk_core/protocol/lufa/descriptor.c **** #endif
 937:./tmk_core/protocol/lufa/descriptor.c **** #ifdef NKRO_ENABLE
 938:./tmk_core/protocol/lufa/descriptor.c ****             case NKRO_INTERFACE:
 939:./tmk_core/protocol/lufa/descriptor.c ****                 Address = &ConfigurationDescriptor.NKRO_HID;
 940:./tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(USB_HID_Descriptor_HID_t);
 941:./tmk_core/protocol/lufa/descriptor.c ****                 break;
 942:./tmk_core/protocol/lufa/descriptor.c **** #endif
 943:./tmk_core/protocol/lufa/descriptor.c ****             }
 944:./tmk_core/protocol/lufa/descriptor.c ****             break;
 945:./tmk_core/protocol/lufa/descriptor.c ****         case HID_DTYPE_Report:
 946:./tmk_core/protocol/lufa/descriptor.c ****             switch (wIndex) {
  63               		.loc 1 946 13 is_stmt 1 view .LVU10
  64 0032 6430      		cpi r22,lo8(4)
  65 0034 00F4      		brsh .L13
  66 0036 70E0      		ldi r23,0
  67 0038 FB01      		movw r30,r22
  68 003a EE0F      		lsl r30
  69 003c FF1F      		rol r31
  70               	.LVL5:
  71               		.loc 1 946 13 is_stmt 0 view .LVU11
  72 003e E050      		subi r30,lo8(-(CSWTCH.1))
  73 0040 F040      		sbci r31,hi8(-(CSWTCH.1))
  74 0042 2081      		ld r18,Z
  75 0044 3181      		ldd r19,Z+1
  76               	.LVL6:
  77               		.loc 1 946 13 view .LVU12
  78 0046 6050      		subi r22,lo8(-(CSWTCH.2))
  79 0048 7040      		sbci r23,hi8(-(CSWTCH.2))
  80               	.LVL7:
  81               		.loc 1 946 13 view .LVU13
  82 004a FB01      		movw r30,r22
  83 004c 8081      		ld r24,Z
  84 004e 90E0      		ldi r25,0
  85 0050 00C0      		rjmp .L4
  86               	.LVL8:
  87               	.L2:
 891:./tmk_core/protocol/lufa/descriptor.c ****             {
  88               		.loc 1 891 13 is_stmt 1 view .LVU14
  89 0052 9927      		clr r25
  90               	.LVL9:
 891:./tmk_core/protocol/lufa/descriptor.c ****             {
  91               		.loc 1 891 13 is_stmt 0 view .LVU15
  92 0054 8130      		cpi r24,1
  93 0056 9105      		cpc r25,__zero_reg__
  94 0058 01F0      		breq .L7
  95 005a 0097      		sbiw r24,0
  96 005c 01F0      		breq .L8
  97 005e 0297      		sbiw r24,2
  98 0060 01F4      		brne .L13
 902:./tmk_core/protocol/lufa/descriptor.c ****                     Size    = pgm_read_byte(&ProductString.Header.Size);
  99               		.loc 1 902 21 is_stmt 1 view .LVU16
 100               	.LVL10:
 903:./tmk_core/protocol/lufa/descriptor.c ****                     break;
 101               		.loc 1 903 21 view .LVU17
 102               	.LBB2:
 903:./tmk_core/protocol/lufa/descriptor.c ****                     break;
 103               		.loc 1 903 31 view .LVU18
 903:./tmk_core/protocol/lufa/descriptor.c ****                     break;
 104               		.loc 1 903 31 view .LVU19
 903:./tmk_core/protocol/lufa/descriptor.c ****                     break;
 105               		.loc 1 903 31 view .LVU20
 106 0062 E0E0      		ldi r30,lo8(ProductString)
 107 0064 F0E0      		ldi r31,hi8(ProductString)
 108 0066 00C0      		rjmp .L14
 109               	.LVL11:
 110               	.L8:
 903:./tmk_core/protocol/lufa/descriptor.c ****                     break;
 111               		.loc 1 903 31 is_stmt 0 view .LVU21
 112               	.LBE2:
 894:./tmk_core/protocol/lufa/descriptor.c ****                     Size    = pgm_read_byte(&LanguageString.Header.Size);
 113               		.loc 1 894 21 is_stmt 1 view .LVU22
 895:./tmk_core/protocol/lufa/descriptor.c ****                     break;
 114               		.loc 1 895 21 view .LVU23
 115               	.LBB3:
 895:./tmk_core/protocol/lufa/descriptor.c ****                     break;
 116               		.loc 1 895 31 view .LVU24
 895:./tmk_core/protocol/lufa/descriptor.c ****                     break;
 117               		.loc 1 895 31 view .LVU25
 895:./tmk_core/protocol/lufa/descriptor.c ****                     break;
 118               		.loc 1 895 31 view .LVU26
 119 0068 E0E0      		ldi r30,lo8(LanguageString)
 120 006a F0E0      		ldi r31,hi8(LanguageString)
 121               	.LVL12:
 122               	.L14:
 895:./tmk_core/protocol/lufa/descriptor.c ****                     break;
 123               		.loc 1 895 31 is_stmt 0 view .LVU27
 124               	.LBE3:
 125               	.LBB4:
 903:./tmk_core/protocol/lufa/descriptor.c ****                     break;
 126               		.loc 1 903 31 view .LVU28
 127               	/* #APP */
 128               	 ;  903 "./tmk_core/protocol/lufa/descriptor.c" 1
 129 006c 8491      		lpm r24, Z
 130               		
 131               	 ;  0 "" 2
 132               	.LVL13:
 903:./tmk_core/protocol/lufa/descriptor.c ****                     break;
 133               		.loc 1 903 31 is_stmt 1 view .LVU29
 134               	/* #NOAPP */
 135               	.LBE4:
 903:./tmk_core/protocol/lufa/descriptor.c ****                     break;
 136               		.loc 1 903 29 is_stmt 0 view .LVU30
 137 006e 90E0      		ldi r25,0
 138               	.LVL14:
 904:./tmk_core/protocol/lufa/descriptor.c ****             }
 139               		.loc 1 904 21 is_stmt 1 view .LVU31
 902:./tmk_core/protocol/lufa/descriptor.c ****                     Size    = pgm_read_byte(&ProductString.Header.Size);
 140               		.loc 1 902 29 is_stmt 0 view .LVU32
 141 0070 9F01      		movw r18,r30
 142               	.LVL15:
 143               	.L4:
 947:./tmk_core/protocol/lufa/descriptor.c ****             case KEYBOARD_INTERFACE:
 948:./tmk_core/protocol/lufa/descriptor.c ****                 Address = &KeyboardReport;
 949:./tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(KeyboardReport);
 950:./tmk_core/protocol/lufa/descriptor.c ****                 break;
 951:./tmk_core/protocol/lufa/descriptor.c **** #ifdef MOUSE_ENABLE
 952:./tmk_core/protocol/lufa/descriptor.c ****             case MOUSE_INTERFACE:
 953:./tmk_core/protocol/lufa/descriptor.c ****                 Address = &MouseReport;
 954:./tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(MouseReport);
 955:./tmk_core/protocol/lufa/descriptor.c ****                 break;
 956:./tmk_core/protocol/lufa/descriptor.c **** #endif
 957:./tmk_core/protocol/lufa/descriptor.c **** #ifdef EXTRAKEY_ENABLE
 958:./tmk_core/protocol/lufa/descriptor.c ****             case EXTRAKEY_INTERFACE:
 959:./tmk_core/protocol/lufa/descriptor.c ****                 Address = &ExtrakeyReport;
 960:./tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(ExtrakeyReport);
 961:./tmk_core/protocol/lufa/descriptor.c ****                 break;
 962:./tmk_core/protocol/lufa/descriptor.c **** #endif
 963:./tmk_core/protocol/lufa/descriptor.c **** #ifdef RAW_ENABLE
 964:./tmk_core/protocol/lufa/descriptor.c ****             case RAW_INTERFACE:
 965:./tmk_core/protocol/lufa/descriptor.c ****                 Address = &RawReport;
 966:./tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(RawReport);
 967:./tmk_core/protocol/lufa/descriptor.c ****                 break;
 968:./tmk_core/protocol/lufa/descriptor.c **** #endif
 969:./tmk_core/protocol/lufa/descriptor.c **** #ifdef CONSOLE_ENABLE
 970:./tmk_core/protocol/lufa/descriptor.c ****             case CONSOLE_INTERFACE:
 971:./tmk_core/protocol/lufa/descriptor.c ****                 Address = &ConsoleReport;
 972:./tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(ConsoleReport);
 973:./tmk_core/protocol/lufa/descriptor.c ****                 break;
 974:./tmk_core/protocol/lufa/descriptor.c **** #endif
 975:./tmk_core/protocol/lufa/descriptor.c **** #ifdef NKRO_ENABLE
 976:./tmk_core/protocol/lufa/descriptor.c ****             case NKRO_INTERFACE:
 977:./tmk_core/protocol/lufa/descriptor.c ****                 Address = &NKROReport;
 978:./tmk_core/protocol/lufa/descriptor.c ****                 Size    = sizeof(NKROReport);
 979:./tmk_core/protocol/lufa/descriptor.c ****                 break;
 980:./tmk_core/protocol/lufa/descriptor.c **** #endif
 981:./tmk_core/protocol/lufa/descriptor.c ****             }
 982:./tmk_core/protocol/lufa/descriptor.c ****             break;
 983:./tmk_core/protocol/lufa/descriptor.c ****     }
 984:./tmk_core/protocol/lufa/descriptor.c **** 
 985:./tmk_core/protocol/lufa/descriptor.c ****     *DescriptorAddress = Address;
 144               		.loc 1 985 5 is_stmt 1 view .LVU33
 145               		.loc 1 985 24 is_stmt 0 view .LVU34
 146 0072 FA01      		movw r30,r20
 147 0074 3183      		std Z+1,r19
 148 0076 2083      		st Z,r18
 986:./tmk_core/protocol/lufa/descriptor.c ****     return Size;
 149               		.loc 1 986 5 is_stmt 1 view .LVU35
 150               	/* epilogue start */
 987:./tmk_core/protocol/lufa/descriptor.c **** }
 151               		.loc 1 987 1 is_stmt 0 view .LVU36
 152 0078 0895      		ret
 153               	.LVL16:
 154               	.L7:
 898:./tmk_core/protocol/lufa/descriptor.c ****                     Size    = pgm_read_byte(&ManufacturerString.Header.Size);
 155               		.loc 1 898 21 is_stmt 1 view .LVU37
 899:./tmk_core/protocol/lufa/descriptor.c ****                     break;
 156               		.loc 1 899 21 view .LVU38
 157               	.LBB5:
 899:./tmk_core/protocol/lufa/descriptor.c ****                     break;
 158               		.loc 1 899 31 view .LVU39
 899:./tmk_core/protocol/lufa/descriptor.c ****                     break;
 159               		.loc 1 899 31 view .LVU40
 899:./tmk_core/protocol/lufa/descriptor.c ****                     break;
 160               		.loc 1 899 31 view .LVU41
 161 007a E0E0      		ldi r30,lo8(ManufacturerString)
 162 007c F0E0      		ldi r31,hi8(ManufacturerString)
 163 007e 00C0      		rjmp .L14
 164               	.LVL17:
 165               	.L5:
 899:./tmk_core/protocol/lufa/descriptor.c ****                     break;
 166               		.loc 1 899 31 is_stmt 0 view .LVU42
 167               	.LBE5:
 908:./tmk_core/protocol/lufa/descriptor.c ****             case KEYBOARD_INTERFACE:
 168               		.loc 1 908 13 is_stmt 1 view .LVU43
 169 0080 6430      		cpi r22,lo8(4)
 170 0082 00F4      		brsh .L13
 171 0084 E62F      		mov r30,r22
 172 0086 F0E0      		ldi r31,0
 173 0088 EE0F      		lsl r30
 174 008a FF1F      		rol r31
 175 008c E050      		subi r30,lo8(-(CSWTCH.0))
 176 008e F040      		sbci r31,hi8(-(CSWTCH.0))
 177 0090 2081      		ld r18,Z
 178 0092 3181      		ldd r19,Z+1
 179               	.LVL18:
 880:./tmk_core/protocol/lufa/descriptor.c ****     {
 180               		.loc 1 880 5 is_stmt 0 view .LVU44
 181 0094 89E0      		ldi r24,lo8(9)
 182 0096 90E0      		ldi r25,0
 183               	.LVL19:
 880:./tmk_core/protocol/lufa/descriptor.c ****     {
 184               		.loc 1 880 5 view .LVU45
 185 0098 00C0      		rjmp .L4
 186               	.LVL20:
 187               	.L10:
 884:./tmk_core/protocol/lufa/descriptor.c ****             break;
 188               		.loc 1 884 21 view .LVU46
 189 009a 82E1      		ldi r24,lo8(18)
 190 009c 90E0      		ldi r25,0
 191               	.LVL21:
 883:./tmk_core/protocol/lufa/descriptor.c ****             Size    = sizeof(USB_Descriptor_Device_t);
 192               		.loc 1 883 21 view .LVU47
 193 009e 20E0      		ldi r18,lo8(DeviceDescriptor)
 194 00a0 30E0      		ldi r19,hi8(DeviceDescriptor)
 195               	.LVL22:
 883:./tmk_core/protocol/lufa/descriptor.c ****             Size    = sizeof(USB_Descriptor_Device_t);
 196               		.loc 1 883 21 view .LVU48
 197 00a2 00C0      		rjmp .L4
 198               	.LVL23:
 199               	.L11:
 888:./tmk_core/protocol/lufa/descriptor.c ****             break;
 200               		.loc 1 888 21 view .LVU49
 201 00a4 8DE6      		ldi r24,lo8(109)
 202 00a6 90E0      		ldi r25,0
 203               	.LVL24:
 887:./tmk_core/protocol/lufa/descriptor.c ****             Size    = sizeof(USB_Descriptor_Configuration_t);
 204               		.loc 1 887 21 view .LVU50
 205 00a8 20E0      		ldi r18,lo8(ConfigurationDescriptor)
 206 00aa 30E0      		ldi r19,hi8(ConfigurationDescriptor)
 207               	.LVL25:
 887:./tmk_core/protocol/lufa/descriptor.c ****             Size    = sizeof(USB_Descriptor_Configuration_t);
 208               		.loc 1 887 21 view .LVU51
 209 00ac 00C0      		rjmp .L4
 210               		.cfi_endproc
 211               	.LFE100:
 213               		.section	.rodata.CSWTCH.2,"a"
 216               	CSWTCH.2:
 217 0000 40        		.byte	64
 218 0001 4D        		.byte	77
 219 0002 36        		.byte	54
 220 0003 39        		.byte	57
 221               		.section	.rodata.CSWTCH.1,"a"
 224               	CSWTCH.1:
 225 0000 0000      		.word	KeyboardReport
 226 0002 0000      		.word	MouseReport
 227 0004 0000      		.word	ExtrakeyReport
 228 0006 0000      		.word	NKROReport
 229               		.section	.rodata.CSWTCH.0,"a"
 232               	CSWTCH.0:
 233 0000 0000      		.word	ConfigurationDescriptor+18
 234 0002 0000      		.word	ConfigurationDescriptor+43
 235 0004 0000      		.word	ConfigurationDescriptor+68
 236 0006 0000      		.word	ConfigurationDescriptor+93
 237               	.global	ProductString
 238               		.section	.progmem.data.ProductString,"a"
 241               	ProductString:
 242 0000 12        		.byte	18
 243 0001 03        		.byte	3
 244 0002 6B00      		.string	"k"
 245 0004 6500      		.string	"e"
 246 0006 7900      		.string	"y"
 247 0008 6200      		.string	"b"
 248 000a 6F00      		.string	"o"
 249 000c 6100      		.string	"a"
 250 000e 7200      		.string	"r"
 251 0010 6400      		.string	"d"
 252 0012 00        		.string	""
 253 0013 00        		.string	""
 254               	.global	ManufacturerString
 255               		.section	.progmem.data.ManufacturerString,"a"
 258               	ManufacturerString:
 259 0000 16        		.byte	22
 260 0001 03        		.byte	3
 261 0002 7100      		.string	"q"
 262 0004 6D00      		.string	"m"
 263 0006 6B00      		.string	"k"
 264 0008 6200      		.string	"b"
 265 000a 7500      		.string	"u"
 266 000c 6900      		.string	"i"
 267 000e 6C00      		.string	"l"
 268 0010 6400      		.string	"d"
 269 0012 6500      		.string	"e"
 270 0014 7200      		.string	"r"
 271 0016 00        		.string	""
 272 0017 00        		.string	""
 273               	.global	LanguageString
 274               		.section	.progmem.data.LanguageString,"a"
 277               	LanguageString:
 278 0000 04        		.byte	4
 279 0001 03        		.byte	3
 280 0002 0904      		.word	1033
 281               	.global	ConfigurationDescriptor
 282               		.section	.progmem.data.ConfigurationDescriptor,"a"
 285               	ConfigurationDescriptor:
 286 0000 09        		.byte	9
 287 0001 02        		.byte	2
 288 0002 6D00      		.word	109
 289 0004 04        		.byte	4
 290 0005 01        		.byte	1
 291 0006 00        		.byte	0
 292 0007 A0        		.byte	-96
 293 0008 FA        		.byte	-6
 294 0009 09        		.byte	9
 295 000a 04        		.byte	4
 296 000b 00        		.byte	0
 297 000c 00        		.byte	0
 298 000d 01        		.byte	1
 299 000e 03        		.byte	3
 300 000f 01        		.byte	1
 301 0010 01        		.byte	1
 302 0011 00        		.byte	0
 303 0012 09        		.byte	9
 304 0013 21        		.byte	33
 305 0014 1101      		.word	273
 306 0016 00        		.byte	0
 307 0017 01        		.byte	1
 308 0018 22        		.byte	34
 309 0019 4000      		.word	64
 310 001b 07        		.byte	7
 311 001c 05        		.byte	5
 312 001d 81        		.byte	-127
 313 001e 03        		.byte	3
 314 001f 0800      		.word	8
 315 0021 0A        		.byte	10
 316 0022 09        		.byte	9
 317 0023 04        		.byte	4
 318 0024 01        		.byte	1
 319 0025 00        		.byte	0
 320 0026 01        		.byte	1
 321 0027 03        		.byte	3
 322 0028 01        		.byte	1
 323 0029 02        		.byte	2
 324 002a 00        		.byte	0
 325 002b 09        		.byte	9
 326 002c 21        		.byte	33
 327 002d 1101      		.word	273
 328 002f 00        		.byte	0
 329 0030 01        		.byte	1
 330 0031 22        		.byte	34
 331 0032 4D00      		.word	77
 332 0034 07        		.byte	7
 333 0035 05        		.byte	5
 334 0036 82        		.byte	-126
 335 0037 03        		.byte	3
 336 0038 0800      		.word	8
 337 003a 0A        		.byte	10
 338 003b 09        		.byte	9
 339 003c 04        		.byte	4
 340 003d 02        		.byte	2
 341 003e 00        		.byte	0
 342 003f 01        		.byte	1
 343 0040 03        		.byte	3
 344 0041 00        		.byte	0
 345 0042 00        		.byte	0
 346 0043 00        		.byte	0
 347 0044 09        		.byte	9
 348 0045 21        		.byte	33
 349 0046 1101      		.word	273
 350 0048 00        		.byte	0
 351 0049 01        		.byte	1
 352 004a 22        		.byte	34
 353 004b 3600      		.word	54
 354 004d 07        		.byte	7
 355 004e 05        		.byte	5
 356 004f 83        		.byte	-125
 357 0050 03        		.byte	3
 358 0051 0800      		.word	8
 359 0053 0A        		.byte	10
 360 0054 09        		.byte	9
 361 0055 04        		.byte	4
 362 0056 03        		.byte	3
 363 0057 00        		.byte	0
 364 0058 01        		.byte	1
 365 0059 03        		.byte	3
 366 005a 00        		.byte	0
 367 005b 00        		.byte	0
 368 005c 00        		.byte	0
 369 005d 09        		.byte	9
 370 005e 21        		.byte	33
 371 005f 1101      		.word	273
 372 0061 00        		.byte	0
 373 0062 01        		.byte	1
 374 0063 22        		.byte	34
 375 0064 3900      		.word	57
 376 0066 07        		.byte	7
 377 0067 05        		.byte	5
 378 0068 84        		.byte	-124
 379 0069 03        		.byte	3
 380 006a 2000      		.word	32
 381 006c 01        		.byte	1
 382               	.global	DeviceDescriptor
 383               		.section	.progmem.data.DeviceDescriptor,"a"
 386               	DeviceDescriptor:
 387 0000 12        		.byte	18
 388 0001 01        		.byte	1
 389 0002 1001      		.word	272
 390 0004 00        		.byte	0
 391 0005 00        		.byte	0
 392 0006 00        		.byte	0
 393 0007 08        		.byte	8
 394 0008 EDFE      		.word	-275
 395 000a 6060      		.word	24672
 396 000c 0100      		.word	1
 397 000e 01        		.byte	1
 398 000f 02        		.byte	2
 399 0010 00        		.byte	0
 400 0011 01        		.byte	1
 401               	.global	NKROReport
 402               		.section	.progmem.data.NKROReport,"a"
 405               	NKROReport:
 406 0000 05        		.byte	5
 407 0001 01        		.byte	1
 408 0002 09        		.byte	9
 409 0003 06        		.byte	6
 410 0004 A1        		.byte	-95
 411 0005 01        		.byte	1
 412 0006 05        		.byte	5
 413 0007 07        		.byte	7
 414 0008 19        		.byte	25
 415 0009 E0        		.byte	-32
 416 000a 29        		.byte	41
 417 000b E7        		.byte	-25
 418 000c 15        		.byte	21
 419 000d 00        		.byte	0
 420 000e 25        		.byte	37
 421 000f 01        		.byte	1
 422 0010 95        		.byte	-107
 423 0011 08        		.byte	8
 424 0012 75        		.byte	117
 425 0013 01        		.byte	1
 426 0014 81        		.byte	-127
 427 0015 02        		.byte	2
 428 0016 05        		.byte	5
 429 0017 08        		.byte	8
 430 0018 19        		.byte	25
 431 0019 01        		.byte	1
 432 001a 29        		.byte	41
 433 001b 05        		.byte	5
 434 001c 95        		.byte	-107
 435 001d 05        		.byte	5
 436 001e 75        		.byte	117
 437 001f 01        		.byte	1
 438 0020 91        		.byte	-111
 439 0021 02        		.byte	2
 440 0022 95        		.byte	-107
 441 0023 01        		.byte	1
 442 0024 75        		.byte	117
 443 0025 03        		.byte	3
 444 0026 91        		.byte	-111
 445 0027 01        		.byte	1
 446 0028 05        		.byte	5
 447 0029 07        		.byte	7
 448 002a 19        		.byte	25
 449 002b 00        		.byte	0
 450 002c 29        		.byte	41
 451 002d F7        		.byte	-9
 452 002e 15        		.byte	21
 453 002f 00        		.byte	0
 454 0030 25        		.byte	37
 455 0031 01        		.byte	1
 456 0032 95        		.byte	-107
 457 0033 F8        		.byte	-8
 458 0034 75        		.byte	117
 459 0035 01        		.byte	1
 460 0036 81        		.byte	-127
 461 0037 02        		.byte	2
 462 0038 C0        		.byte	-64
 463               	.global	ExtrakeyReport
 464               		.section	.progmem.data.ExtrakeyReport,"a"
 467               	ExtrakeyReport:
 468 0000 05        		.byte	5
 469 0001 01        		.byte	1
 470 0002 09        		.byte	9
 471 0003 80        		.byte	-128
 472 0004 A1        		.byte	-95
 473 0005 01        		.byte	1
 474 0006 85        		.byte	-123
 475 0007 02        		.byte	2
 476 0008 16        		.byte	22
 477 0009 01        		.byte	1
 478 000a 00        		.byte	0
 479 000b 26        		.byte	38
 480 000c 03        		.byte	3
 481 000d 00        		.byte	0
 482 000e 1A        		.byte	26
 483 000f 81        		.byte	-127
 484 0010 00        		.byte	0
 485 0011 2A        		.byte	42
 486 0012 83        		.byte	-125
 487 0013 00        		.byte	0
 488 0014 75        		.byte	117
 489 0015 10        		.byte	16
 490 0016 95        		.byte	-107
 491 0017 01        		.byte	1
 492 0018 81        		.byte	-127
 493 0019 00        		.byte	0
 494 001a C0        		.byte	-64
 495 001b 05        		.byte	5
 496 001c 0C        		.byte	12
 497 001d 09        		.byte	9
 498 001e 01        		.byte	1
 499 001f A1        		.byte	-95
 500 0020 01        		.byte	1
 501 0021 85        		.byte	-123
 502 0022 03        		.byte	3
 503 0023 16        		.byte	22
 504 0024 01        		.byte	1
 505 0025 00        		.byte	0
 506 0026 26        		.byte	38
 507 0027 9C        		.byte	-100
 508 0028 02        		.byte	2
 509 0029 1A        		.byte	26
 510 002a 01        		.byte	1
 511 002b 00        		.byte	0
 512 002c 2A        		.byte	42
 513 002d 9C        		.byte	-100
 514 002e 02        		.byte	2
 515 002f 75        		.byte	117
 516 0030 10        		.byte	16
 517 0031 95        		.byte	-107
 518 0032 01        		.byte	1
 519 0033 81        		.byte	-127
 520 0034 00        		.byte	0
 521 0035 C0        		.byte	-64
 522               	.global	MouseReport
 523               		.section	.progmem.data.MouseReport,"a"
 526               	MouseReport:
 527 0000 05        		.byte	5
 528 0001 01        		.byte	1
 529 0002 09        		.byte	9
 530 0003 02        		.byte	2
 531 0004 A1        		.byte	-95
 532 0005 01        		.byte	1
 533 0006 09        		.byte	9
 534 0007 01        		.byte	1
 535 0008 A1        		.byte	-95
 536 0009 00        		.byte	0
 537 000a 05        		.byte	5
 538 000b 09        		.byte	9
 539 000c 19        		.byte	25
 540 000d 01        		.byte	1
 541 000e 29        		.byte	41
 542 000f 05        		.byte	5
 543 0010 15        		.byte	21
 544 0011 00        		.byte	0
 545 0012 25        		.byte	37
 546 0013 01        		.byte	1
 547 0014 95        		.byte	-107
 548 0015 05        		.byte	5
 549 0016 75        		.byte	117
 550 0017 01        		.byte	1
 551 0018 81        		.byte	-127
 552 0019 02        		.byte	2
 553 001a 95        		.byte	-107
 554 001b 01        		.byte	1
 555 001c 75        		.byte	117
 556 001d 03        		.byte	3
 557 001e 81        		.byte	-127
 558 001f 01        		.byte	1
 559 0020 05        		.byte	5
 560 0021 01        		.byte	1
 561 0022 09        		.byte	9
 562 0023 30        		.byte	48
 563 0024 09        		.byte	9
 564 0025 31        		.byte	49
 565 0026 15        		.byte	21
 566 0027 81        		.byte	-127
 567 0028 25        		.byte	37
 568 0029 7F        		.byte	127
 569 002a 95        		.byte	-107
 570 002b 02        		.byte	2
 571 002c 75        		.byte	117
 572 002d 08        		.byte	8
 573 002e 81        		.byte	-127
 574 002f 06        		.byte	6
 575 0030 09        		.byte	9
 576 0031 38        		.byte	56
 577 0032 15        		.byte	21
 578 0033 81        		.byte	-127
 579 0034 25        		.byte	37
 580 0035 7F        		.byte	127
 581 0036 95        		.byte	-107
 582 0037 01        		.byte	1
 583 0038 75        		.byte	117
 584 0039 08        		.byte	8
 585 003a 81        		.byte	-127
 586 003b 06        		.byte	6
 587 003c 05        		.byte	5
 588 003d 0C        		.byte	12
 589 003e 0A        		.byte	10
 590 003f 38        		.byte	56
 591 0040 02        		.byte	2
 592 0041 15        		.byte	21
 593 0042 81        		.byte	-127
 594 0043 25        		.byte	37
 595 0044 7F        		.byte	127
 596 0045 95        		.byte	-107
 597 0046 01        		.byte	1
 598 0047 75        		.byte	117
 599 0048 08        		.byte	8
 600 0049 81        		.byte	-127
 601 004a 06        		.byte	6
 602 004b C0        		.byte	-64
 603 004c C0        		.byte	-64
 604               	.global	KeyboardReport
 605               		.section	.progmem.data.KeyboardReport,"a"
 608               	KeyboardReport:
 609 0000 05        		.byte	5
 610 0001 01        		.byte	1
 611 0002 09        		.byte	9
 612 0003 06        		.byte	6
 613 0004 A1        		.byte	-95
 614 0005 01        		.byte	1
 615 0006 05        		.byte	5
 616 0007 07        		.byte	7
 617 0008 19        		.byte	25
 618 0009 E0        		.byte	-32
 619 000a 29        		.byte	41
 620 000b E7        		.byte	-25
 621 000c 15        		.byte	21
 622 000d 00        		.byte	0
 623 000e 25        		.byte	37
 624 000f 01        		.byte	1
 625 0010 95        		.byte	-107
 626 0011 08        		.byte	8
 627 0012 75        		.byte	117
 628 0013 01        		.byte	1
 629 0014 81        		.byte	-127
 630 0015 02        		.byte	2
 631 0016 95        		.byte	-107
 632 0017 01        		.byte	1
 633 0018 75        		.byte	117
 634 0019 08        		.byte	8
 635 001a 81        		.byte	-127
 636 001b 01        		.byte	1
 637 001c 05        		.byte	5
 638 001d 08        		.byte	8
 639 001e 19        		.byte	25
 640 001f 01        		.byte	1
 641 0020 29        		.byte	41
 642 0021 05        		.byte	5
 643 0022 95        		.byte	-107
 644 0023 05        		.byte	5
 645 0024 75        		.byte	117
 646 0025 01        		.byte	1
 647 0026 91        		.byte	-111
 648 0027 02        		.byte	2
 649 0028 95        		.byte	-107
 650 0029 01        		.byte	1
 651 002a 75        		.byte	117
 652 002b 03        		.byte	3
 653 002c 91        		.byte	-111
 654 002d 01        		.byte	1
 655 002e 05        		.byte	5
 656 002f 07        		.byte	7
 657 0030 19        		.byte	25
 658 0031 00        		.byte	0
 659 0032 29        		.byte	41
 660 0033 FF        		.byte	-1
 661 0034 15        		.byte	21
 662 0035 00        		.byte	0
 663 0036 26        		.byte	38
 664 0037 FF        		.byte	-1
 665 0038 00        		.byte	0
 666 0039 95        		.byte	-107
 667 003a 06        		.byte	6
 668 003b 75        		.byte	117
 669 003c 08        		.byte	8
 670 003d 81        		.byte	-127
 671 003e 00        		.byte	0
 672 003f C0        		.byte	-64
 673               		.text
 674               	.Letext0:
 675               		.file 2 "c:\\msys64\\home\\pc-office\\qmk_utils\\avr8-gnu-toolchain\\avr\\include\\stdint.h"
 676               		.file 3 "c:\\msys64\\home\\pc-office\\qmk_utils\\avr8-gnu-toolchain\\lib\\gcc\\avr\\8.3.0\\include
 677               		.file 4 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../StdDescriptors.h"
 678               		.file 5 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../StdRequestType.h"
 679               		.file 6 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../DeviceStandardReq.h"
 680               		.file 7 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/USBTask.h"
 681               		.file 8 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/HostStandardReq.h"
 682               		.file 9 "c:\\msys64\\home\\pc-office\\qmk_utils\\avr8-gnu-toolchain\\avr\\include\\stdio.h"
 683               		.file 10 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../Common/HIDClassCommon
 684               		.file 11 "./tmk_core/protocol/lufa/descriptor.h"
DEFINED SYMBOLS
                            *ABS*:00000000 descriptor.c
C:\msys64\tmp\cc4Q0U5I.s:2      *ABS*:0000003e __SP_H__
C:\msys64\tmp\cc4Q0U5I.s:3      *ABS*:0000003d __SP_L__
C:\msys64\tmp\cc4Q0U5I.s:4      *ABS*:0000003f __SREG__
C:\msys64\tmp\cc4Q0U5I.s:5      *ABS*:00000000 __tmp_reg__
C:\msys64\tmp\cc4Q0U5I.s:6      *ABS*:00000001 __zero_reg__
C:\msys64\tmp\cc4Q0U5I.s:13     .text.CALLBACK_USB_GetDescriptor:00000000 CALLBACK_USB_GetDescriptor
C:\msys64\tmp\cc4Q0U5I.s:224    .rodata.CSWTCH.1:00000000 CSWTCH.1
C:\msys64\tmp\cc4Q0U5I.s:216    .rodata.CSWTCH.2:00000000 CSWTCH.2
C:\msys64\tmp\cc4Q0U5I.s:241    .progmem.data.ProductString:00000000 ProductString
C:\msys64\tmp\cc4Q0U5I.s:277    .progmem.data.LanguageString:00000000 LanguageString
C:\msys64\tmp\cc4Q0U5I.s:258    .progmem.data.ManufacturerString:00000000 ManufacturerString
C:\msys64\tmp\cc4Q0U5I.s:232    .rodata.CSWTCH.0:00000000 CSWTCH.0
C:\msys64\tmp\cc4Q0U5I.s:386    .progmem.data.DeviceDescriptor:00000000 DeviceDescriptor
C:\msys64\tmp\cc4Q0U5I.s:285    .progmem.data.ConfigurationDescriptor:00000000 ConfigurationDescriptor
C:\msys64\tmp\cc4Q0U5I.s:608    .progmem.data.KeyboardReport:00000000 KeyboardReport
C:\msys64\tmp\cc4Q0U5I.s:526    .progmem.data.MouseReport:00000000 MouseReport
C:\msys64\tmp\cc4Q0U5I.s:467    .progmem.data.ExtrakeyReport:00000000 ExtrakeyReport
C:\msys64\tmp\cc4Q0U5I.s:405    .progmem.data.NKROReport:00000000 NKROReport

UNDEFINED SYMBOLS
__do_copy_data
