   1               		.file	"keyboard.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.matrix_setup,"ax",@progbits
  11               		.weak	matrix_setup
  13               	matrix_setup:
  14               	.LFB103:
  15               		.file 1 "./tmk_core/common/keyboard.c"
   1:./tmk_core/common/keyboard.c **** /*
   2:./tmk_core/common/keyboard.c **** Copyright 2011, 2012, 2013 Jun Wako <wakojun@gmail.com>
   3:./tmk_core/common/keyboard.c **** 
   4:./tmk_core/common/keyboard.c **** This program is free software: you can redistribute it and/or modify
   5:./tmk_core/common/keyboard.c **** it under the terms of the GNU General Public License as published by
   6:./tmk_core/common/keyboard.c **** the Free Software Foundation, either version 2 of the License, or
   7:./tmk_core/common/keyboard.c **** (at your option) any later version.
   8:./tmk_core/common/keyboard.c **** 
   9:./tmk_core/common/keyboard.c **** This program is distributed in the hope that it will be useful,
  10:./tmk_core/common/keyboard.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:./tmk_core/common/keyboard.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:./tmk_core/common/keyboard.c **** GNU General Public License for more details.
  13:./tmk_core/common/keyboard.c **** 
  14:./tmk_core/common/keyboard.c **** You should have received a copy of the GNU General Public License
  15:./tmk_core/common/keyboard.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:./tmk_core/common/keyboard.c **** */
  17:./tmk_core/common/keyboard.c **** #include <stdint.h>
  18:./tmk_core/common/keyboard.c **** #include "keyboard.h"
  19:./tmk_core/common/keyboard.c **** #include "matrix.h"
  20:./tmk_core/common/keyboard.c **** #include "keymap.h"
  21:./tmk_core/common/keyboard.c **** #include "host.h"
  22:./tmk_core/common/keyboard.c **** #include "led.h"
  23:./tmk_core/common/keyboard.c **** #include "keycode.h"
  24:./tmk_core/common/keyboard.c **** #include "timer.h"
  25:./tmk_core/common/keyboard.c **** #include "print.h"
  26:./tmk_core/common/keyboard.c **** #include "debug.h"
  27:./tmk_core/common/keyboard.c **** #include "command.h"
  28:./tmk_core/common/keyboard.c **** #include "util.h"
  29:./tmk_core/common/keyboard.c **** #include "sendchar.h"
  30:./tmk_core/common/keyboard.c **** #include "eeconfig.h"
  31:./tmk_core/common/keyboard.c **** #include "backlight.h"
  32:./tmk_core/common/keyboard.c **** #include "action_layer.h"
  33:./tmk_core/common/keyboard.c **** #ifdef BOOTMAGIC_ENABLE
  34:./tmk_core/common/keyboard.c **** #   include "bootmagic.h"
  35:./tmk_core/common/keyboard.c **** #else
  36:./tmk_core/common/keyboard.c **** #   include "magic.h"
  37:./tmk_core/common/keyboard.c **** #endif
  38:./tmk_core/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
  39:./tmk_core/common/keyboard.c **** #   include "mousekey.h"
  40:./tmk_core/common/keyboard.c **** #endif
  41:./tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
  42:./tmk_core/common/keyboard.c **** #   include "ps2_mouse.h"
  43:./tmk_core/common/keyboard.c **** #endif
  44:./tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
  45:./tmk_core/common/keyboard.c **** #   include "serial_mouse.h"
  46:./tmk_core/common/keyboard.c **** #endif
  47:./tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
  48:./tmk_core/common/keyboard.c **** #   include "adb.h"
  49:./tmk_core/common/keyboard.c **** #endif
  50:./tmk_core/common/keyboard.c **** #ifdef RGBLIGHT_ENABLE
  51:./tmk_core/common/keyboard.c **** #   include "rgblight.h"
  52:./tmk_core/common/keyboard.c **** #endif
  53:./tmk_core/common/keyboard.c **** #ifdef SERIAL_LINK_ENABLE
  54:./tmk_core/common/keyboard.c **** #   include "serial_link/system/serial_link.h"
  55:./tmk_core/common/keyboard.c **** #endif
  56:./tmk_core/common/keyboard.c **** #ifdef VISUALIZER_ENABLE
  57:./tmk_core/common/keyboard.c **** #   include "visualizer/visualizer.h"
  58:./tmk_core/common/keyboard.c **** #endif
  59:./tmk_core/common/keyboard.c **** 
  60:./tmk_core/common/keyboard.c **** 
  61:./tmk_core/common/keyboard.c **** 
  62:./tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
  63:./tmk_core/common/keyboard.c **** static bool has_ghost_in_row(uint8_t row)
  64:./tmk_core/common/keyboard.c **** {
  65:./tmk_core/common/keyboard.c ****     matrix_row_t matrix_row = matrix_get_row(row);
  66:./tmk_core/common/keyboard.c ****     // No ghost exists when less than 2 keys are down on the row
  67:./tmk_core/common/keyboard.c ****     if (((matrix_row - 1) & matrix_row) == 0)
  68:./tmk_core/common/keyboard.c ****         return false;
  69:./tmk_core/common/keyboard.c **** 
  70:./tmk_core/common/keyboard.c ****     // Ghost occurs when the row shares column line with other row
  71:./tmk_core/common/keyboard.c ****     for (uint8_t i=0; i < MATRIX_ROWS; i++) {
  72:./tmk_core/common/keyboard.c ****         if (i != row && (matrix_get_row(i) & matrix_row))
  73:./tmk_core/common/keyboard.c ****             return true;
  74:./tmk_core/common/keyboard.c ****     }
  75:./tmk_core/common/keyboard.c ****     return false;
  76:./tmk_core/common/keyboard.c **** }
  77:./tmk_core/common/keyboard.c **** #endif
  78:./tmk_core/common/keyboard.c **** 
  79:./tmk_core/common/keyboard.c **** __attribute__ ((weak))
  80:./tmk_core/common/keyboard.c **** void matrix_setup(void) {
  16               		.loc 1 80 25 view -0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
  81:./tmk_core/common/keyboard.c **** }
  22               		.loc 1 81 1 view .LVU1
  23               	/* epilogue start */
  24 0000 0895      		ret
  25               		.cfi_endproc
  26               	.LFE103:
  28               		.section	.text.keyboard_setup,"ax",@progbits
  29               	.global	keyboard_setup
  31               	keyboard_setup:
  32               	.LFB104:
  82:./tmk_core/common/keyboard.c **** 
  83:./tmk_core/common/keyboard.c **** void keyboard_setup(void) {
  33               		.loc 1 83 27 view -0
  34               		.cfi_startproc
  35               	/* prologue: function */
  36               	/* frame size = 0 */
  37               	/* stack size = 0 */
  38               	.L__stack_usage = 0
  84:./tmk_core/common/keyboard.c ****     matrix_setup();
  39               		.loc 1 84 5 view .LVU3
  40 0000 0C94 0000 		jmp matrix_setup
  41               	.LVL0:
  42               		.cfi_endproc
  43               	.LFE104:
  45               		.section	.text.keyboard_init,"ax",@progbits
  46               	.global	keyboard_init
  48               	keyboard_init:
  49               	.LFB105:
  85:./tmk_core/common/keyboard.c **** }
  86:./tmk_core/common/keyboard.c **** 
  87:./tmk_core/common/keyboard.c **** void keyboard_init(void) {
  50               		.loc 1 87 26 view -0
  51               		.cfi_startproc
  52               	/* prologue: function */
  53               	/* frame size = 0 */
  54               	/* stack size = 0 */
  55               	.L__stack_usage = 0
  88:./tmk_core/common/keyboard.c ****     timer_init();
  56               		.loc 1 88 5 view .LVU5
  57 0000 0E94 0000 		call timer_init
  58               	.LVL1:
  89:./tmk_core/common/keyboard.c ****     matrix_init();
  59               		.loc 1 89 5 view .LVU6
  60 0004 0E94 0000 		call matrix_init
  61               	.LVL2:
  90:./tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
  91:./tmk_core/common/keyboard.c ****     ps2_mouse_init();
  92:./tmk_core/common/keyboard.c **** #endif
  93:./tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
  94:./tmk_core/common/keyboard.c ****     serial_mouse_init();
  95:./tmk_core/common/keyboard.c **** #endif
  96:./tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
  97:./tmk_core/common/keyboard.c ****     adb_mouse_init();
  98:./tmk_core/common/keyboard.c **** #endif
  99:./tmk_core/common/keyboard.c **** #ifdef BOOTMAGIC_ENABLE
 100:./tmk_core/common/keyboard.c ****     bootmagic();
  62               		.loc 1 100 5 view .LVU7
  63 0008 0C94 0000 		jmp bootmagic
  64               	.LVL3:
  65               		.cfi_endproc
  66               	.LFE105:
  68               		.section	.text.keyboard_task,"ax",@progbits
  69               	.global	keyboard_task
  71               	keyboard_task:
  72               	.LFB106:
 101:./tmk_core/common/keyboard.c **** #else
 102:./tmk_core/common/keyboard.c ****     magic();
 103:./tmk_core/common/keyboard.c **** #endif
 104:./tmk_core/common/keyboard.c **** #ifdef BACKLIGHT_ENABLE
 105:./tmk_core/common/keyboard.c ****     backlight_init();
 106:./tmk_core/common/keyboard.c **** #endif
 107:./tmk_core/common/keyboard.c **** #ifdef RGBLIGHT_ENABLE
 108:./tmk_core/common/keyboard.c ****     rgblight_init();
 109:./tmk_core/common/keyboard.c **** #endif
 110:./tmk_core/common/keyboard.c **** #if defined(NKRO_ENABLE) && defined(FORCE_NKRO)
 111:./tmk_core/common/keyboard.c ****     keymap_config.nkro = 1;
 112:./tmk_core/common/keyboard.c **** #endif
 113:./tmk_core/common/keyboard.c **** }
 114:./tmk_core/common/keyboard.c **** 
 115:./tmk_core/common/keyboard.c **** /*
 116:./tmk_core/common/keyboard.c ****  * Do keyboard routine jobs: scan mantrix, light LEDs, ...
 117:./tmk_core/common/keyboard.c ****  * This is repeatedly called as fast as possible.
 118:./tmk_core/common/keyboard.c ****  */
 119:./tmk_core/common/keyboard.c **** void keyboard_task(void)
 120:./tmk_core/common/keyboard.c **** {
  73               		.loc 1 120 1 view -0
  74               		.cfi_startproc
  75 0000 BF92      		push r11
  76               	.LCFI0:
  77               		.cfi_def_cfa_offset 3
  78               		.cfi_offset 11, -2
  79 0002 CF92      		push r12
  80               	.LCFI1:
  81               		.cfi_def_cfa_offset 4
  82               		.cfi_offset 12, -3
  83 0004 DF92      		push r13
  84               	.LCFI2:
  85               		.cfi_def_cfa_offset 5
  86               		.cfi_offset 13, -4
  87 0006 EF92      		push r14
  88               	.LCFI3:
  89               		.cfi_def_cfa_offset 6
  90               		.cfi_offset 14, -5
  91 0008 FF92      		push r15
  92               	.LCFI4:
  93               		.cfi_def_cfa_offset 7
  94               		.cfi_offset 15, -6
  95 000a 0F93      		push r16
  96               	.LCFI5:
  97               		.cfi_def_cfa_offset 8
  98               		.cfi_offset 16, -7
  99 000c 1F93      		push r17
 100               	.LCFI6:
 101               		.cfi_def_cfa_offset 9
 102               		.cfi_offset 17, -8
 103 000e CF93      		push r28
 104               	.LCFI7:
 105               		.cfi_def_cfa_offset 10
 106               		.cfi_offset 28, -9
 107 0010 DF93      		push r29
 108               	.LCFI8:
 109               		.cfi_def_cfa_offset 11
 110               		.cfi_offset 29, -10
 111 0012 CDB7      		in r28,__SP_L__
 112 0014 DEB7      		in r29,__SP_H__
 113               	.LCFI9:
 114               		.cfi_def_cfa_register 28
 115 0016 2A97      		sbiw r28,10
 116               	.LCFI10:
 117               		.cfi_def_cfa_offset 21
 118 0018 0FB6      		in __tmp_reg__,__SREG__
 119 001a F894      		cli
 120 001c DEBF      		out __SP_H__,r29
 121 001e 0FBE      		out __SREG__,__tmp_reg__
 122 0020 CDBF      		out __SP_L__,r28
 123               	/* prologue: function */
 124               	/* frame size = 10 */
 125               	/* stack size = 19 */
 126               	.L__stack_usage = 19
 121:./tmk_core/common/keyboard.c ****     static matrix_row_t matrix_prev[MATRIX_ROWS];
 127               		.loc 1 121 5 view .LVU9
 122:./tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 123:./tmk_core/common/keyboard.c ****     static matrix_row_t matrix_ghost[MATRIX_ROWS];
 124:./tmk_core/common/keyboard.c **** #endif
 125:./tmk_core/common/keyboard.c ****     static uint8_t led_status = 0;
 128               		.loc 1 125 5 view .LVU10
 126:./tmk_core/common/keyboard.c ****     matrix_row_t matrix_row = 0;
 129               		.loc 1 126 5 view .LVU11
 130               	.LVL4:
 127:./tmk_core/common/keyboard.c ****     matrix_row_t matrix_change = 0;
 131               		.loc 1 127 5 view .LVU12
 128:./tmk_core/common/keyboard.c **** 
 129:./tmk_core/common/keyboard.c ****     matrix_scan();
 132               		.loc 1 129 5 view .LVU13
 133 0022 0E94 0000 		call matrix_scan
 134               	.LVL5:
 130:./tmk_core/common/keyboard.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 135               		.loc 1 130 5 view .LVU14
 136               	.LBB6:
 137               		.loc 1 130 10 view .LVU15
 138               		.loc 1 130 10 is_stmt 0 view .LVU16
 139 0026 80E0      		ldi r24,lo8(matrix_prev.5005)
 140 0028 C82E      		mov r12,r24
 141 002a 80E0      		ldi r24,hi8(matrix_prev.5005)
 142 002c D82E      		mov r13,r24
 143               	.LBE6:
 129:./tmk_core/common/keyboard.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 144               		.loc 1 129 5 view .LVU17
 145 002e 10E0      		ldi r17,0
 146 0030 00E0      		ldi r16,0
 147               	.LVL6:
 148               	.L10:
 129:./tmk_core/common/keyboard.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 149               		.loc 1 129 5 view .LVU18
 150 0032 B02E      		mov r11,r16
 151               	.LVL7:
 152               	.LBB9:
 131:./tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 153               		.loc 1 131 9 is_stmt 1 view .LVU19
 154               		.loc 1 131 22 is_stmt 0 view .LVU20
 155 0034 802F      		mov r24,r16
 156 0036 0E94 0000 		call matrix_get_row
 157               	.LVL8:
 158 003a F82E      		mov r15,r24
 159               	.LVL9:
 132:./tmk_core/common/keyboard.c ****         matrix_change = matrix_row ^ matrix_prev[r];
 160               		.loc 1 132 9 is_stmt 1 view .LVU21
 161               		.loc 1 132 49 is_stmt 0 view .LVU22
 162 003c F601      		movw r30,r12
 163 003e E190      		ld r14,Z+
 164 0040 6F01      		movw r12,r30
 165               	.LVL10:
 133:./tmk_core/common/keyboard.c ****         if (matrix_change) {
 166               		.loc 1 133 9 is_stmt 1 view .LVU23
 167               		.loc 1 133 12 is_stmt 0 view .LVU24
 168 0042 E816      		cp r14,r24
 169 0044 01F4      		brne .+2
 170 0046 00C0      		rjmp .L5
 134:./tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 135:./tmk_core/common/keyboard.c ****             if (has_ghost_in_row(r)) {
 136:./tmk_core/common/keyboard.c ****                 /* Keep track of whether ghosted status has changed for
 137:./tmk_core/common/keyboard.c ****                  * debugging. But don't update matrix_prev until un-ghosted, or
 138:./tmk_core/common/keyboard.c ****                  * the last key would be lost.
 139:./tmk_core/common/keyboard.c ****                  */
 140:./tmk_core/common/keyboard.c ****                 if (debug_matrix && matrix_ghost[r] != matrix_row) {
 141:./tmk_core/common/keyboard.c ****                     matrix_print();
 142:./tmk_core/common/keyboard.c ****                 }
 143:./tmk_core/common/keyboard.c ****                 matrix_ghost[r] = matrix_row;
 144:./tmk_core/common/keyboard.c ****                 continue;
 145:./tmk_core/common/keyboard.c ****             }
 146:./tmk_core/common/keyboard.c ****             matrix_ghost[r] = matrix_row;
 147:./tmk_core/common/keyboard.c **** #endif
 148:./tmk_core/common/keyboard.c ****             if (debug_matrix) matrix_print();
 171               		.loc 1 148 13 is_stmt 1 view .LVU25
 172               		.loc 1 148 17 is_stmt 0 view .LVU26
 173 0048 8091 0000 		lds r24,debug_config
 174               		.loc 1 148 16 view .LVU27
 175 004c 81FD      		sbrc r24,1
 176               		.loc 1 148 31 is_stmt 1 discriminator 1 view .LVU28
 177 004e 0E94 0000 		call matrix_print
 178               	.LVL11:
 179               	.L6:
 132:./tmk_core/common/keyboard.c ****         if (matrix_change) {
 180               		.loc 1 132 23 is_stmt 0 view .LVU29
 181 0052 EF24      		eor r14,r15
 182               	.LVL12:
 149:./tmk_core/common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 183               		.loc 1 149 13 is_stmt 1 view .LVU30
 184               	.LBB7:
 185               		.loc 1 149 18 view .LVU31
 150:./tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 186               		.loc 1 150 17 view .LVU32
 187               		.loc 1 150 20 is_stmt 0 view .LVU33
 188 0054 E0FC      		sbrc r14,0
 189 0056 00C0      		rjmp .L12
 190               	.LVL13:
 191               		.loc 1 150 17 is_stmt 1 view .LVU34
 192               		.loc 1 150 20 is_stmt 0 view .LVU35
 193 0058 E1FE      		sbrs r14,1
 194 005a 00C0      		rjmp .L5
 149:./tmk_core/common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 195               		.loc 1 149 51 view .LVU36
 196 005c 91E0      		ldi r25,lo8(1)
 197               		.loc 1 150 21 view .LVU37
 198 005e 81E0      		ldi r24,lo8(1)
 199               	.LVL14:
 200               	.L7:
 151:./tmk_core/common/keyboard.c ****                     action_exec((keyevent_t){
 201               		.loc 1 151 21 is_stmt 1 view .LVU38
 202               		.loc 1 151 45 is_stmt 0 view .LVU39
 203 0060 9E83      		std Y+6,r25
 204 0062 BF82      		std Y+7,r11
 152:./tmk_core/common/keyboard.c ****                         .key = (keypos_t){ .row = r, .col = c },
 153:./tmk_core/common/keyboard.c ****                         .pressed = (matrix_row & ((matrix_row_t)1<<c)),
 205               		.loc 1 153 66 view .LVU40
 206 0064 21E0      		ldi r18,lo8(1)
 207 0066 30E0      		ldi r19,0
 208 0068 6901      		movw r12,r18
 209 006a 00C0      		rjmp 2f
 210               		1:
 211 006c CC0C      		lsl r12
 212 006e DD1C      		rol r13
 213               		2:
 214 0070 8A95      		dec r24
 215 0072 02F4      		brpl 1b
 216               		.loc 1 153 48 view .LVU41
 217 0074 8F2D      		mov r24,r15
 218 0076 90E0      		ldi r25,0
 219 0078 8C21      		and r24,r12
 220 007a 9D21      		and r25,r13
 221 007c 892B      		or r24,r25
 222 007e 01F4      		brne .L8
 223 0080 20E0      		ldi r18,0
 224               	.L8:
 151:./tmk_core/common/keyboard.c ****                     action_exec((keyevent_t){
 225               		.loc 1 151 45 view .LVU42
 226 0082 2887      		std Y+8,r18
 154:./tmk_core/common/keyboard.c ****                         .time = (timer_read() | 1) /* time should not be 0 */
 227               		.loc 1 154 34 view .LVU43
 228 0084 0E94 0000 		call timer_read
 229               	.LVL15:
 230               		.loc 1 154 47 view .LVU44
 231 0088 8160      		ori r24,1
 151:./tmk_core/common/keyboard.c ****                     action_exec((keyevent_t){
 232               		.loc 1 151 45 view .LVU45
 233 008a 782F      		mov r23,r24
 234 008c 9A87      		std Y+10,r25
 235 008e 8987      		std Y+9,r24
 151:./tmk_core/common/keyboard.c ****                     action_exec((keyevent_t){
 236               		.loc 1 151 21 view .LVU46
 237 0090 4E81      		ldd r20,Y+6
 238 0092 5F81      		ldd r21,Y+7
 239 0094 6885      		ldd r22,Y+8
 240 0096 8A85      		ldd r24,Y+10
 241 0098 0E94 0000 		call action_exec
 242               	.LVL16:
 155:./tmk_core/common/keyboard.c ****                     });
 156:./tmk_core/common/keyboard.c ****                     // record a processed key
 157:./tmk_core/common/keyboard.c ****                     matrix_prev[r] ^= ((matrix_row_t)1<<c);
 243               		.loc 1 157 21 is_stmt 1 view .LVU47
 244               		.loc 1 157 36 is_stmt 0 view .LVU48
 245 009c F801      		movw r30,r16
 246 009e E050      		subi r30,lo8(-(matrix_prev.5005))
 247 00a0 F040      		sbci r31,hi8(-(matrix_prev.5005))
 248 00a2 8081      		ld r24,Z
 249 00a4 C826      		eor r12,r24
 250 00a6 C082      		st Z,r12
 158:./tmk_core/common/keyboard.c ****                     // process a key per task call
 159:./tmk_core/common/keyboard.c ****                     goto MATRIX_LOOP_END;
 251               		.loc 1 159 21 is_stmt 1 view .LVU49
 252               	.LVL17:
 253               	.L9:
 254               		.loc 1 159 21 is_stmt 0 view .LVU50
 255               	.LBE7:
 256               	.LBE9:
 160:./tmk_core/common/keyboard.c ****                 }
 161:./tmk_core/common/keyboard.c ****             }
 162:./tmk_core/common/keyboard.c ****         }
 163:./tmk_core/common/keyboard.c ****     }
 164:./tmk_core/common/keyboard.c ****     // call with pseudo tick event when no real key event.
 165:./tmk_core/common/keyboard.c ****     action_exec(TICK);
 166:./tmk_core/common/keyboard.c **** 
 167:./tmk_core/common/keyboard.c **** MATRIX_LOOP_END:
 168:./tmk_core/common/keyboard.c **** 
 169:./tmk_core/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
 170:./tmk_core/common/keyboard.c ****     // mousekey repeat & acceleration
 171:./tmk_core/common/keyboard.c ****     mousekey_task();
 257               		.loc 1 171 5 is_stmt 1 view .LVU51
 258 00a8 0E94 0000 		call mousekey_task
 259               	.LVL18:
 172:./tmk_core/common/keyboard.c **** #endif
 173:./tmk_core/common/keyboard.c **** 
 174:./tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
 175:./tmk_core/common/keyboard.c ****     ps2_mouse_task();
 176:./tmk_core/common/keyboard.c **** #endif
 177:./tmk_core/common/keyboard.c **** 
 178:./tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
 179:./tmk_core/common/keyboard.c ****     serial_mouse_task();
 180:./tmk_core/common/keyboard.c **** #endif
 181:./tmk_core/common/keyboard.c **** 
 182:./tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
 183:./tmk_core/common/keyboard.c ****     adb_mouse_task();
 184:./tmk_core/common/keyboard.c **** #endif
 185:./tmk_core/common/keyboard.c **** 
 186:./tmk_core/common/keyboard.c **** #ifdef SERIAL_LINK_ENABLE
 187:./tmk_core/common/keyboard.c **** 	serial_link_update();
 188:./tmk_core/common/keyboard.c **** #endif
 189:./tmk_core/common/keyboard.c **** 
 190:./tmk_core/common/keyboard.c **** #ifdef VISUALIZER_ENABLE
 191:./tmk_core/common/keyboard.c ****     visualizer_update(default_layer_state, layer_state, host_keyboard_leds());
 192:./tmk_core/common/keyboard.c **** #endif
 193:./tmk_core/common/keyboard.c **** 
 194:./tmk_core/common/keyboard.c ****     // update LED
 195:./tmk_core/common/keyboard.c ****     if (led_status != host_keyboard_leds()) {
 260               		.loc 1 195 5 view .LVU52
 261               		.loc 1 195 23 is_stmt 0 view .LVU53
 262 00ac 0E94 0000 		call host_keyboard_leds
 263               	.LVL19:
 264               		.loc 1 195 8 view .LVU54
 265 00b0 9091 0000 		lds r25,led_status.5006
 266 00b4 8917      		cp r24,r25
 267 00b6 01F0      		breq .L4
 196:./tmk_core/common/keyboard.c ****         led_status = host_keyboard_leds();
 268               		.loc 1 196 9 is_stmt 1 view .LVU55
 269               		.loc 1 196 22 is_stmt 0 view .LVU56
 270 00b8 0E94 0000 		call host_keyboard_leds
 271               	.LVL20:
 272               		.loc 1 196 20 view .LVU57
 273 00bc 8093 0000 		sts led_status.5006,r24
 197:./tmk_core/common/keyboard.c ****         keyboard_set_leds(led_status);
 274               		.loc 1 197 9 is_stmt 1 view .LVU58
 275               	.LVL21:
 276               	.LBB10:
 277               	.LBI10:
 198:./tmk_core/common/keyboard.c ****     }
 199:./tmk_core/common/keyboard.c **** }
 200:./tmk_core/common/keyboard.c **** 
 201:./tmk_core/common/keyboard.c **** void keyboard_set_leds(uint8_t leds)
 278               		.loc 1 201 6 view .LVU59
 279               	.LBB11:
 202:./tmk_core/common/keyboard.c **** {
 203:./tmk_core/common/keyboard.c ****     if (debug_keyboard) { debug("keyboard_set_led: "); debug_hex8(leds); debug("\n"); }
 280               		.loc 1 203 5 view .LVU60
 281               		.loc 1 203 54 view .LVU61
 282               		.loc 1 203 72 view .LVU62
 283               		.loc 1 203 85 view .LVU63
 204:./tmk_core/common/keyboard.c ****     led_set(leds);
 284               		.loc 1 204 5 view .LVU64
 285               	/* epilogue start */
 286               	.LBE11:
 287               	.LBE10:
 199:./tmk_core/common/keyboard.c **** 
 288               		.loc 1 199 1 is_stmt 0 view .LVU65
 289 00c0 2A96      		adiw r28,10
 290 00c2 0FB6      		in __tmp_reg__,__SREG__
 291 00c4 F894      		cli
 292 00c6 DEBF      		out __SP_H__,r29
 293 00c8 0FBE      		out __SREG__,__tmp_reg__
 294 00ca CDBF      		out __SP_L__,r28
 295 00cc DF91      		pop r29
 296 00ce CF91      		pop r28
 297 00d0 1F91      		pop r17
 298 00d2 0F91      		pop r16
 299 00d4 FF90      		pop r15
 300               	.LVL22:
 199:./tmk_core/common/keyboard.c **** 
 301               		.loc 1 199 1 view .LVU66
 302 00d6 EF90      		pop r14
 303 00d8 DF90      		pop r13
 304 00da CF90      		pop r12
 305 00dc BF90      		pop r11
 306               	.LBB13:
 307               	.LBB12:
 308               		.loc 1 204 5 view .LVU67
 309 00de 0C94 0000 		jmp led_set
 310               	.LVL23:
 311               	.L13:
 312               		.loc 1 204 5 view .LVU68
 313               	.LBE12:
 314               	.LBE13:
 315               	.LBB14:
 316 00e2 01E0      		ldi r16,lo8(1)
 317 00e4 10E0      		ldi r17,0
 318               	.LVL24:
 319               		.loc 1 204 5 view .LVU69
 320 00e6 00C0      		rjmp .L10
 321               	.LVL25:
 322               	.L12:
 323               	.LBB8:
 149:./tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 324               		.loc 1 149 26 view .LVU70
 325 00e8 90E0      		ldi r25,0
 150:./tmk_core/common/keyboard.c ****                     action_exec((keyevent_t){
 326               		.loc 1 150 21 view .LVU71
 327 00ea 80E0      		ldi r24,0
 328 00ec 00C0      		rjmp .L7
 329               	.LVL26:
 330               	.L5:
 150:./tmk_core/common/keyboard.c ****                     action_exec((keyevent_t){
 331               		.loc 1 150 21 view .LVU72
 332               	.LBE8:
 130:./tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 333               		.loc 1 130 5 view .LVU73
 334 00ee 0130      		cpi r16,1
 335 00f0 1105      		cpc r17,__zero_reg__
 336 00f2 01F4      		brne .L13
 337               	.LBE14:
 165:./tmk_core/common/keyboard.c **** 
 338               		.loc 1 165 5 is_stmt 1 view .LVU74
 165:./tmk_core/common/keyboard.c **** 
 339               		.loc 1 165 17 is_stmt 0 view .LVU75
 340 00f4 8FEF      		ldi r24,lo8(-1)
 341 00f6 8983      		std Y+1,r24
 342 00f8 8A83      		std Y+2,r24
 343 00fa 1B82      		std Y+3,__zero_reg__
 344 00fc 0E94 0000 		call timer_read
 345               	.LVL27:
 346 0100 8160      		ori r24,1
 347 0102 782F      		mov r23,r24
 348 0104 9D83      		std Y+5,r25
 349 0106 8C83      		std Y+4,r24
 165:./tmk_core/common/keyboard.c **** 
 350               		.loc 1 165 5 view .LVU76
 351 0108 4981      		ldd r20,Y+1
 352 010a 5A81      		ldd r21,Y+2
 353 010c 6B81      		ldd r22,Y+3
 354 010e 8D81      		ldd r24,Y+5
 355 0110 0E94 0000 		call action_exec
 356               	.LVL28:
 357 0114 00C0      		rjmp .L9
 358               	.LVL29:
 359               	.L4:
 360               	/* epilogue start */
 199:./tmk_core/common/keyboard.c **** 
 361               		.loc 1 199 1 view .LVU77
 362 0116 2A96      		adiw r28,10
 363 0118 0FB6      		in __tmp_reg__,__SREG__
 364 011a F894      		cli
 365 011c DEBF      		out __SP_H__,r29
 366 011e 0FBE      		out __SREG__,__tmp_reg__
 367 0120 CDBF      		out __SP_L__,r28
 368 0122 DF91      		pop r29
 369 0124 CF91      		pop r28
 370 0126 1F91      		pop r17
 371 0128 0F91      		pop r16
 372 012a FF90      		pop r15
 373               	.LVL30:
 199:./tmk_core/common/keyboard.c **** 
 374               		.loc 1 199 1 view .LVU78
 375 012c EF90      		pop r14
 376 012e DF90      		pop r13
 377 0130 CF90      		pop r12
 378 0132 BF90      		pop r11
 379 0134 0895      		ret
 380               		.cfi_endproc
 381               	.LFE106:
 383               		.section	.text.keyboard_set_leds,"ax",@progbits
 384               	.global	keyboard_set_leds
 386               	keyboard_set_leds:
 387               	.LVL31:
 388               	.LFB107:
 202:./tmk_core/common/keyboard.c ****     if (debug_keyboard) { debug("keyboard_set_led: "); debug_hex8(leds); debug("\n"); }
 389               		.loc 1 202 1 is_stmt 1 view -0
 390               		.cfi_startproc
 391               	/* prologue: function */
 392               	/* frame size = 0 */
 393               	/* stack size = 0 */
 394               	.L__stack_usage = 0
 203:./tmk_core/common/keyboard.c ****     led_set(leds);
 395               		.loc 1 203 5 view .LVU80
 203:./tmk_core/common/keyboard.c ****     led_set(leds);
 396               		.loc 1 203 54 view .LVU81
 203:./tmk_core/common/keyboard.c ****     led_set(leds);
 397               		.loc 1 203 72 view .LVU82
 203:./tmk_core/common/keyboard.c ****     led_set(leds);
 398               		.loc 1 203 85 view .LVU83
 399               		.loc 1 204 5 view .LVU84
 400 0000 0C94 0000 		jmp led_set
 401               	.LVL32:
 402               		.loc 1 204 5 is_stmt 0 view .LVU85
 403               		.cfi_endproc
 404               	.LFE107:
 406               		.section	.bss.led_status.5006,"aw",@nobits
 409               	led_status.5006:
 410 0000 00        		.zero	1
 411               		.section	.bss.matrix_prev.5005,"aw",@nobits
 414               	matrix_prev.5005:
 415 0000 0000      		.zero	2
 416               		.text
 417               	.Letext0:
 418               		.file 2 "c:\\msys64\\home\\pc-office\\qmk_utils\\avr8-gnu-toolchain\\avr\\include\\stdint.h"
 419               		.file 3 "./tmk_core/common/keyboard.h"
 420               		.file 4 "./tmk_core/common/matrix.h"
 421               		.file 5 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../StdRequestType.h"
 422               		.file 6 "./tmk_core/common/action.h"
 423               		.file 7 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../DeviceStandardReq.h"
 424               		.file 8 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/USBTask.h"
 425               		.file 9 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/HostStandardReq.h"
 426               		.file 10 "c:\\msys64\\home\\pc-office\\qmk_utils\\avr8-gnu-toolchain\\avr\\include\\stdio.h"
 427               		.file 11 "./tmk_core/common/host.h"
 428               		.file 12 "./tmk_core/common/debug.h"
 429               		.file 13 "./quantum/keycode_config.h"
 430               		.file 14 "./quantum/keymap.h"
 431               		.file 15 "./tmk_core/common/timer.h"
 432               		.file 16 "./tmk_core/common/command.h"
 433               		.file 17 "./tmk_core/common/action_layer.h"
 434               		.file 18 "./tmk_core/common/mousekey.h"
 435               		.file 19 "./tmk_core/common/led.h"
 436               		.file 20 "./tmk_core/common/bootmagic.h"
DEFINED SYMBOLS
                            *ABS*:00000000 keyboard.c
C:\msys64\tmp\ccJrXKTm.s:2      *ABS*:0000003e __SP_H__
C:\msys64\tmp\ccJrXKTm.s:3      *ABS*:0000003d __SP_L__
C:\msys64\tmp\ccJrXKTm.s:4      *ABS*:0000003f __SREG__
C:\msys64\tmp\ccJrXKTm.s:5      *ABS*:00000000 __tmp_reg__
C:\msys64\tmp\ccJrXKTm.s:6      *ABS*:00000001 __zero_reg__
C:\msys64\tmp\ccJrXKTm.s:13     .text.matrix_setup:00000000 matrix_setup
C:\msys64\tmp\ccJrXKTm.s:31     .text.keyboard_setup:00000000 keyboard_setup
C:\msys64\tmp\ccJrXKTm.s:48     .text.keyboard_init:00000000 keyboard_init
C:\msys64\tmp\ccJrXKTm.s:71     .text.keyboard_task:00000000 keyboard_task
C:\msys64\tmp\ccJrXKTm.s:414    .bss.matrix_prev.5005:00000000 matrix_prev.5005
C:\msys64\tmp\ccJrXKTm.s:409    .bss.led_status.5006:00000000 led_status.5006
C:\msys64\tmp\ccJrXKTm.s:386    .text.keyboard_set_leds:00000000 keyboard_set_leds

UNDEFINED SYMBOLS
timer_init
matrix_init
bootmagic
matrix_scan
matrix_get_row
debug_config
matrix_print
timer_read
action_exec
mousekey_task
host_keyboard_leds
led_set
__do_clear_bss
