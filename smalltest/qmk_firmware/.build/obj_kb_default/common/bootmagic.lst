   1               		.file	"bootmagic.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.scan_keycode,"ax",@progbits
  12               	scan_keycode:
  13               	.LVL0:
  14               	.LFB104:
  15               		.file 1 "./tmk_core/common/bootmagic.c"
   1:./tmk_core/common/bootmagic.c **** #include <stdint.h>
   2:./tmk_core/common/bootmagic.c **** #include <stdbool.h>
   3:./tmk_core/common/bootmagic.c **** #include "wait.h"
   4:./tmk_core/common/bootmagic.c **** #include "matrix.h"
   5:./tmk_core/common/bootmagic.c **** #include "bootloader.h"
   6:./tmk_core/common/bootmagic.c **** #include "debug.h"
   7:./tmk_core/common/bootmagic.c **** #include "keymap.h"
   8:./tmk_core/common/bootmagic.c **** #include "host.h"
   9:./tmk_core/common/bootmagic.c **** #include "action_layer.h"
  10:./tmk_core/common/bootmagic.c **** #include "eeconfig.h"
  11:./tmk_core/common/bootmagic.c **** #include "bootmagic.h"
  12:./tmk_core/common/bootmagic.c **** 
  13:./tmk_core/common/bootmagic.c **** keymap_config_t keymap_config;
  14:./tmk_core/common/bootmagic.c **** 
  15:./tmk_core/common/bootmagic.c **** void bootmagic(void)
  16:./tmk_core/common/bootmagic.c **** {
  17:./tmk_core/common/bootmagic.c ****     /* check signature */
  18:./tmk_core/common/bootmagic.c ****     if (!eeconfig_is_enabled()) {
  19:./tmk_core/common/bootmagic.c ****         eeconfig_init();
  20:./tmk_core/common/bootmagic.c ****     }
  21:./tmk_core/common/bootmagic.c **** 
  22:./tmk_core/common/bootmagic.c ****     /* do scans in case of bounce */
  23:./tmk_core/common/bootmagic.c ****     print("bootmagic scan: ... ");
  24:./tmk_core/common/bootmagic.c ****     uint8_t scan = 100;
  25:./tmk_core/common/bootmagic.c ****     while (scan--) { matrix_scan(); wait_ms(10); }
  26:./tmk_core/common/bootmagic.c ****     print("done.\n");
  27:./tmk_core/common/bootmagic.c **** 
  28:./tmk_core/common/bootmagic.c ****     /* bootmagic skip */
  29:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SKIP)) {
  30:./tmk_core/common/bootmagic.c ****         return;
  31:./tmk_core/common/bootmagic.c ****     }
  32:./tmk_core/common/bootmagic.c **** 
  33:./tmk_core/common/bootmagic.c ****     /* eeconfig clear */
  34:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_EEPROM_CLEAR)) {
  35:./tmk_core/common/bootmagic.c ****         eeconfig_init();
  36:./tmk_core/common/bootmagic.c ****     }
  37:./tmk_core/common/bootmagic.c **** 
  38:./tmk_core/common/bootmagic.c ****     /* bootloader */
  39:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_BOOTLOADER)) {
  40:./tmk_core/common/bootmagic.c ****         bootloader_jump();
  41:./tmk_core/common/bootmagic.c ****     }
  42:./tmk_core/common/bootmagic.c **** 
  43:./tmk_core/common/bootmagic.c ****     /* debug enable */
  44:./tmk_core/common/bootmagic.c ****     debug_config.raw = eeconfig_read_debug();
  45:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_ENABLE)) {
  46:./tmk_core/common/bootmagic.c ****         if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_MATRIX)) {
  47:./tmk_core/common/bootmagic.c ****             debug_config.matrix = !debug_config.matrix;
  48:./tmk_core/common/bootmagic.c ****         } else if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_KEYBOARD)) {
  49:./tmk_core/common/bootmagic.c ****             debug_config.keyboard = !debug_config.keyboard;
  50:./tmk_core/common/bootmagic.c ****         } else if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_MOUSE)) {
  51:./tmk_core/common/bootmagic.c ****             debug_config.mouse = !debug_config.mouse;
  52:./tmk_core/common/bootmagic.c ****         } else {
  53:./tmk_core/common/bootmagic.c ****             debug_config.enable = !debug_config.enable;
  54:./tmk_core/common/bootmagic.c ****         }
  55:./tmk_core/common/bootmagic.c ****     }
  56:./tmk_core/common/bootmagic.c ****     eeconfig_update_debug(debug_config.raw);
  57:./tmk_core/common/bootmagic.c **** 
  58:./tmk_core/common/bootmagic.c ****     /* keymap config */
  59:./tmk_core/common/bootmagic.c ****     keymap_config.raw = eeconfig_read_keymap();
  60:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_CONTROL_CAPSLOCK)) {
  61:./tmk_core/common/bootmagic.c ****         keymap_config.swap_control_capslock = !keymap_config.swap_control_capslock;
  62:./tmk_core/common/bootmagic.c ****     }
  63:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_CAPSLOCK_TO_CONTROL)) {
  64:./tmk_core/common/bootmagic.c ****         keymap_config.capslock_to_control = !keymap_config.capslock_to_control;
  65:./tmk_core/common/bootmagic.c ****     }
  66:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_LALT_LGUI)) {
  67:./tmk_core/common/bootmagic.c ****         keymap_config.swap_lalt_lgui = !keymap_config.swap_lalt_lgui;
  68:./tmk_core/common/bootmagic.c ****     }
  69:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_RALT_RGUI)) {
  70:./tmk_core/common/bootmagic.c ****         keymap_config.swap_ralt_rgui = !keymap_config.swap_ralt_rgui;
  71:./tmk_core/common/bootmagic.c ****     }
  72:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_NO_GUI)) {
  73:./tmk_core/common/bootmagic.c ****         keymap_config.no_gui = !keymap_config.no_gui;
  74:./tmk_core/common/bootmagic.c ****     }
  75:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_GRAVE_ESC)) {
  76:./tmk_core/common/bootmagic.c ****         keymap_config.swap_grave_esc = !keymap_config.swap_grave_esc;
  77:./tmk_core/common/bootmagic.c ****     }
  78:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_BACKSLASH_BACKSPACE)) {
  79:./tmk_core/common/bootmagic.c ****         keymap_config.swap_backslash_backspace = !keymap_config.swap_backslash_backspace;
  80:./tmk_core/common/bootmagic.c ****     }
  81:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_HOST_NKRO)) {
  82:./tmk_core/common/bootmagic.c ****         keymap_config.nkro = !keymap_config.nkro;
  83:./tmk_core/common/bootmagic.c ****     }
  84:./tmk_core/common/bootmagic.c ****     eeconfig_update_keymap(keymap_config.raw);
  85:./tmk_core/common/bootmagic.c **** 
  86:./tmk_core/common/bootmagic.c ****     /* default layer */
  87:./tmk_core/common/bootmagic.c ****     uint8_t default_layer = 0;
  88:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_0)) { default_layer |= (1<<0); }
  89:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_1)) { default_layer |= (1<<1); }
  90:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_2)) { default_layer |= (1<<2); }
  91:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_3)) { default_layer |= (1<<3); }
  92:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_4)) { default_layer |= (1<<4); }
  93:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_5)) { default_layer |= (1<<5); }
  94:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_6)) { default_layer |= (1<<6); }
  95:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_7)) { default_layer |= (1<<7); }
  96:./tmk_core/common/bootmagic.c ****     if (default_layer) {
  97:./tmk_core/common/bootmagic.c ****         eeconfig_update_default_layer(default_layer);
  98:./tmk_core/common/bootmagic.c ****         default_layer_set((uint32_t)default_layer);
  99:./tmk_core/common/bootmagic.c ****     } else {
 100:./tmk_core/common/bootmagic.c ****         default_layer = eeconfig_read_default_layer();
 101:./tmk_core/common/bootmagic.c ****         default_layer_set((uint32_t)default_layer);
 102:./tmk_core/common/bootmagic.c ****     }
 103:./tmk_core/common/bootmagic.c **** }
 104:./tmk_core/common/bootmagic.c **** 
 105:./tmk_core/common/bootmagic.c **** static bool scan_keycode(uint8_t keycode)
 106:./tmk_core/common/bootmagic.c **** {
  16               		.loc 1 106 1 view -0
  17               		.cfi_startproc
  18               		.loc 1 106 1 is_stmt 0 view .LVU1
  19 0000 0F93      		push r16
  20               	.LCFI0:
  21               		.cfi_def_cfa_offset 3
  22               		.cfi_offset 16, -2
  23 0002 1F93      		push r17
  24               	.LCFI1:
  25               		.cfi_def_cfa_offset 4
  26               		.cfi_offset 17, -3
  27 0004 CF93      		push r28
  28               	.LCFI2:
  29               		.cfi_def_cfa_offset 5
  30               		.cfi_offset 28, -4
  31 0006 DF93      		push r29
  32               	.LCFI3:
  33               		.cfi_def_cfa_offset 6
  34               		.cfi_offset 29, -5
  35               	/* prologue: function */
  36               	/* frame size = 0 */
  37               	/* stack size = 4 */
  38               	.L__stack_usage = 4
 107:./tmk_core/common/bootmagic.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
  39               		.loc 1 107 5 is_stmt 1 view .LVU2
  40               	.LBB4:
  41               		.loc 1 107 10 view .LVU3
  42               	.LVL1:
  43               		.loc 1 107 18 is_stmt 0 view .LVU4
  44 0008 C0E0      		ldi r28,0
  45               	.LBB5:
  46               	.LBB6:
 108:./tmk_core/common/bootmagic.c ****         matrix_row_t matrix_row = matrix_get_row(r);
 109:./tmk_core/common/bootmagic.c ****         for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 110:./tmk_core/common/bootmagic.c ****             if (matrix_row & ((matrix_row_t)1<<c)) {
 111:./tmk_core/common/bootmagic.c ****                 if (keycode == keymap_key_to_keycode(0, (keypos_t){ .row = r, .col = c })) {
  47               		.loc 1 111 29 view .LVU5
  48 000a 082F      		mov r16,r24
  49 000c 10E0      		ldi r17,0
  50               	.LVL2:
  51               	.L5:
  52               		.loc 1 111 29 view .LVU6
  53               	.LBE6:
 108:./tmk_core/common/bootmagic.c ****         matrix_row_t matrix_row = matrix_get_row(r);
  54               		.loc 1 108 9 is_stmt 1 view .LVU7
 108:./tmk_core/common/bootmagic.c ****         matrix_row_t matrix_row = matrix_get_row(r);
  55               		.loc 1 108 35 is_stmt 0 view .LVU8
  56 000e 8C2F      		mov r24,r28
  57 0010 0E94 0000 		call matrix_get_row
  58               	.LVL3:
  59 0014 D82F      		mov r29,r24
  60               	.LVL4:
 109:./tmk_core/common/bootmagic.c ****             if (matrix_row & ((matrix_row_t)1<<c)) {
  61               		.loc 1 109 9 is_stmt 1 view .LVU9
  62               	.LBB7:
 109:./tmk_core/common/bootmagic.c ****             if (matrix_row & ((matrix_row_t)1<<c)) {
  63               		.loc 1 109 14 view .LVU10
 110:./tmk_core/common/bootmagic.c ****                 if (keycode == keymap_key_to_keycode(0, (keypos_t){ .row = r, .col = c })) {
  64               		.loc 1 110 13 view .LVU11
 110:./tmk_core/common/bootmagic.c ****                 if (keycode == keymap_key_to_keycode(0, (keypos_t){ .row = r, .col = c })) {
  65               		.loc 1 110 16 is_stmt 0 view .LVU12
  66 0016 80FF      		sbrs r24,0
  67 0018 00C0      		rjmp .L2
  68               		.loc 1 111 17 is_stmt 1 view .LVU13
  69               		.loc 1 111 32 is_stmt 0 view .LVU14
  70 001a 60E0      		ldi r22,0
  71 001c 7C2F      		mov r23,r28
  72 001e 80E0      		ldi r24,0
  73               	.LVL5:
  74               		.loc 1 111 32 view .LVU15
  75 0020 0E94 0000 		call keymap_key_to_keycode
  76               	.LVL6:
  77               		.loc 1 111 20 view .LVU16
  78 0024 0817      		cp r16,r24
  79 0026 1907      		cpc r17,r25
  80 0028 01F0      		breq .L7
  81               	.L2:
  82               	.LVL7:
 110:./tmk_core/common/bootmagic.c ****                 if (keycode == keymap_key_to_keycode(0, (keypos_t){ .row = r, .col = c })) {
  83               		.loc 1 110 13 is_stmt 1 view .LVU17
 110:./tmk_core/common/bootmagic.c ****                 if (keycode == keymap_key_to_keycode(0, (keypos_t){ .row = r, .col = c })) {
  84               		.loc 1 110 16 is_stmt 0 view .LVU18
  85 002a D1FD      		sbrc r29,1
  86 002c 00C0      		rjmp .L4
  87               	.L6:
  88               	.LVL8:
 110:./tmk_core/common/bootmagic.c ****                 if (keycode == keymap_key_to_keycode(0, (keypos_t){ .row = r, .col = c })) {
  89               		.loc 1 110 16 view .LVU19
  90               	.LBE7:
  91               	.LBE5:
 107:./tmk_core/common/bootmagic.c ****         matrix_row_t matrix_row = matrix_get_row(r);
  92               		.loc 1 107 5 view .LVU20
  93 002e C130      		cpi r28,lo8(1)
  94 0030 01F4      		brne .L8
  95               	.LBE4:
 112:./tmk_core/common/bootmagic.c ****                     return true;
 113:./tmk_core/common/bootmagic.c ****                 }
 114:./tmk_core/common/bootmagic.c ****             }
 115:./tmk_core/common/bootmagic.c ****         }
 116:./tmk_core/common/bootmagic.c ****     }
 117:./tmk_core/common/bootmagic.c ****     return false;
  96               		.loc 1 117 12 view .LVU21
  97 0032 80E0      		ldi r24,0
  98               	.LVL9:
  99               	.L1:
 100               	/* epilogue start */
 118:./tmk_core/common/bootmagic.c **** }
 101               		.loc 1 118 1 view .LVU22
 102 0034 DF91      		pop r29
 103               	.LVL10:
 104               		.loc 1 118 1 view .LVU23
 105 0036 CF91      		pop r28
 106 0038 1F91      		pop r17
 107 003a 0F91      		pop r16
 108               	.LVL11:
 109               		.loc 1 118 1 view .LVU24
 110 003c 0895      		ret
 111               	.LVL12:
 112               	.L8:
 113               	.LBB10:
 114               		.loc 1 118 1 view .LVU25
 115 003e C1E0      		ldi r28,lo8(1)
 116               	.LVL13:
 117               		.loc 1 118 1 view .LVU26
 118 0040 00C0      		rjmp .L5
 119               	.LVL14:
 120               	.L4:
 121               	.LBB9:
 122               	.LBB8:
 111:./tmk_core/common/bootmagic.c ****                     return true;
 123               		.loc 1 111 17 is_stmt 1 view .LVU27
 111:./tmk_core/common/bootmagic.c ****                     return true;
 124               		.loc 1 111 32 is_stmt 0 view .LVU28
 125 0042 61E0      		ldi r22,lo8(1)
 126 0044 7C2F      		mov r23,r28
 127 0046 80E0      		ldi r24,0
 128 0048 0E94 0000 		call keymap_key_to_keycode
 129               	.LVL15:
 111:./tmk_core/common/bootmagic.c ****                     return true;
 130               		.loc 1 111 20 view .LVU29
 131 004c 0817      		cp r16,r24
 132 004e 1907      		cpc r17,r25
 133 0050 01F4      		brne .L6
 134               	.LVL16:
 135               	.L7:
 112:./tmk_core/common/bootmagic.c ****                     return true;
 136               		.loc 1 112 28 view .LVU30
 137 0052 81E0      		ldi r24,lo8(1)
 138 0054 00C0      		rjmp .L1
 139               	.LBE8:
 140               	.LBE9:
 141               	.LBE10:
 142               		.cfi_endproc
 143               	.LFE104:
 145               		.section	.text.bootmagic_scan_keycode,"ax",@progbits
 146               	.global	bootmagic_scan_keycode
 148               	bootmagic_scan_keycode:
 149               	.LVL17:
 150               	.LFB105:
 119:./tmk_core/common/bootmagic.c **** 
 120:./tmk_core/common/bootmagic.c **** bool bootmagic_scan_keycode(uint8_t keycode)
 121:./tmk_core/common/bootmagic.c **** {
 151               		.loc 1 121 1 is_stmt 1 view -0
 152               		.cfi_startproc
 153               		.loc 1 121 1 is_stmt 0 view .LVU32
 154 0000 CF93      		push r28
 155               	.LCFI4:
 156               		.cfi_def_cfa_offset 3
 157               		.cfi_offset 28, -2
 158               	/* prologue: function */
 159               	/* frame size = 0 */
 160               	/* stack size = 1 */
 161               	.L__stack_usage = 1
 162 0002 C82F      		mov r28,r24
 122:./tmk_core/common/bootmagic.c ****     if (!scan_keycode(BOOTMAGIC_KEY_SALT)) return false;
 163               		.loc 1 122 5 is_stmt 1 view .LVU33
 164               		.loc 1 122 10 is_stmt 0 view .LVU34
 165 0004 8CE2      		ldi r24,lo8(44)
 166               	.LVL18:
 167               		.loc 1 122 10 view .LVU35
 168 0006 0E94 0000 		call scan_keycode
 169               	.LVL19:
 170               		.loc 1 122 8 view .LVU36
 171 000a 8823      		tst r24
 172 000c 01F0      		breq .L12
 123:./tmk_core/common/bootmagic.c **** 
 124:./tmk_core/common/bootmagic.c ****     return scan_keycode(keycode);
 173               		.loc 1 124 5 is_stmt 1 view .LVU37
 174               		.loc 1 124 12 is_stmt 0 view .LVU38
 175 000e 8C2F      		mov r24,r28
 176               	/* epilogue start */
 125:./tmk_core/common/bootmagic.c **** }...
 177               		.loc 1 125 1 view .LVU39
 178 0010 CF91      		pop r28
 179               	.LVL20:
 124:./tmk_core/common/bootmagic.c ****     return scan_keycode(keycode);
 180               		.loc 1 124 12 view .LVU40
 181 0012 0C94 0000 		jmp scan_keycode
 182               	.LVL21:
 183               	.L12:
 184               		.loc 1 125 1 view .LVU41
 185 0016 80E0      		ldi r24,0
 186               	/* epilogue start */
 187 0018 CF91      		pop r28
 188               	.LVL22:
 189               		.loc 1 125 1 view .LVU42
 190 001a 0895      		ret
 191               		.cfi_endproc
 192               	.LFE105:
 194               		.section	.text.bootmagic,"ax",@progbits
 195               	.global	bootmagic
 197               	bootmagic:
 198               	.LFB103:
  16:./tmk_core/common/bootmagic.c **** {
 199               		.loc 1 16 1 is_stmt 1 view -0
 200               		.cfi_startproc
 201 0000 CF93      		push r28
 202               	.LCFI5:
 203               		.cfi_def_cfa_offset 3
 204               		.cfi_offset 28, -2
 205               	/* prologue: function */
 206               	/* frame size = 0 */
 207               	/* stack size = 1 */
 208               	.L__stack_usage = 1
  18:./tmk_core/common/bootmagic.c ****     if (!eeconfig_is_enabled()) {
 209               		.loc 1 18 5 view .LVU44
  18:./tmk_core/common/bootmagic.c ****     if (!eeconfig_is_enabled()) {
 210               		.loc 1 18 10 is_stmt 0 view .LVU45
 211 0002 0E94 0000 		call eeconfig_is_enabled
 212               	.LVL23:
  18:./tmk_core/common/bootmagic.c ****     if (!eeconfig_is_enabled()) {
 213               		.loc 1 18 8 view .LVU46
 214 0006 8111      		cpse r24,__zero_reg__
 215 0008 00C0      		rjmp .L15
  19:./tmk_core/common/bootmagic.c ****         eeconfig_init();
 216               		.loc 1 19 9 is_stmt 1 view .LVU47
 217 000a 0E94 0000 		call eeconfig_init
 218               	.LVL24:
 219               	.L15:
  16:./tmk_core/common/bootmagic.c **** {
 220               		.loc 1 16 1 is_stmt 0 discriminator 1 view .LVU48
 221 000e C5E6      		ldi r28,lo8(101)
 222 0010 00C0      		rjmp .L16
 223               	.LVL25:
 224               	.L17:
  25:./tmk_core/common/bootmagic.c ****     while (scan--) { matrix_scan(); wait_ms(10); }
 225               		.loc 1 25 22 is_stmt 1 discriminator 2 view .LVU49
 226 0012 0E94 0000 		call matrix_scan
 227               	.LVL26:
  25:./tmk_core/common/bootmagic.c ****     while (scan--) { matrix_scan(); wait_ms(10); }
 228               		.loc 1 25 37 discriminator 2 view .LVU50
 229               	.LBB11:
 230               	.LBI11:
 231               		.file 2 "c:\\msys64\\home\\pc-office\\qmk_utils\\avr8-gnu-toolchain\\avr\\include\\util\\delay.h"
   1:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    All rights reserved.
   5:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
   6:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    Redistribution and use in source and binary forms, with or without
   7:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    modification, are permitted provided that the following conditions are met:
   8:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
   9:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    * Redistributions of source code must retain the above copyright
  10:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****      notice, this list of conditions and the following disclaimer.
  11:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  12:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****      notice, this list of conditions and the following disclaimer in
  14:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****      the documentation and/or other materials provided with the
  15:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****      distribution.
  16:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  17:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    * Neither the name of the copyright holders nor the names of
  18:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****      contributors may be used to endorse or promote products derived
  19:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****      from this software without specific prior written permission.
  20:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  21:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  33:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** /* $Id: delay.h.in 2506 2016-02-08 10:05:45Z joerg_wunsch $ */
  34:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  35:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #ifndef _UTIL_DELAY_H_
  36:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #define _UTIL_DELAY_H_ 1
  37:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  38:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #ifndef __DOXYGEN__
  39:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #  ifndef __HAS_DELAY_CYCLES
  40:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #    define __HAS_DELAY_CYCLES 1
  41:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #  endif
  42:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #endif  /* __DOXYGEN__ */
  43:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  44:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #include <inttypes.h>
  45:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #include <util/delay_basic.h>
  46:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #include <math.h>
  47:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  48:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** /** \file */
  49:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  50:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     \code
  51:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  52:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     //#define F_CPU 14.7456E6
  53:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     #include <util/delay.h>
  54:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     \endcode
  55:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  56:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     \note As an alternative method, it is possible to pass the
  57:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     F_CPU macro down to the compiler from the Makefile.
  58:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     Obviously, in that case, no \c \#define statement should be
  59:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     used.
  60:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  61:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     The functions in this header file are wrappers around the basic
  62:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  63:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     convenience functions where actual time values can be specified
  64:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  65:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     that compile-time constant expressions will be eliminated by
  66:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     compiler optimization so floating-point expressions can be used
  67:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     to calculate the number of delay cycles needed based on the CPU
  68:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     frequency passed by the macro F_CPU.
  69:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  70:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     \note In order for these functions to work as intended, compiler
  71:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  72:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     <em>must</em> be an expression that is a known constant at
  73:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     compile-time.  If these requirements are not met, the resulting
  74:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     delay will be much longer (and basically unpredictable), and
  75:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     applications that otherwise do not use floating-point calculations
  76:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     will experience severe code bloat by the floating-point library
  77:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     routines linked into the application.
  78:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  79:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     The functions available allow the specification of microsecond, and
  80:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     millisecond delays directly, using the application-supplied macro
  81:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  82:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  83:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** */
  84:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  85:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #if !defined(__DOXYGEN__)
  86:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** static __inline__ void _delay_us(double __us) __attribute__((__always_inline__));
  87:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** static __inline__ void _delay_ms(double __ms) __attribute__((__always_inline__));
  88:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #endif
  89:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  90:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #ifndef F_CPU
  91:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** /* prevent compiler error by supplying a default */
  92:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  93:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** /** \ingroup util_delay
  94:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     \def F_CPU
  95:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     \brief CPU frequency in Hz
  96:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
  97:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     The macro F_CPU specifies the CPU frequency to be considered by
  98:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     the delay macros.  This macro is normally supplied by the
  99:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     environment (e.g. from within a project header, or the project's
 100:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     Makefile).  The value 1 MHz here is only provided as a "vanilla"
 101:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     fallback if no such user-provided definition could be found.
 102:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 103:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     In terms of the delay functions, the CPU frequency can be given as
 104:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     a floating-point constant (e.g. 3.6864E6 for 3.6864 MHz).
 105:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     However, the macros in <util/setbaud.h> require it to be an
 106:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****     integer value.
 107:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****  */
 108:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** # define F_CPU 1000000UL
 109:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #endif
 110:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 111:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #ifndef __OPTIMIZE__
 112:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
 113:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #endif
 114:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 115:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 116:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 117:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   __STDC_HOSTED__
 118:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #  include <math.h>
 119:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #endif
 120:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 121:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** /**
 122:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    \ingroup util_delay
 123:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 124:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 125:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 126:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    The macro F_CPU is supposed to be defined to a
 127:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    constant defining the CPU clock frequency (in Hertz).
 128:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 129:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 130:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 131:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    When the user request delay which exceed the maximum possible one,
 132:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 133:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 134:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 135:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    user will not be informed about decreased resolution.
 136:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 137:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 138:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 139:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    values greater than the maximal possible delay, overflows results in
 140:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    no delay i.e., 0ms.
 141:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 142:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    Conversion of \c __ms into clock cycles may not always result in
 143:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    integer.  By default, the clock cycles rounded up to next
 144:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    integer. This ensures that the user gets at least \c __ms
 145:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    microseconds of delay.
 146:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 147:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 148:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 149:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    algorithm can be made to round down, or round to closest integer,
 150:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    respectively.
 151:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 152:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    \note
 153:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 154:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    The implementation of _delay_ms() based on
 155:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 156:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    implementations.  In order to get functionality backward compatible
 157:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    with previous versions, the macro \c "__DELAY_BACKWARD_COMPATIBLE__"
 158:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    must be defined before including this header file. Also, the
 159:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    backward compatible algorithm will be chosen if the code is
 160:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 161:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 162:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****    not available to the compiler then.
 163:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 164:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****  */
 165:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** void
 166:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** _delay_ms(double __ms)
 232               		.loc 2 166 1 discriminator 2 view .LVU51
 233               	.LBB12:
 167:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** {
 168:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 	double __tmp ;
 234               		.loc 2 168 2 discriminator 2 view .LVU52
 169:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 170:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 171:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h ****   __STDC_HOSTED__
 172:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 	uint32_t __ticks_dc;
 235               		.loc 2 172 2 discriminator 2 view .LVU53
 173:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 236               		.loc 2 173 2 discriminator 2 view .LVU54
 174:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 237               		.loc 2 174 2 discriminator 2 view .LVU55
 175:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 176:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 177:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 178:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 179:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 180:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 181:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 182:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 	#else
 183:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 		//round up by default
 184:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 238               		.loc 2 184 3 discriminator 2 view .LVU56
 185:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 	#endif
 186:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 
 187:c:\msys64\home\pc-office\qmk_utils\avr8-gnu-toolchain\avr\include\util\delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 239               		.loc 2 187 2 discriminator 2 view .LVU57
 240 0016 8FE3      		ldi r24,lo8(-25537)
 241 0018 9CE9      		ldi r25,hi8(-25537)
 242 001a 0197      	1:	sbiw r24,1
 243 001c 01F4      		brne 1b
 244 001e 00C0      		rjmp .
 245 0020 0000      		nop
 246               	.LVL27:
 247               	.L16:
 248               		.loc 2 187 2 is_stmt 0 discriminator 2 view .LVU58
 249 0022 C150      		subi r28,lo8(-(-1))
 250               	.LVL28:
 251               		.loc 2 187 2 discriminator 2 view .LVU59
 252               	.LBE12:
 253               	.LBE11:
  25:./tmk_core/common/bootmagic.c ****     while (scan--) { matrix_scan(); wait_ms(10); }
 254               		.loc 1 25 11 discriminator 1 view .LVU60
 255 0024 01F4      		brne .L17
  26:./tmk_core/common/bootmagic.c ****     print("done.\n");
 256               		.loc 1 26 21 is_stmt 1 view .LVU61
  29:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SKIP)) {
 257               		.loc 1 29 5 view .LVU62
  29:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SKIP)) {
 258               		.loc 1 29 9 is_stmt 0 view .LVU63
 259 0026 89E2      		ldi r24,lo8(41)
 260 0028 0E94 0000 		call bootmagic_scan_keycode
 261               	.LVL29:
  29:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SKIP)) {
 262               		.loc 1 29 8 view .LVU64
 263 002c 8111      		cpse r24,__zero_reg__
 264 002e 00C0      		rjmp .L14
  34:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_EEPROM_CLEAR)) {
 265               		.loc 1 34 5 is_stmt 1 view .LVU65
  34:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_EEPROM_CLEAR)) {
 266               		.loc 1 34 9 is_stmt 0 view .LVU66
 267 0030 8AE2      		ldi r24,lo8(42)
 268 0032 0E94 0000 		call bootmagic_scan_keycode
 269               	.LVL30:
  34:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_EEPROM_CLEAR)) {
 270               		.loc 1 34 8 view .LVU67
 271 0036 8111      		cpse r24,__zero_reg__
  35:./tmk_core/common/bootmagic.c ****         eeconfig_init();
 272               		.loc 1 35 9 is_stmt 1 view .LVU68
 273 0038 0E94 0000 		call eeconfig_init
 274               	.LVL31:
 275               	.L19:
  39:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_BOOTLOADER)) {
 276               		.loc 1 39 5 view .LVU69
  39:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_BOOTLOADER)) {
 277               		.loc 1 39 9 is_stmt 0 view .LVU70
 278 003c 85E0      		ldi r24,lo8(5)
 279 003e 0E94 0000 		call bootmagic_scan_keycode
 280               	.LVL32:
  39:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_BOOTLOADER)) {
 281               		.loc 1 39 8 view .LVU71
 282 0042 8111      		cpse r24,__zero_reg__
  40:./tmk_core/common/bootmagic.c ****         bootloader_jump();
 283               		.loc 1 40 9 is_stmt 1 view .LVU72
 284 0044 0E94 0000 		call bootloader_jump
 285               	.LVL33:
 286               	.L20:
  44:./tmk_core/common/bootmagic.c ****     debug_config.raw = eeconfig_read_debug();
 287               		.loc 1 44 5 view .LVU73
  44:./tmk_core/common/bootmagic.c ****     debug_config.raw = eeconfig_read_debug();
 288               		.loc 1 44 24 is_stmt 0 view .LVU74
 289 0048 0E94 0000 		call eeconfig_read_debug
 290               	.LVL34:
  44:./tmk_core/common/bootmagic.c ****     debug_config.raw = eeconfig_read_debug();
 291               		.loc 1 44 22 view .LVU75
 292 004c 8093 0000 		sts debug_config,r24
  45:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_ENABLE)) {
 293               		.loc 1 45 5 is_stmt 1 view .LVU76
  45:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_ENABLE)) {
 294               		.loc 1 45 9 is_stmt 0 view .LVU77
 295 0050 87E0      		ldi r24,lo8(7)
 296 0052 0E94 0000 		call bootmagic_scan_keycode
 297               	.LVL35:
  45:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_ENABLE)) {
 298               		.loc 1 45 8 view .LVU78
 299 0056 8823      		tst r24
 300 0058 01F0      		breq .L21
  46:./tmk_core/common/bootmagic.c ****         if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_MATRIX)) {
 301               		.loc 1 46 9 is_stmt 1 view .LVU79
  46:./tmk_core/common/bootmagic.c ****         if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_MATRIX)) {
 302               		.loc 1 46 13 is_stmt 0 view .LVU80
 303 005a 8BE1      		ldi r24,lo8(27)
 304 005c 0E94 0000 		call bootmagic_scan_keycode
 305               	.LVL36:
  46:./tmk_core/common/bootmagic.c ****         if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_MATRIX)) {
 306               		.loc 1 46 12 view .LVU81
 307 0060 8823      		tst r24
 308 0062 01F4      		brne .+2
 309 0064 00C0      		rjmp .L22
  47:./tmk_core/common/bootmagic.c ****             debug_config.matrix = !debug_config.matrix;
 310               		.loc 1 47 13 is_stmt 1 view .LVU82
  47:./tmk_core/common/bootmagic.c ****             debug_config.matrix = !debug_config.matrix;
 311               		.loc 1 47 48 is_stmt 0 view .LVU83
 312 0066 9091 0000 		lds r25,debug_config
  47:./tmk_core/common/bootmagic.c ****             debug_config.matrix = !debug_config.matrix;
 313               		.loc 1 47 33 view .LVU84
 314 006a 892F      		mov r24,r25
 315 006c 8D7F      		andi r24,~(1<<1)
 316 006e 91FF      		sbrs r25,1
 317 0070 8260      		ori r24,1<<1
 318               	.L93:
  53:./tmk_core/common/bootmagic.c ****             debug_config.enable = !debug_config.enable;
 319               		.loc 1 53 33 view .LVU85
 320 0072 8093 0000 		sts debug_config,r24
 321               	.L21:
  56:./tmk_core/common/bootmagic.c ****     eeconfig_update_debug(debug_config.raw);
 322               		.loc 1 56 5 is_stmt 1 view .LVU86
 323 0076 8091 0000 		lds r24,debug_config
 324 007a 0E94 0000 		call eeconfig_update_debug
 325               	.LVL37:
  59:./tmk_core/common/bootmagic.c ****     keymap_config.raw = eeconfig_read_keymap();
 326               		.loc 1 59 5 view .LVU87
  59:./tmk_core/common/bootmagic.c ****     keymap_config.raw = eeconfig_read_keymap();
 327               		.loc 1 59 25 is_stmt 0 view .LVU88
 328 007e 0E94 0000 		call eeconfig_read_keymap
 329               	.LVL38:
 330 0082 90E0      		ldi r25,0
 331 0084 9093 0000 		sts keymap_config+1,r25
 332 0088 8093 0000 		sts keymap_config,r24
  60:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_CONTROL_CAPSLOCK)) {
 333               		.loc 1 60 5 is_stmt 1 view .LVU89
  60:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_CONTROL_CAPSLOCK)) {
 334               		.loc 1 60 9 is_stmt 0 view .LVU90
 335 008c 80EE      		ldi r24,lo8(-32)
 336 008e 0E94 0000 		call bootmagic_scan_keycode
 337               	.LVL39:
  60:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_CONTROL_CAPSLOCK)) {
 338               		.loc 1 60 8 view .LVU91
 339 0092 8823      		tst r24
 340 0094 01F0      		breq .L25
  61:./tmk_core/common/bootmagic.c ****         keymap_config.swap_control_capslock = !keymap_config.swap_control_capslock;
 341               		.loc 1 61 9 is_stmt 1 view .LVU92
  61:./tmk_core/common/bootmagic.c ****         keymap_config.swap_control_capslock = !keymap_config.swap_control_capslock;
 342               		.loc 1 61 61 is_stmt 0 view .LVU93
 343 0096 9091 0000 		lds r25,keymap_config
  61:./tmk_core/common/bootmagic.c ****         keymap_config.swap_control_capslock = !keymap_config.swap_control_capslock;
 344               		.loc 1 61 45 view .LVU94
 345 009a 892F      		mov r24,r25
 346 009c 8E7F      		andi r24,~(1<<0)
 347 009e 90FF      		sbrs r25,0
 348 00a0 8160      		ori r24,1<<0
 349 00a2 8093 0000 		sts keymap_config,r24
 350               	.L25:
  63:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_CAPSLOCK_TO_CONTROL)) {
 351               		.loc 1 63 5 is_stmt 1 view .LVU95
  63:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_CAPSLOCK_TO_CONTROL)) {
 352               		.loc 1 63 9 is_stmt 0 view .LVU96
 353 00a6 89E3      		ldi r24,lo8(57)
 354 00a8 0E94 0000 		call bootmagic_scan_keycode
 355               	.LVL40:
  63:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_CAPSLOCK_TO_CONTROL)) {
 356               		.loc 1 63 8 view .LVU97
 357 00ac 8823      		tst r24
 358 00ae 01F0      		breq .L26
  64:./tmk_core/common/bootmagic.c ****         keymap_config.capslock_to_control = !keymap_config.capslock_to_control;
 359               		.loc 1 64 9 is_stmt 1 view .LVU98
  64:./tmk_core/common/bootmagic.c ****         keymap_config.capslock_to_control = !keymap_config.capslock_to_control;
 360               		.loc 1 64 59 is_stmt 0 view .LVU99
 361 00b0 9091 0000 		lds r25,keymap_config
  64:./tmk_core/common/bootmagic.c ****         keymap_config.capslock_to_control = !keymap_config.capslock_to_control;
 362               		.loc 1 64 43 view .LVU100
 363 00b4 892F      		mov r24,r25
 364 00b6 8D7F      		andi r24,~(1<<1)
 365 00b8 91FF      		sbrs r25,1
 366 00ba 8260      		ori r24,1<<1
 367 00bc 8093 0000 		sts keymap_config,r24
 368               	.L26:
  66:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_LALT_LGUI)) {
 369               		.loc 1 66 5 is_stmt 1 view .LVU101
  66:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_LALT_LGUI)) {
 370               		.loc 1 66 9 is_stmt 0 view .LVU102
 371 00c0 82EE      		ldi r24,lo8(-30)
 372 00c2 0E94 0000 		call bootmagic_scan_keycode
 373               	.LVL41:
  66:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_LALT_LGUI)) {
 374               		.loc 1 66 8 view .LVU103
 375 00c6 8823      		tst r24
 376 00c8 01F0      		breq .L27
  67:./tmk_core/common/bootmagic.c ****         keymap_config.swap_lalt_lgui = !keymap_config.swap_lalt_lgui;
 377               		.loc 1 67 9 is_stmt 1 view .LVU104
  67:./tmk_core/common/bootmagic.c ****         keymap_config.swap_lalt_lgui = !keymap_config.swap_lalt_lgui;
 378               		.loc 1 67 54 is_stmt 0 view .LVU105
 379 00ca 9091 0000 		lds r25,keymap_config
  67:./tmk_core/common/bootmagic.c ****         keymap_config.swap_lalt_lgui = !keymap_config.swap_lalt_lgui;
 380               		.loc 1 67 38 view .LVU106
 381 00ce 892F      		mov r24,r25
 382 00d0 8B7F      		andi r24,~(1<<2)
 383 00d2 92FF      		sbrs r25,2
 384 00d4 8460      		ori r24,1<<2
 385 00d6 8093 0000 		sts keymap_config,r24
 386               	.L27:
  69:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_RALT_RGUI)) {
 387               		.loc 1 69 5 is_stmt 1 view .LVU107
  69:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_RALT_RGUI)) {
 388               		.loc 1 69 9 is_stmt 0 view .LVU108
 389 00da 86EE      		ldi r24,lo8(-26)
 390 00dc 0E94 0000 		call bootmagic_scan_keycode
 391               	.LVL42:
  69:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_RALT_RGUI)) {
 392               		.loc 1 69 8 view .LVU109
 393 00e0 8823      		tst r24
 394 00e2 01F0      		breq .L28
  70:./tmk_core/common/bootmagic.c ****         keymap_config.swap_ralt_rgui = !keymap_config.swap_ralt_rgui;
 395               		.loc 1 70 9 is_stmt 1 view .LVU110
  70:./tmk_core/common/bootmagic.c ****         keymap_config.swap_ralt_rgui = !keymap_config.swap_ralt_rgui;
 396               		.loc 1 70 54 is_stmt 0 view .LVU111
 397 00e4 9091 0000 		lds r25,keymap_config
  70:./tmk_core/common/bootmagic.c ****         keymap_config.swap_ralt_rgui = !keymap_config.swap_ralt_rgui;
 398               		.loc 1 70 38 view .LVU112
 399 00e8 892F      		mov r24,r25
 400 00ea 877F      		andi r24,~(1<<3)
 401 00ec 93FF      		sbrs r25,3
 402 00ee 8860      		ori r24,1<<3
 403 00f0 8093 0000 		sts keymap_config,r24
 404               	.L28:
  72:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_NO_GUI)) {
 405               		.loc 1 72 5 is_stmt 1 view .LVU113
  72:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_NO_GUI)) {
 406               		.loc 1 72 9 is_stmt 0 view .LVU114
 407 00f4 83EE      		ldi r24,lo8(-29)
 408 00f6 0E94 0000 		call bootmagic_scan_keycode
 409               	.LVL43:
  72:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_NO_GUI)) {
 410               		.loc 1 72 8 view .LVU115
 411 00fa 8823      		tst r24
 412 00fc 01F0      		breq .L29
  73:./tmk_core/common/bootmagic.c ****         keymap_config.no_gui = !keymap_config.no_gui;
 413               		.loc 1 73 9 is_stmt 1 view .LVU116
  73:./tmk_core/common/bootmagic.c ****         keymap_config.no_gui = !keymap_config.no_gui;
 414               		.loc 1 73 46 is_stmt 0 view .LVU117
 415 00fe 9091 0000 		lds r25,keymap_config
  73:./tmk_core/common/bootmagic.c ****         keymap_config.no_gui = !keymap_config.no_gui;
 416               		.loc 1 73 30 view .LVU118
 417 0102 892F      		mov r24,r25
 418 0104 8F7E      		andi r24,~(1<<4)
 419 0106 94FF      		sbrs r25,4
 420 0108 8061      		ori r24,1<<4
 421 010a 8093 0000 		sts keymap_config,r24
 422               	.L29:
  75:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_GRAVE_ESC)) {
 423               		.loc 1 75 5 is_stmt 1 view .LVU119
  75:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_GRAVE_ESC)) {
 424               		.loc 1 75 9 is_stmt 0 view .LVU120
 425 010e 85E3      		ldi r24,lo8(53)
 426 0110 0E94 0000 		call bootmagic_scan_keycode
 427               	.LVL44:
  75:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_GRAVE_ESC)) {
 428               		.loc 1 75 8 view .LVU121
 429 0114 8823      		tst r24
 430 0116 01F0      		breq .L30
  76:./tmk_core/common/bootmagic.c ****         keymap_config.swap_grave_esc = !keymap_config.swap_grave_esc;
 431               		.loc 1 76 9 is_stmt 1 view .LVU122
  76:./tmk_core/common/bootmagic.c ****         keymap_config.swap_grave_esc = !keymap_config.swap_grave_esc;
 432               		.loc 1 76 54 is_stmt 0 view .LVU123
 433 0118 9091 0000 		lds r25,keymap_config
  76:./tmk_core/common/bootmagic.c ****         keymap_config.swap_grave_esc = !keymap_config.swap_grave_esc;
 434               		.loc 1 76 38 view .LVU124
 435 011c 892F      		mov r24,r25
 436 011e 8F7D      		andi r24,~(1<<5)
 437 0120 95FF      		sbrs r25,5
 438 0122 8062      		ori r24,1<<5
 439 0124 8093 0000 		sts keymap_config,r24
 440               	.L30:
  78:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_BACKSLASH_BACKSPACE)) {
 441               		.loc 1 78 5 is_stmt 1 view .LVU125
  78:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_BACKSLASH_BACKSPACE)) {
 442               		.loc 1 78 9 is_stmt 0 view .LVU126
 443 0128 81E3      		ldi r24,lo8(49)
 444 012a 0E94 0000 		call bootmagic_scan_keycode
 445               	.LVL45:
  78:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_SWAP_BACKSLASH_BACKSPACE)) {
 446               		.loc 1 78 8 view .LVU127
 447 012e 8823      		tst r24
 448 0130 01F0      		breq .L31
  79:./tmk_core/common/bootmagic.c ****         keymap_config.swap_backslash_backspace = !keymap_config.swap_backslash_backspace;
 449               		.loc 1 79 9 is_stmt 1 view .LVU128
  79:./tmk_core/common/bootmagic.c ****         keymap_config.swap_backslash_backspace = !keymap_config.swap_backslash_backspace;
 450               		.loc 1 79 64 is_stmt 0 view .LVU129
 451 0132 9091 0000 		lds r25,keymap_config
  79:./tmk_core/common/bootmagic.c ****         keymap_config.swap_backslash_backspace = !keymap_config.swap_backslash_backspace;
 452               		.loc 1 79 48 view .LVU130
 453 0136 892F      		mov r24,r25
 454 0138 8F7B      		andi r24,~(1<<6)
 455 013a 96FF      		sbrs r25,6
 456 013c 8064      		ori r24,1<<6
 457 013e 8093 0000 		sts keymap_config,r24
 458               	.L31:
  81:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_HOST_NKRO)) {
 459               		.loc 1 81 5 is_stmt 1 view .LVU131
  81:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_HOST_NKRO)) {
 460               		.loc 1 81 9 is_stmt 0 view .LVU132
 461 0142 81E1      		ldi r24,lo8(17)
 462 0144 0E94 0000 		call bootmagic_scan_keycode
 463               	.LVL46:
  81:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_HOST_NKRO)) {
 464               		.loc 1 81 8 view .LVU133
 465 0148 8823      		tst r24
 466 014a 01F0      		breq .L32
  82:./tmk_core/common/bootmagic.c ****         keymap_config.nkro = !keymap_config.nkro;
 467               		.loc 1 82 9 is_stmt 1 view .LVU134
  82:./tmk_core/common/bootmagic.c ****         keymap_config.nkro = !keymap_config.nkro;
 468               		.loc 1 82 44 is_stmt 0 view .LVU135
 469 014c 9091 0000 		lds r25,keymap_config
  82:./tmk_core/common/bootmagic.c ****         keymap_config.nkro = !keymap_config.nkro;
 470               		.loc 1 82 28 view .LVU136
 471 0150 892F      		mov r24,r25
 472 0152 97FB      		bst r25,7
 473 0154 87F9      		bld r24,7
 474 0156 8058      		subi r24,0x80
 475 0158 8093 0000 		sts keymap_config,r24
 476               	.L32:
  84:./tmk_core/common/bootmagic.c ****     eeconfig_update_keymap(keymap_config.raw);
 477               		.loc 1 84 5 is_stmt 1 view .LVU137
 478 015c 8091 0000 		lds r24,keymap_config
 479 0160 0E94 0000 		call eeconfig_update_keymap
 480               	.LVL47:
  87:./tmk_core/common/bootmagic.c ****     uint8_t default_layer = 0;
 481               		.loc 1 87 5 view .LVU138
  88:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_0)) { default_layer |= (1<<0); }
 482               		.loc 1 88 5 view .LVU139
  88:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_0)) { default_layer |= (1<<0); }
 483               		.loc 1 88 9 is_stmt 0 view .LVU140
 484 0164 87E2      		ldi r24,lo8(39)
 485 0166 0E94 0000 		call bootmagic_scan_keycode
 486               	.LVL48:
 487 016a C82F      		mov r28,r24
 488               	.LVL49:
  89:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_1)) { default_layer |= (1<<1); }
 489               		.loc 1 89 5 is_stmt 1 view .LVU141
  89:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_1)) { default_layer |= (1<<1); }
 490               		.loc 1 89 9 is_stmt 0 view .LVU142
 491 016c 8EE1      		ldi r24,lo8(30)
 492               	.LVL50:
  89:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_1)) { default_layer |= (1<<1); }
 493               		.loc 1 89 9 view .LVU143
 494 016e 0E94 0000 		call bootmagic_scan_keycode
 495               	.LVL51:
  89:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_1)) { default_layer |= (1<<1); }
 496               		.loc 1 89 8 view .LVU144
 497 0172 8111      		cpse r24,__zero_reg__
  89:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_1)) { default_layer |= (1<<1); }
 498               		.loc 1 89 66 is_stmt 1 discriminator 1 view .LVU145
  89:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_1)) { default_layer |= (1<<1); }
 499               		.loc 1 89 80 is_stmt 0 discriminator 1 view .LVU146
 500 0174 C260      		ori r28,lo8(2)
 501               	.LVL52:
 502               	.L33:
  90:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_2)) { default_layer |= (1<<2); }
 503               		.loc 1 90 5 is_stmt 1 view .LVU147
  90:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_2)) { default_layer |= (1<<2); }
 504               		.loc 1 90 9 is_stmt 0 view .LVU148
 505 0176 8FE1      		ldi r24,lo8(31)
 506 0178 0E94 0000 		call bootmagic_scan_keycode
 507               	.LVL53:
  90:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_2)) { default_layer |= (1<<2); }
 508               		.loc 1 90 8 view .LVU149
 509 017c 8111      		cpse r24,__zero_reg__
  90:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_2)) { default_layer |= (1<<2); }
 510               		.loc 1 90 66 is_stmt 1 discriminator 1 view .LVU150
  90:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_2)) { default_layer |= (1<<2); }
 511               		.loc 1 90 80 is_stmt 0 discriminator 1 view .LVU151
 512 017e C460      		ori r28,lo8(4)
 513               	.LVL54:
 514               	.L34:
  91:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_3)) { default_layer |= (1<<3); }
 515               		.loc 1 91 5 is_stmt 1 view .LVU152
  91:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_3)) { default_layer |= (1<<3); }
 516               		.loc 1 91 9 is_stmt 0 view .LVU153
 517 0180 80E2      		ldi r24,lo8(32)
 518 0182 0E94 0000 		call bootmagic_scan_keycode
 519               	.LVL55:
  91:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_3)) { default_layer |= (1<<3); }
 520               		.loc 1 91 8 view .LVU154
 521 0186 8111      		cpse r24,__zero_reg__
  91:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_3)) { default_layer |= (1<<3); }
 522               		.loc 1 91 66 is_stmt 1 discriminator 1 view .LVU155
  91:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_3)) { default_layer |= (1<<3); }
 523               		.loc 1 91 80 is_stmt 0 discriminator 1 view .LVU156
 524 0188 C860      		ori r28,lo8(8)
 525               	.LVL56:
 526               	.L35:
  92:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_4)) { default_layer |= (1<<4); }
 527               		.loc 1 92 5 is_stmt 1 view .LVU157
  92:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_4)) { default_layer |= (1<<4); }
 528               		.loc 1 92 9 is_stmt 0 view .LVU158
 529 018a 81E2      		ldi r24,lo8(33)
 530 018c 0E94 0000 		call bootmagic_scan_keycode
 531               	.LVL57:
  92:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_4)) { default_layer |= (1<<4); }
 532               		.loc 1 92 8 view .LVU159
 533 0190 8111      		cpse r24,__zero_reg__
  92:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_4)) { default_layer |= (1<<4); }
 534               		.loc 1 92 66 is_stmt 1 discriminator 1 view .LVU160
  92:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_4)) { default_layer |= (1<<4); }
 535               		.loc 1 92 80 is_stmt 0 discriminator 1 view .LVU161
 536 0192 C061      		ori r28,lo8(16)
 537               	.LVL58:
 538               	.L36:
  93:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_5)) { default_layer |= (1<<5); }
 539               		.loc 1 93 5 is_stmt 1 view .LVU162
  93:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_5)) { default_layer |= (1<<5); }
 540               		.loc 1 93 9 is_stmt 0 view .LVU163
 541 0194 82E2      		ldi r24,lo8(34)
 542 0196 0E94 0000 		call bootmagic_scan_keycode
 543               	.LVL59:
  93:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_5)) { default_layer |= (1<<5); }
 544               		.loc 1 93 8 view .LVU164
 545 019a 8111      		cpse r24,__zero_reg__
  93:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_5)) { default_layer |= (1<<5); }
 546               		.loc 1 93 66 is_stmt 1 discriminator 1 view .LVU165
  93:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_5)) { default_layer |= (1<<5); }
 547               		.loc 1 93 80 is_stmt 0 discriminator 1 view .LVU166
 548 019c C062      		ori r28,lo8(32)
 549               	.LVL60:
 550               	.L37:
  94:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_6)) { default_layer |= (1<<6); }
 551               		.loc 1 94 5 is_stmt 1 view .LVU167
  94:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_6)) { default_layer |= (1<<6); }
 552               		.loc 1 94 9 is_stmt 0 view .LVU168
 553 019e 83E2      		ldi r24,lo8(35)
 554 01a0 0E94 0000 		call bootmagic_scan_keycode
 555               	.LVL61:
  94:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_6)) { default_layer |= (1<<6); }
 556               		.loc 1 94 8 view .LVU169
 557 01a4 8111      		cpse r24,__zero_reg__
  94:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_6)) { default_layer |= (1<<6); }
 558               		.loc 1 94 66 is_stmt 1 discriminator 1 view .LVU170
  94:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_6)) { default_layer |= (1<<6); }
 559               		.loc 1 94 80 is_stmt 0 discriminator 1 view .LVU171
 560 01a6 C064      		ori r28,lo8(64)
 561               	.LVL62:
 562               	.L38:
  95:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_7)) { default_layer |= (1<<7); }
 563               		.loc 1 95 5 is_stmt 1 view .LVU172
  95:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_7)) { default_layer |= (1<<7); }
 564               		.loc 1 95 9 is_stmt 0 view .LVU173
 565 01a8 84E2      		ldi r24,lo8(36)
 566 01aa 0E94 0000 		call bootmagic_scan_keycode
 567               	.LVL63:
  95:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_7)) { default_layer |= (1<<7); }
 568               		.loc 1 95 8 view .LVU174
 569 01ae 8823      		tst r24
 570 01b0 01F0      		breq .L39
  95:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_7)) { default_layer |= (1<<7); }
 571               		.loc 1 95 66 is_stmt 1 discriminator 1 view .LVU175
  95:./tmk_core/common/bootmagic.c ****     if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEFAULT_LAYER_7)) { default_layer |= (1<<7); }
 572               		.loc 1 95 80 is_stmt 0 discriminator 1 view .LVU176
 573 01b2 C068      		ori r28,lo8(-128)
 574               	.LVL64:
  96:./tmk_core/common/bootmagic.c ****     if (default_layer) {
 575               		.loc 1 96 5 is_stmt 1 discriminator 1 view .LVU177
 576               	.L40:
  97:./tmk_core/common/bootmagic.c ****         eeconfig_update_default_layer(default_layer);
 577               		.loc 1 97 9 view .LVU178
 578 01b4 8C2F      		mov r24,r28
 579 01b6 0E94 0000 		call eeconfig_update_default_layer
 580               	.LVL65:
  98:./tmk_core/common/bootmagic.c ****         default_layer_set((uint32_t)default_layer);
 581               		.loc 1 98 9 view .LVU179
 582 01ba 6C2F      		mov r22,r28
 583               	.LVL66:
 584               	.L94:
 101:./tmk_core/common/bootmagic.c ****         default_layer_set((uint32_t)default_layer);
 585               		.loc 1 101 9 is_stmt 0 view .LVU180
 586 01bc 70E0      		ldi r23,0
 587 01be 90E0      		ldi r25,0
 588 01c0 80E0      		ldi r24,0
 589               	/* epilogue start */
 103:./tmk_core/common/bootmagic.c **** }
 590               		.loc 1 103 1 view .LVU181
 591 01c2 CF91      		pop r28
 101:./tmk_core/common/bootmagic.c ****         default_layer_set((uint32_t)default_layer);
 592               		.loc 1 101 9 view .LVU182
 593 01c4 0C94 0000 		jmp default_layer_set
 594               	.LVL67:
 595               	.L22:
  48:./tmk_core/common/bootmagic.c ****         } else if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_KEYBOARD)) {
 596               		.loc 1 48 16 is_stmt 1 view .LVU183
  48:./tmk_core/common/bootmagic.c ****         } else if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_KEYBOARD)) {
 597               		.loc 1 48 20 is_stmt 0 view .LVU184
 598 01c8 8EE0      		ldi r24,lo8(14)
 599 01ca 0E94 0000 		call bootmagic_scan_keycode
 600               	.LVL68:
  48:./tmk_core/common/bootmagic.c ****         } else if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_KEYBOARD)) {
 601               		.loc 1 48 19 view .LVU185
 602 01ce 8823      		tst r24
 603 01d0 01F0      		breq .L23
  49:./tmk_core/common/bootmagic.c ****             debug_config.keyboard = !debug_config.keyboard;
 604               		.loc 1 49 13 is_stmt 1 view .LVU186
  49:./tmk_core/common/bootmagic.c ****             debug_config.keyboard = !debug_config.keyboard;
 605               		.loc 1 49 50 is_stmt 0 view .LVU187
 606 01d2 9091 0000 		lds r25,debug_config
  49:./tmk_core/common/bootmagic.c ****             debug_config.keyboard = !debug_config.keyboard;
 607               		.loc 1 49 35 view .LVU188
 608 01d6 892F      		mov r24,r25
 609 01d8 8B7F      		andi r24,~(1<<2)
 610 01da 92FF      		sbrs r25,2
 611 01dc 8460      		ori r24,1<<2
 612 01de 00C0      		rjmp .L93
 613               	.L23:
  50:./tmk_core/common/bootmagic.c ****         } else if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_MOUSE)) {
 614               		.loc 1 50 16 is_stmt 1 view .LVU189
  50:./tmk_core/common/bootmagic.c ****         } else if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_MOUSE)) {
 615               		.loc 1 50 20 is_stmt 0 view .LVU190
 616 01e0 80E1      		ldi r24,lo8(16)
 617 01e2 0E94 0000 		call bootmagic_scan_keycode
 618               	.LVL69:
 619 01e6 9091 0000 		lds r25,debug_config
  50:./tmk_core/common/bootmagic.c ****         } else if (bootmagic_scan_keycode(BOOTMAGIC_KEY_DEBUG_MOUSE)) {
 620               		.loc 1 50 19 view .LVU191
 621 01ea 8823      		tst r24
 622 01ec 01F0      		breq .L24
  51:./tmk_core/common/bootmagic.c ****             debug_config.mouse = !debug_config.mouse;
 623               		.loc 1 51 13 is_stmt 1 view .LVU192
  51:./tmk_core/common/bootmagic.c ****             debug_config.mouse = !debug_config.mouse;
 624               		.loc 1 51 32 is_stmt 0 view .LVU193
 625 01ee 892F      		mov r24,r25
 626 01f0 877F      		andi r24,~(1<<3)
 627 01f2 93FF      		sbrs r25,3
 628 01f4 8860      		ori r24,1<<3
 629 01f6 00C0      		rjmp .L93
 630               	.L24:
  53:./tmk_core/common/bootmagic.c ****             debug_config.enable = !debug_config.enable;
 631               		.loc 1 53 13 is_stmt 1 view .LVU194
  53:./tmk_core/common/bootmagic.c ****             debug_config.enable = !debug_config.enable;
 632               		.loc 1 53 33 is_stmt 0 view .LVU195
 633 01f8 892F      		mov r24,r25
 634 01fa 8E7F      		andi r24,~(1<<0)
 635 01fc 90FF      		sbrs r25,0
 636 01fe 8160      		ori r24,1<<0
 637 0200 00C0      		rjmp .L93
 638               	.LVL70:
 639               	.L39:
  96:./tmk_core/common/bootmagic.c ****     if (default_layer) {
 640               		.loc 1 96 5 is_stmt 1 view .LVU196
  96:./tmk_core/common/bootmagic.c ****     if (default_layer) {
 641               		.loc 1 96 8 is_stmt 0 view .LVU197
 642 0202 C111      		cpse r28,__zero_reg__
 643 0204 00C0      		rjmp .L40
 100:./tmk_core/common/bootmagic.c ****         default_layer = eeconfig_read_default_layer();
 644               		.loc 1 100 9 is_stmt 1 view .LVU198
 100:./tmk_core/common/bootmagic.c ****         default_layer = eeconfig_read_default_layer();
 645               		.loc 1 100 25 is_stmt 0 view .LVU199
 646 0206 0E94 0000 		call eeconfig_read_default_layer
 647               	.LVL71:
 101:./tmk_core/common/bootmagic.c ****         default_layer_set((uint32_t)default_layer);
 648               		.loc 1 101 9 is_stmt 1 view .LVU200
 649 020a 682F      		mov r22,r24
 650 020c 00C0      		rjmp .L94
 651               	.LVL72:
 652               	.L14:
 653               	/* epilogue start */
 103:./tmk_core/common/bootmagic.c **** }
 654               		.loc 1 103 1 is_stmt 0 view .LVU201
 655 020e CF91      		pop r28
 656               	.LVL73:
 103:./tmk_core/common/bootmagic.c **** }
 657               		.loc 1 103 1 view .LVU202
 658 0210 0895      		ret
 659               		.cfi_endproc
 660               	.LFE103:
 662               		.comm	keymap_config,2,1
 663               		.text
 664               	.Letext0:
 665               		.file 3 "c:\\msys64\\home\\pc-office\\qmk_utils\\avr8-gnu-toolchain\\avr\\include\\stdint.h"
 666               		.file 4 "./tmk_core/common/matrix.h"
 667               		.file 5 "./tmk_core/common/debug.h"
 668               		.file 6 "./tmk_core/common/keyboard.h"
 669               		.file 7 "./tmk_core/common/action.h"
 670               		.file 8 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../StdRequestType.h"
 671               		.file 9 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../DeviceStandardReq.h"
 672               		.file 10 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/USBTask.h"
 673               		.file 11 "./tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/HostStandardReq.h"
 674               		.file 12 "c:\\msys64\\home\\pc-office\\qmk_utils\\avr8-gnu-toolchain\\avr\\include\\stdio.h"
 675               		.file 13 "./tmk_core/common/host.h"
 676               		.file 14 "./quantum/keycode_config.h"
 677               		.file 15 "./quantum/keymap.h"
 678               		.file 16 "./tmk_core/common/action_layer.h"
 679               		.file 17 "./tmk_core/common/eeconfig.h"
 680               		.file 18 "./tmk_core/common/bootloader.h"
 681               		.file 19 "./tmk_core/common/keycode.h"
DEFINED SYMBOLS
                            *ABS*:00000000 bootmagic.c
C:\msys64\tmp\ccUaf7Ak.s:2      *ABS*:0000003e __SP_H__
C:\msys64\tmp\ccUaf7Ak.s:3      *ABS*:0000003d __SP_L__
C:\msys64\tmp\ccUaf7Ak.s:4      *ABS*:0000003f __SREG__
C:\msys64\tmp\ccUaf7Ak.s:5      *ABS*:00000000 __tmp_reg__
C:\msys64\tmp\ccUaf7Ak.s:6      *ABS*:00000001 __zero_reg__
C:\msys64\tmp\ccUaf7Ak.s:12     .text.scan_keycode:00000000 scan_keycode
C:\msys64\tmp\ccUaf7Ak.s:148    .text.bootmagic_scan_keycode:00000000 bootmagic_scan_keycode
C:\msys64\tmp\ccUaf7Ak.s:197    .text.bootmagic:00000000 bootmagic
                            *COM*:00000002 keymap_config

UNDEFINED SYMBOLS
matrix_get_row
keymap_key_to_keycode
eeconfig_is_enabled
eeconfig_init
matrix_scan
bootloader_jump
eeconfig_read_debug
debug_config
eeconfig_update_debug
eeconfig_read_keymap
eeconfig_update_keymap
eeconfig_update_default_layer
default_layer_set
eeconfig_read_default_layer
__do_clear_bss
